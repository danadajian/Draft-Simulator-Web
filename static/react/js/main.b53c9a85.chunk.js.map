{"version":3,"sources":["icons/football.ico","icons/football2.svg","icons/search.ico","icons/cloudy.ico","icons/partlycloudy.ico","icons/rainy.ico","icons/snowy.ico","icons/stormy.ico","icons/sunny.ico","icons/plus.ico","icons/minus.ico","icons/up.ico","icons/down.ico","Homepage.js","DfsGrid.tsx","Optimizer.js","jqxwidgets/react_jqxpopover.js","PlayerListBox.tsx","DraftResultsTable.tsx","Simulator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Homepage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","onClick","window","location","href","origin","Component","cloudy","require","partlyCloudy","rainy","snowy","stormy","sunny","Player","props","forecast","player","Weather","toLowerCase","weatherImage","includes","react","Position","onRemove","style","fontWeight","Team","Name","color","Status","Projected","Price","Opp","display","alignItems","src","alt","height","details","DfsGrid","backgroundColor","site","dfsLineup","map","playerIndex","DfsGrid_Player","removePlayer","Optimizer","_this","call","dfsSportChange","event","newSport","target","fetchOptimalLineups","state","slate","slateChange","newSlate","sport","prevSport","setState","isLoading","fetch","then","response","status","alert","json","lineupJson","ingestDfsLineup","remove","length","fdLineup","dkLineup","removePlayerFromDfsLineup","lineupIndex","_this$state","removedPlayer","method","body","gridSection","_this2","_this$state2","football2","DfsGrid_DfsGrid","Container","fluid","Navbar","bg","variant","Nav","Link","onChange","marginTop","JQXLite","JqxPopover","jqx","widgetId","generateID","componentSelector","id","options","manageAttributes","createComponent","properties","item","itemTwo","indexOf","css","undefined","classes","split","i","addClass","template","html","jqxPopover","Error","resultToReturn","name","callbackFn","on","off","arg","children","React","plus","minus","up","down","Rank","isUserPlayer","flexDirection","onMove","PlayerListBox","borderCollapse","playerList","index","filterList","PlayerListBox_Player","addPlayer","UserListBox","userRoundList","roundIndex","marginBottom","colSpan","textAlign","direction","movePlayer","DraftResultsTable","frequencyData","Round","Frequency","Simulator","fetchPlayersForSimulator","players","handleSliderChange","param","defineProperty","closeAbout","refs","about","close","url","pathname","toString","closeInstructions","instructions","swapRankings","newSite","saveRankings","userPlayers","every","roundList","JSON","stringify","loadRankings","userRanking","allPlayers","concat","flat","sort","b","allLoadedPlayers","_loop","userPlayerRank","findIndex","splice","filteredPlayers","filterPlayers","text","filter","searchText","_this$state3","playerToAdd","push","_this$state4","removedPlayerRank","originalPlayerNeighbor","find","clearPlayers","_this$state5","allUserPlayers","determineIfRandom","isRandom","checked","simulateDrafts","draftCancelled","isDrafting","_this$state6","teamCount","pickOrder","roundCount","playerNames","draftResults","generateDraftOutput","userFreqs","UserFrequencies","allFreqs","AllFrequencies","expectedTeam","ExpectedTeam","toggleFrequencyData","playerListBox","draftResultsTable","_this$state7","football","PlayerListBox_PlayerListBox","DraftResultsTable_DraftResultsTable","swapButtonText","swapButtonColor","react_jqxpopover_JqxPopover","ref","isModal","width","position","title","selector","float","padding","borderRadius","search","type","fontSize","PlayerListBox_UserListBox","borderStyle","min","max","step","App","Homepage_Homepage","Simulator_Simulator","Optimizer_Optimizer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.b53c9a85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/football.c5005feb.ico\";","module.exports = __webpack_public_path__ + \"media/football2.fac02615.svg\";","module.exports = __webpack_public_path__ + \"media/search.04c89f3b.ico\";","module.exports = __webpack_public_path__ + \"media/cloudy.340c3269.ico\";","module.exports = __webpack_public_path__ + \"media/partlycloudy.a5e52894.ico\";","module.exports = __webpack_public_path__ + \"media/rainy.dda0cf39.ico\";","module.exports = __webpack_public_path__ + \"media/snowy.203024ab.ico\";","module.exports = __webpack_public_path__ + \"media/stormy.ca70c957.ico\";","module.exports = __webpack_public_path__ + \"media/sunny.a306062d.ico\";","module.exports = __webpack_public_path__ + \"media/plus.220c44df.ico\";","module.exports = __webpack_public_path__ + \"media/minus.5edbe473.ico\";","module.exports = __webpack_public_path__ + \"media/up.04732abf.ico\";","module.exports = __webpack_public_path__ + \"media/down.61889039.ico\";","import React, { Component } from 'react';\nimport './App.css';\n\nexport class Homepage extends Component {\n\n    render() {\n        return (\n                <div className={'Home'}>\n                    <h1 className={'Home-header'}>Welcome to Draft Simulator!</h1>\n                    <h3 className={'Dfs-header'}>To start, click the link below:</h3>\n                    <div className={\"Home-buttons\"}>\n                    <button onClick={() => {window.location.href = window.location.origin + '/simulate'}}\n                            className={'Site-button'}>Simulator</button>\n                    </div>\n                    <h3 className={'Dfs-header'}>Or, check out our DFS Optimizer:</h3>\n                    <button onClick={() => {window.location.href = window.location.origin + '/optimize'}}\n                            className={'Dfs-button'}>DFS Optimizer</button>\n                    <button onClick={() => {window.location.href = window.location.origin + '/logout'}}\n                            className={'Logout-button'}>Log Out</button>\n                </div>\n        )\n    }\n\n}","import * as React from 'react';\n\ninterface playerAttributes {\n    Position: string,\n    Team: string,\n    Name: string,\n    Status: string,\n    Projected: number,\n    Price: string,\n    Opp: string,\n    Weather: any\n}\n\ninterface playerProps {\n    player: playerAttributes,\n    onRemove: () => void\n}\n\nconst cloudy = require(\"./icons/cloudy.ico\") as any;\nconst partlyCloudy = require(\"./icons/partlycloudy.ico\") as any;\nconst rainy = require(\"./icons/rainy.ico\") as any;\nconst snowy = require(\"./icons/snowy.ico\") as any;\nconst stormy = require(\"./icons/stormy.ico\") as any;\nconst sunny = require(\"./icons/sunny.ico\") as any;\n\nconst Player = (props: playerProps) => {\n    const forecast = (props.player.Weather.forecast) ? props.player.Weather.forecast.toLowerCase() : null;\n    const weatherImage = (props.player.Weather.forecast) ?\n        (forecast.includes('partly')) ? partlyCloudy :\n        (forecast.includes('cloud') || forecast.includes('fog')) ? cloudy :\n        (forecast.includes('storm') || forecast.includes('thunder')) ? stormy :\n        (forecast.includes('rain') || forecast.includes('shower')) ? rainy :\n        (forecast.includes('snow') || forecast.includes('flurr')) ? snowy :\n        (forecast.includes('sun') || forecast.includes('clear')) ? sunny : null\n        : null;\n\n    return (\n        <tr>\n            <td>\n                {props.player.Position && <button onClick={props.onRemove} style={{fontWeight: 'bold'}}>X</button>}\n            </td>\n            <td>{props.player.Position}</td>\n            <td>{props.player.Team}</td>\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\n                {props.player.Name} <b style={{color: 'red'}}>{props.player.Status}</b></td>\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\n                {props.player.Projected}</td>\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\n                {props.player.Price}</td>\n            <td>{props.player.Opp}</td>\n            <td style={{display: 'flex', alignItems: 'center'}}>\n                {props.player.Weather.forecast && <img src={weatherImage} alt={\"weather\"} style={{height: '4vmin'}}/>}\n                <p>{props.player.Weather.details}</p>\n            </td>\n        </tr>\n    );\n};\n\nexport const DfsGrid = (props: {\n        dfsLineup: playerAttributes[],\n        removePlayer: (playerIndex: number, site: string) => void,\n        site: string}) =>\n    <table className={'Dfs-grid'}>\n        <tr style={{backgroundColor: (props.site === 'fd') ? 'dodgerblue' : 'black'}}>\n            <th>Exclude</th>\n            <th>Position</th>\n            <th>Team</th>\n            <th>Player</th>\n            <th>Projected</th>\n            <th>Price</th>\n            <th>Opp</th>\n            <th>Weather</th>\n        </tr>\n        {props.dfsLineup.map(\n            (player, playerIndex) => (\n                <Player player={player} onRemove={() => props.removePlayer(playerIndex, props.site)}/>\n            )\n        )}\n    </table>;\n","import React, { Component } from 'react';\nimport { Container, Nav, Navbar } from 'react-bootstrap'\nimport { DfsGrid } from './DfsGrid.tsx';\nimport football2 from './icons/football2.svg';\n\nexport class Optimizer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {isLoading: false, sport: '', slate: 'main', fdLineup: [], dkLineup: []};\n    }\n\n    dfsSportChange = (event) => {\n        let newSport = event.target.value;\n        if (newSport !== 'none') {\n            this.fetchOptimalLineups(newSport, this.state.slate);\n        }\n    };\n\n    slateChange = (event) => {\n        let newSlate = event.target.value;\n        this.fetchOptimalLineups(this.state.sport, newSlate);\n    };\n\n    fetchOptimalLineups = (sport, slate) => {\n        if (!sport) {\n            alert('Please select a sport.');\n        } else {\n            let prevSport = this.state.sport;\n            this.setState({isLoading: true, sport: sport, slate: slate});\n            fetch(window.location.origin + '/optimized-lineup/' + sport + '/' + slate)\n                .then(response => {\n                    if (response.status !== 200) {\n                        alert('Failed to generate lineups.');\n                    } else {\n                        response.json()\n                            .then((lineupJson) => {\n                                this.ingestDfsLineup(lineupJson, sport, prevSport, false);\n                            });\n                    }\n                });\n        }\n    };\n\n    ingestDfsLineup = (lineupJson, sport, prevSport, remove) => {\n        if (!remove) {\n            if (lineupJson.length === 1) {\n                this.setState({isLoading: false, sport: prevSport});\n                alert(lineupJson[0]);\n                return\n            }\n            if (typeof lineupJson[0] === \"string\") {\n                alert(lineupJson[0]);\n            } else if (lineupJson.length === 2 && lineupJson[1] === \"string\") {\n                alert(lineupJson[1]);\n            }\n        }\n        let fdLineup = (typeof lineupJson[0] === \"string\") ? [] : lineupJson[0];\n        let dkLineup = (typeof lineupJson[1] === \"string\") ? [] : lineupJson[1];\n        this.setState({isLoading: false, fdLineup: fdLineup, dkLineup: dkLineup});\n    };\n\n    removePlayerFromDfsLineup = (lineupIndex, site) => {\n        let {sport, slate} = this.state;\n        let removedPlayer = (site === 'fd') ? this.state.fdLineup[lineupIndex].Name : this.state.dkLineup[lineupIndex].Name;\n        fetch(window.location.origin + '/optimized-lineup/' + sport + '/' + slate, {\n            method: 'POST',\n            body: removedPlayer + '|' + site\n        }).then(response => {\n            if (response.status !== 200) {\n                alert('Error removing player.');\n            } else {\n                response.json()\n                    .then((lineupJson) => {\n                        this.ingestDfsLineup(lineupJson, sport, sport, true);\n                        let alertString = (site === 'fd') ?\n                            ' from your Fanduel lineup.' : ' from your Draftkings lineup.';\n                        alert('You have removed ' + removedPlayer + alertString);\n                    });\n            }\n        });\n    };\n\n    render() {\n        const {isLoading, sport, slate, fdLineup, dkLineup} = this.state;\n        let gridSection;\n\n        if (isLoading) {\n            gridSection =\n                <div className={\"Loading\"}>\n                    <div><p className={\"Optimizing-text\"}>Optimizing . . .</p></div>\n                    <div><img src={football2} className={\"App-logo2\"} alt=\"football2\"/></div>\n                </div>;\n        } else {\n            gridSection =\n                <div className={\"Dfs-grid-section\"}>\n                    <div>\n                        <h2 className={\"Dfs-header\"}>Fanduel</h2>\n                        <DfsGrid dfsLineup={fdLineup} removePlayer={this.removePlayerFromDfsLineup} site={'fd'}/>\n                    </div>\n                    <div>\n                        <h2 className={\"Dfs-header\"}>Draftkings</h2>\n                        <DfsGrid dfsLineup={dkLineup} removePlayer={this.removePlayerFromDfsLineup} site={'dk'}/>\n                    </div>\n                </div>;\n        }\n\n        return (\n            <Container fluid={true}>\n                <Navbar bg=\"primary\" variant=\"dark\">\n                    <Nav className=\"Nav-bar\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/simulate\">Back to Draft Simulator</Nav.Link>\n                        <Nav.Link href=\"/logout\">Logout</Nav.Link>\n                    </Nav>\n                </Navbar>\n                <h1 className={\"App-header\"}>DFS Optimizer</h1>\n                <div className={\"Dfs-sport\"}>\n                    <h3>Choose a sport:</h3>\n                    <select className={\"Drop-down\"} onChange={this.dfsSportChange} value={sport}>\n                        <option value=\"none\"> </option>\n                        <option value=\"mlb\">MLB</option>\n                        <option value=\"nfl\">NFL</option>\n                        <option value=\"nba\">NBA</option>\n                    </select>\n                    {(sport === 'nfl') && <h3>Choose a game slate:</h3>}\n                    {(sport === 'nfl') && <select className={\"Drop-down\"} onChange={this.slateChange} value={slate}>\n                                            <option value=\"thurs\">Thurs only</option>\n                                            <option value=\"thurs-mon\">Thurs - Mon</option>\n                                            <option value=\"main\">Sun (Main)</option>\n                                            <option value=\"sun-mon\">Sun - Mon</option>\n                                          </select>}\n                    <button style={{marginTop: '10px'}}\n                            onClick={() => this.fetchOptimalLineups(sport, slate)}>Reset</button>\n                </div>\n                {gridSection}\n            </Container>\n        )\n    }\n}\n","/*\njQWidgets v7.1.0 (2019-Feb)\nCopyright (c) 2011-2019 jQWidgets.\nLicense: https://jqwidgets.com/license/\n*/\n/* eslint-disable */\n\nimport 'jqwidgets-framework/jqwidgets/styles/jqx.base.css';\nimport 'jqwidgets-framework/jqwidgets/jqxcore.js';\nimport 'jqwidgets-framework/jqwidgets/jqxpopover.js';\n\nimport React from 'react';\n\nconst JQXLite = window.JQXLite;\n\nexport const jqx = window.jqx;\n\nexport default class JqxPopover extends React.Component {\n    constructor(props) {\n        super(props);\n        const widgetId = 'jqxPopover' + JQXLite.generateID();\n        this.componentSelector = '#' + widgetId;\n        this.state = { id: widgetId };\n    };\n    componentDidMount() {\n        const options = this.manageAttributes();\n        this.createComponent(options);\n    };\n    manageAttributes() {\n        const properties = ['arrowOffsetValue','animationOpenDelay','animationCloseDelay','autoClose','animationType','height','initContent','isModal','offset','position','rtl','selector','showArrow','showCloseButton','width','title','theme'];\n        let options = {};\n        for(let item in this.props) {\n            if(item === 'settings') {\n                for(let itemTwo in this.props[item]) {\n                    options[itemTwo] = this.props[item][itemTwo];\n                }\n            } else {\n                if(properties.indexOf(item) !== -1) {\n                      options[item] = this.props[item];\n                }\n            }\n        }\n        return options;\n    };\n    createComponent(options) {\n        if(!this.style) {\n            for (let style in this.props.style) {\n                JQXLite(this.componentSelector).css(style, this.props.style[style]);\n            }\n        }\n        if(this.props.className !== undefined) {\n            const classes = this.props.className.split(' ');\n            for (let i = 0; i < classes.length; i++ ) {\n                JQXLite(this.componentSelector).addClass(classes[i]);\n            }\n        }\n        if(!this.template) {\n            JQXLite(this.componentSelector).html(this.props.template);\n        }\n        JQXLite(this.componentSelector).jqxPopover(options);\n    };\n    setOptions(options) {\n        JQXLite(this.componentSelector).jqxPopover('setOptions', options);\n    };\n    getOptions() {\n        if(arguments.length === 0) {\n            throw Error('At least one argument expected in getOptions()!');\n        }\n        let resultToReturn = {};\n        for(let i = 0; i < arguments.length; i++) {\n            resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxPopover(arguments[i]);\n        }\n        return resultToReturn;\n    };\n    on(name,callbackFn) {\n        JQXLite(this.componentSelector).on(name,callbackFn);\n    };\n    off(name) {\n        JQXLite(this.componentSelector).off(name);\n    };\n    arrowOffsetValue(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue');\n        }\n    };\n    animationOpenDelay(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('animationOpenDelay', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('animationOpenDelay');\n        }\n    };\n    animationCloseDelay(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('animationCloseDelay', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('animationCloseDelay');\n        }\n    };\n    autoClose(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('autoClose', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('autoClose');\n        }\n    };\n    animationType(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('animationType', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('animationType');\n        }\n    };\n    height(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('height', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('height');\n        }\n    };\n    initContent(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('initContent', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('initContent');\n        }\n    };\n    isModal(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('isModal', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('isModal');\n        }\n    };\n    offset(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('offset', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('offset');\n        }\n    };\n    position(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('position', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('position');\n        }\n    };\n    rtl(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('rtl', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('rtl');\n        }\n    };\n    selector(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('selector', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('selector');\n        }\n    };\n    showArrow(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('showArrow', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('showArrow');\n        }\n    };\n    showCloseButton(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('showCloseButton', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('showCloseButton');\n        }\n    };\n    width(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('width', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('width');\n        }\n    };\n    title(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('title', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('title');\n        }\n    };\n    theme(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('theme', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('theme');\n        }\n    };\n    close() {\n        JQXLite(this.componentSelector).jqxPopover('close');\n    };\n    destroy() {\n        JQXLite(this.componentSelector).jqxPopover('destroy');\n    };\n    open() {\n        JQXLite(this.componentSelector).jqxPopover('open');\n    };\n    render() {\n        return (\n            <div id={this.state.id}>{this.props.value}{this.props.children}</div>\n        )\n    };\n};\n\n","import * as React from 'react';\n\ninterface playerAttributes {\n    Rank: number,\n    Name: string,\n    Position: string,\n    Team: string,\n}\n\ninterface playerProps {\n    player: playerAttributes,\n    isUserPlayer: boolean,\n    onChange: () => void,\n    onMove: (direction: string) => void\n}\n\nconst plus = require(\"./icons/plus.ico\") as any;\nconst minus = require(\"./icons/minus.ico\") as any;\nconst up = require(\"./icons/up.ico\") as any;\nconst down = require(\"./icons/down.ico\") as any;\n\nconst Player = (props: playerProps) =>\n    <tr>\n        <td>{props.player.Rank}</td>\n        <td>\n            <tr style={{fontWeight: 'bold'}}>{props.player.Name}</tr>\n            <tr>{props.player.Team} {props.player.Position}</tr>\n        </td>\n        <td>\n            <img src={(props.isUserPlayer) ? minus : plus} alt={\"add-or-remove\"} onClick={props.onChange} style={{height: '3vmin'}}/>\n        </td>\n        {props.isUserPlayer && (\n            <td style={{display: 'flex', flexDirection: 'column'}}>\n                <img src={up} alt={\"up\"} onClick={() => props.onMove('up')} style={{height: '3vmin'}}/>\n                <img src={down} alt={\"down\"} onClick={() => props.onMove('down')} style={{height: '3vmin'}}/>\n            </td>\n            )\n        }\n    </tr>;\n\nexport const PlayerListBox = (props: {\n    playerList: playerAttributes[],\n    filterList: playerAttributes[],\n    addPlayer: (index: number) => void }) =>\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\n            {props.playerList.map(\n                (player, index) => {\n                    if (!props.filterList || props.filterList.includes(player)) {\n                        return (\n                            <Player player={player}\n                                        isUserPlayer={false}\n                                        onChange={() => props.addPlayer(index)}\n                                        onMove={null}\n                            />\n                        )\n                    }\n                }\n            )}\n        </table>;\n\nexport const UserListBox = (props: {\n    userRoundList: [playerAttributes[]],\n    removePlayer: (roundIndex: number, index: number) => void,\n    movePlayer: (roundIndex: number, index: number, direction: string) => void}) =>\n        props.userRoundList.map(\n            (playerList, roundIndex) => {\n                return (\n                    <table style={{borderCollapse: 'collapse', marginBottom: '5vmin'}} className={'Draft-grid'}>\n                        <th colSpan={4} style={{textAlign: 'center'}}>{'Round ' + (roundIndex + 1)}</th>\n                        {playerList.map(\n                            (player, index) => (\n                                <Player player={player}\n                                        isUserPlayer={true}\n                                        onChange={() => props.removePlayer(roundIndex, index)}\n                                        onMove={(direction) => props.movePlayer(roundIndex, index, direction)}\n                                />\n                            )\n                        )}\n                    </table>\n                )\n            });\n","import * as React from 'react';\n\ninterface playerAttributes {\n    Name: string,\n    Position: string,\n    Team: string,\n    Round: number,\n    Frequency: string\n}\n\nexport const DraftResultsTable = (props: {\n    frequencyData: playerAttributes[]}) =>\n    <table>\n        <tr>\n            <th>Player</th>\n            <th>Round</th>\n            <th>Draft Frequency</th>\n        </tr>\n        {props.frequencyData.map(\n            (player) => (\n                <tr>\n                    <td>\n                        <tr style={{fontWeight: 'bold'}}>{player.Name}</tr>\n                        <tr>{player.Team} {player.Position}</tr>\n                    </td>\n                    <td>{player.Round}</td>\n                    <td>{player.Frequency}</td>\n                </tr>\n            )\n        )}\n    </table>;","import React, {Component} from 'react'\nimport { Container, Nav, Navbar } from 'react-bootstrap'\nimport './App.css';\nimport JqxPopover from './jqxwidgets/react_jqxpopover'\nimport { PlayerListBox, UserListBox } from \"./PlayerListBox.tsx\"\nimport { DraftResultsTable } from \"./DraftResultsTable.tsx\";\nimport football from './icons/football.ico'\nimport search from './icons/search.ico'\n\nexport class Simulator extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {isLoading: true, players: [], searchText: '', filteredPlayers: null, site: 'espn',\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\n            teamCount: 10, pickOrder: 5, roundCount: 16, isDrafting: false, isRandom: false,\n            allFreqs: [], userFreqs: [], expectedTeam: [], frequencyData: []};\n    }\n\n    componentDidMount() {\n        this.fetchPlayersForSimulator(this.state.site);\n    }\n\n    fetchPlayersForSimulator = (site) => {\n        this.setState({isLoading: true});\n        fetch(window.location.origin + '/' + site + '-players')\n            .then(response => {\n                if (response.status !== 200) {\n                    alert('Could not load players.');\n                } else {\n                    response.json()\n                        .then((players) => {\n                            this.setState({\n                                isLoading: false,\n                                players: players,\n                                site: site\n                            });\n                        })\n                }\n            });\n    };\n\n    handleSliderChange = (param, event) => {\n        this.setState({[param]: event.target.value})\n    };\n\n    closeAbout = () => {\n        this.refs.about.close();\n        let url = window.location.pathname.split('#');\n        window.location.href = window.location.origin + url[0].toString() + '#';\n    };\n\n    closeInstructions = () => {\n        this.refs.instructions.close();\n        let url = window.location.pathname.split('#');\n        window.location.href = window.location.origin + url[0].toString() + '#';\n    };\n\n    swapRankings = () => {\n        let newSite = (this.state.site === 'espn') ? 'yahoo' : 'espn';\n        this.fetchPlayersForSimulator(newSite);\n    };\n\n    saveRankings = () => {\n        let {userPlayers, site} = this.state;\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\n            alert('Please rank at least one player before saving.');\n        } else {\n            fetch(window.location.origin + '/save-ranking/' + site, {\n                method: 'POST',\n                body: JSON.stringify(userPlayers)\n            }).then(response => {\n                if (response.status === 200) {\n                    alert('User ranking saved successfully.');\n                } else {\n                    alert('User ranking unable to be saved.');\n                }\n            });\n        }\n    };\n\n    loadRankings = () => {\n        let site = this.state.site;\n        fetch(window.location.origin + '/load-ranking/' + site)\n            .then(response => {\n                if (response.status !== 200) {\n                    alert('Could not load user ranking data.');\n                }  else {\n                    response.json()\n                        .then((userRanking) => {\n                            if (userRanking[0] === 'No ranking specified.') {\n                                alert(userRanking[0]);\n                            } else {\n                                let {players, userPlayers} = this.state;\n                                let allPlayers = players.concat(userPlayers.flat());\n                                players = allPlayers.sort((a, b) => a.Rank - b.Rank);\n                                let allLoadedPlayers = userRanking.flat();\n                                for (let i = 0; i < allLoadedPlayers.length; i++) {\n                                    let userPlayerRank = allLoadedPlayers[i].Rank;\n                                    let playerIndex = players.findIndex(\n                                        (player) => player.Rank === userPlayerRank);\n                                    players.splice(playerIndex, 1);\n                                }\n                                this.setState({\n                                    players: players,\n                                    userPlayers: userRanking,\n                                    filteredPlayers: null\n                                })\n                            }\n                        })\n                }\n            });\n    };\n\n    filterPlayers = (event) => {\n        let text = event.target.value.toLowerCase();\n        let players = this.state.players;\n        let filteredPlayers = players.filter(\n            (player) =>\n                player.Name.toLowerCase().includes(text)\n                || player.Position.toLowerCase().includes(text)\n                || player.Team.toLowerCase().includes(text)\n        );\n        this.setState({\n            searchText: text,\n            filteredPlayers: filteredPlayers});\n    };\n\n    addPlayer = (playerIndex) => {\n        let {players, userPlayers} = this.state;\n        let playerToAdd = players[playerIndex];\n        players.splice(playerIndex, 1);\n        userPlayers[0].push(playerToAdd);\n        this.setState({\n            players: players,\n            userPlayers: userPlayers,\n            filteredPlayers: null,\n            searchText: ''\n        });\n    };\n\n    removePlayer = (roundIndex, playerIndex) => {\n        let {players, userPlayers} = this.state;\n        let roundList = userPlayers[roundIndex];\n        let removedPlayer = roundList[playerIndex];\n        let removedPlayerRank = removedPlayer.Rank;\n        const originalPlayerNeighbor = players.find((player) => player.Rank > removedPlayerRank);\n        players.splice(players.indexOf(originalPlayerNeighbor), 0, removedPlayer);\n        roundList.splice(playerIndex, 1);\n        this.setState({\n            players: players,\n            userPlayers: userPlayers\n        });\n    };\n\n    clearPlayers = () => {\n        let {players, userPlayers} = this.state;\n        let allUserPlayers = userPlayers.flat();\n        let allPlayers = players.concat(allUserPlayers);\n        this.setState({\n            players: allPlayers.sort((a, b) => a.Rank - b.Rank),\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\n            filteredPlayers: null\n        });\n    };\n\n    movePlayer = (roundIndex, playerIndex, direction) => {\n        let userPlayers = this.state.userPlayers;\n        let roundList = userPlayers[roundIndex];\n        let player = roundList[playerIndex];\n        userPlayers[roundIndex].splice(playerIndex, 1);\n        if (direction === 'up') {\n            if (playerIndex > 0) {\n                userPlayers[roundIndex].splice(playerIndex - 1, 0, player);\n            } else if (roundIndex > 0) {\n                userPlayers[roundIndex - 1].push(player);\n            } else {\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\n            }\n        } else if (direction === 'down') {\n            if (playerIndex < roundList.length) {\n                roundList.splice(playerIndex + 1, 0, player);\n            } else if (roundIndex < userPlayers.length - 1) {\n                userPlayers[roundIndex + 1].splice(0, 0, player);\n            } else {\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\n            }\n        }\n        this.setState({userPlayers: userPlayers});\n    };\n\n    determineIfRandom = (event) => {\n        this.setState({isRandom: event.target.checked})\n    };\n\n    simulateDrafts = (draftCancelled) => {\n        if (draftCancelled) {\n            this.setState({isDrafting: false});\n            return\n        }\n        let {userPlayers, teamCount, pickOrder, roundCount, site} = this.state;\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\n            alert('Please select at least one player to draft.');\n        } else {\n            let playerNames = userPlayers.map((roundList) => roundList.map((player) => player.Name));\n            this.setState({isDrafting: true});\n            fetch(window.location.origin + '/draft-results', {\n                method: 'POST',\n                body: JSON.stringify(playerNames) + '|' + teamCount + '|' + pickOrder + '|' + roundCount + '|' + site\n            }).then(response => {\n                if (response.status !== 200) {\n                    alert('Error loading draft results.');\n                } else {\n                    response.json()\n                        .then((draftResults) => {\n                            if (typeof draftResults[0] == \"string\") {\n                                alert(draftResults[0]);\n                            } else {\n                                this.generateDraftOutput(draftResults);\n                            }\n                        })\n                }\n            });\n        }\n    };\n\n    generateDraftOutput = (draftResults) => {\n        if (draftResults === ['Draft error!']) {\n            alert('No players were drafted. :( \\nSomething went wrong . . .');\n        }\n        this.setState({\n            isDrafting: false,\n            userFreqs: draftResults.UserFrequencies,\n            allFreqs: draftResults.AllFrequencies,\n            expectedTeam: draftResults.ExpectedTeam,\n            frequencyData: draftResults.UserFrequencies\n        });\n    };\n\n    toggleFrequencyData = (frequencyData) => {\n        this.setState({frequencyData: frequencyData});\n    };\n\n    render() {\n        const {isLoading, players, filteredPlayers, site,\n            userPlayers, teamCount, pickOrder, roundCount, isDrafting, isRandom,\n            userFreqs, allFreqs, expectedTeam, frequencyData} = this.state;\n        let playerListBox, draftResultsTable;\n\n        if (isLoading) {\n            playerListBox =\n                <div className={\"Loading\"}>\n                    <div><p className={\"Loading-text\"}>Loading players . . .</p></div>\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\n                </div>;\n        } else {\n            playerListBox =\n                <PlayerListBox playerList={players} filterList={filteredPlayers} addPlayer={this.addPlayer}/>;\n        }\n        if (isDrafting) {\n            draftResultsTable =\n                <div className={\"Loading\"}>\n                    <div><p className={\"Loading-text\"}>Drafting . . .</p></div>\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\n                    <div>\n                        <button onClick={() => this.simulateDrafts(true)}\n                                className={\"Cancel-draft-button\"}>Cancel</button>\n                    </div>\n                </div>;\n        } else {\n            draftResultsTable = <DraftResultsTable frequencyData={frequencyData}/>;\n        }\n\n        const swapButtonText = (site === 'espn') ? 'Switch to Yahoo' : 'Switch to ESPN';\n        const swapButtonColor = (site === 'espn') ? '#6C00B3' : '#CE0000';\n\n        return (\n            <Container fluid={true}>\n                <Navbar bg=\"primary\" variant=\"dark\">\n                    <Nav className=\"Nav-bar\">\n                      <Nav.Link href=\"/\">Home</Nav.Link>\n                      <Nav.Link href=\"#about\">About</Nav.Link>\n                      <Nav.Link href=\"#instructions\">Instructions</Nav.Link>\n                      <Nav.Link href=\"/optimize\">DFS Optimizer</Nav.Link>\n                        <Nav.Link href=\"/logout\">Logout</Nav.Link>\n                    </Nav>\n                </Navbar>\n                <div className={\"Info-buttons\"}>\n                    <JqxPopover ref='about' isModal={true} width={310}\n                        position={'bottom'} title={'About Draft Simulator'} selector={'a[href$=\"#about\"]'}>\n                        <p>Draft Simulator is a fantasy football draft preparation tool.</p>\n                        <p>More often than not, others in your league will only draft among the \"top available\n                            players\" in each round, which are determined by ESPN's preseason rankings.</p>\n                        <p>However, Draft Simulator allows you to create and refine your own personal rankings that\n                            you can bring to your draft to get the team you've always dreamed of.</p>\n                        <button onClick={this.closeAbout}\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\n                            Got it!</button>\n                    </JqxPopover>\n                    <JqxPopover ref='instructions' isModal={true} width={310}\n                        position={'bottom'} title={'Instructions'} selector={'a[href$=\"#instructions\"]'}>\n                        <ol>\n                            <li>Search for and select players from the player list. These should be players you'd\n                                feel strongly about drafting.</li>\n                            <li>Click \"Add\" to move them to your preferred list.</li>\n                            <li>Drag and drop your players in order of overall preference.</li>\n                            <li>Adjust the sliders to your desired specifications, then click \"Draft\".</li>\n                            <li>See how often you were able to draft each player under the \"Draft Frequency\"\n                                tab.</li>\n                            <li>The \"All Players\" tab shows the draft frequency of all players taken, not just your\n                                preferred players.</li>\n                            <li>The \"Expected Team\" tab shows your most likely fantasy team given the\n                                simulations.</li>\n                        </ol>\n                        <button onClick={this.closeInstructions}\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\n                            Let's draft!</button>\n                    </JqxPopover>\n                </div>\n                <h1 className={\"App-header\"}>Draft Simulator</h1>\n                <div className={\"Buttons-and-boxes\"}>\n                    <div className={\"Player-list-box\"}>\n                        <div>\n                            {!filteredPlayers && <img src={search} style={{height: '3vmin', position: 'absolute'}}\n                                                      alt=\"search\"/>}\n                            <input type=\"text\" style={{height: '25px', width: '90%'}}\n                                   value={this.state.searchText}\n                                   onClick={this.filterPlayers}\n                                   onChange={this.filterPlayers}>{null}</input>\n                        </div>\n                        {playerListBox}\n                    </div>\n                    <div className={\"Player-buttons\"}>\n                        <button onClick={this.clearPlayers} style={{fontSize: 16}}\n                                className={\"Clear-button\"}>Clear</button>\n                        <button id='rankingButton' onClick={this.loadRankings}\n                                className={\"Ranking-button\"}>Load Saved Rankings</button>\n                        <button id='swapButton' style={{backgroundColor: swapButtonColor}}\n                                onClick={this.swapRankings} className={\"Swap-button\"}>{swapButtonText}</button>\n                    </div>\n                    <div className={\"Player-list-box\"}>\n                        <UserListBox userRoundList={userPlayers} removePlayer={this.removePlayer}\n                                     movePlayer={this.movePlayer} className={\"Player-list-box\"}/>\n                    </div>\n                    <div className={\"Draft-buttons\"}>\n                        <button onClick={this.saveRankings} style={{fontSize: 16}}\n                                className={\"Ranking-button\"}>Save Player Rankings</button>\n                        <button onClick={() => this.simulateDrafts(false)}\n                                style={{fontSize: 16}} className={\"Draft-button\"}>Draft!</button>\n                    </div>\n                    <div className={\"Player-list-box\"}>\n                        <tr>\n                            <button\n                                onClick={() => this.toggleFrequencyData(userFreqs)}\n                                style={{borderStyle: (frequencyData === userFreqs) ?\n                                        'inset' : 'outset'}}>Your Players</button>\n                            <button\n                                onClick={() => this.toggleFrequencyData(allFreqs)}\n                                style={{borderStyle: (frequencyData === allFreqs) ?\n                                        'inset' : 'outset'}}>All Players</button>\n                            <button\n                                onClick={() => this.toggleFrequencyData(expectedTeam)}\n                                style={{borderStyle: (frequencyData === expectedTeam) ?\n                                        'inset' : 'outset'}}>Expected Team</button>\n                        </tr>\n                        {draftResultsTable}\n                    </div>\n                </div>\n                <div className={\"Slider-row\"}>\n                    <div className={\"Sliders\"}>\n                        <p>Number of teams per draft:</p>\n                        <div>{teamCount}</div>\n                        <input type={\"range\"} min={6} max={14} step={2} value={teamCount}\n                               onChange={(event) => this.handleSliderChange('teamCount', event)}/>\n                    </div>\n                    <div className={\"Sliders\"}>\n                        <p>Your pick in the draft:</p>\n                        <div>{pickOrder}</div>\n                        <input type={\"range\"} min={1} max={teamCount} value={pickOrder}\n                                   onChange={(event) => this.handleSliderChange('pickOrder', event)}/>\n                        <form>\n                          <label>\n                            Randomize:\n                            <input type=\"checkbox\" checked={isRandom} onChange={this.determineIfRandom}/>\n                          </label>\n                        </form>\n                    </div>\n                    <div className={\"Sliders\"}>\n                        <p>Number of rounds per draft:</p>\n                        <div>{roundCount}</div>\n                        <input type={\"range\"} min={1} max={16} value={roundCount}\n                                   onChange={(event) => this.handleSliderChange('roundCount', event)}/>\n                    </div>\n                </div>\n            </Container>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Homepage } from \"./Homepage\";\nimport { Optimizer } from './Optimizer'\nimport { Simulator } from \"./Simulator\";\n\nclass App extends Component {\n\n    render() {\n        if (window.location.pathname === '/home') {\n            return <Homepage/>\n        } else if (window.location.pathname === '/simulate') {\n            return <Simulator/>\n        } else if (window.location.pathname === '/optimize') {\n            return <Optimizer/>\n        }\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}