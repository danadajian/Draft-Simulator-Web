{"version":3,"sources":["icons/football.ico","icons/football2.svg","icons/search.ico","icons/cloudy.ico","icons/partlycloudy.ico","icons/rainy.ico","icons/snowy.ico","icons/stormy.ico","icons/sunny.ico","icons/plus.ico","icons/minus.ico","icons/up.ico","icons/down.ico","main/Homepage.js","main/DfsGrid.tsx","main/DfsReport.tsx","main/Optimizer.js","jqxwidgets/react_jqxpopover.js","main/PlayerListBox.tsx","main/DraftResultsTable.tsx","main/Simulator.js","main/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Homepage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","onClick","window","location","href","origin","Component","cloudy","require","partlyCloudy","rainy","snowy","stormy","sunny","Player","props","forecast","player","Weather","toLowerCase","weatherImage","includes","react","Position","onRemove","style","fontWeight","Team","Name","color","Status","Projected","Price","Opp","display","alignItems","src","alt","height","details","DfsGrid","backgroundColor","site","dfsLineup","map","playerIndex","DfsGrid_Player","removePlayer","DfsReport","reportingData","row","position","expected","actual","optimal","expected_v_actual","toFixed","toString","concat","actual_v_optimal","expected_v_optimal","Optimizer","_this","call","fetchOptimalLineups","sport","slate","prevSport","state","setState","isLoading","isReporting","fetch","then","response","status","alert","json","lineupJson","ingestDfsLineup","remove","length","fdLineup","dkLineup","removePlayerFromDfsLineup","lineupIndex","_this$state","removedPlayer","method","body","fetchReportingData","weeks","reportJson","toggleSite","selectedSite","_this$state2","toggleWeek","selectedWeek","_this$state3","splice","indexOf","push","gridSection","_this2","_this$state4","weekArray","i","maxWeek","football2","DfsReport_DfsReport","data","weekNumber","DfsGrid_DfsGrid","Container","fluid","Navbar","bg","variant","Nav","Link","marginTop","JQXLite","JqxPopover","jqx","widgetId","generateID","componentSelector","id","options","manageAttributes","createComponent","properties","item","itemTwo","css","undefined","classes","split","addClass","template","html","jqxPopover","Error","resultToReturn","name","callbackFn","on","off","arg","children","React","plus","minus","up","down","Rank","isUserPlayer","onChange","flexDirection","onMove","PlayerListBox","borderCollapse","playerList","index","filterList","PlayerListBox_Player","addPlayer","UserListBox","userRoundList","roundIndex","marginBottom","colSpan","textAlign","direction","movePlayer","DraftResultsTable","frequencyData","Round","Frequency","Simulator","fetchPlayersForSimulator","players","handleSliderChange","param","event","defineProperty","target","closeAbout","refs","about","close","url","pathname","closeInstructions","instructions","swapRankings","newSite","saveRankings","userPlayers","every","roundList","JSON","stringify","responseJson","loadRankings","userRanking","allPlayers","flat","sort","b","allLoadedPlayers","_loop","userPlayerRank","findIndex","filteredPlayers","filterPlayers","text","filter","searchText","playerToAdd","removedPlayerRank","originalPlayerNeighbor","find","clearPlayers","_this$state5","allUserPlayers","determineIfRandom","isRandom","checked","simulateDrafts","draftCancelled","isDrafting","_this$state6","teamCount","pickOrder","roundCount","playerNames","draftResults","generateDraftOutput","userFreqs","UserFrequencies","allFreqs","AllFrequencies","expectedTeam","ExpectedTeam","toggleFrequencyData","playerListBox","draftResultsTable","_this$state7","football","PlayerListBox_PlayerListBox","DraftResultsTable_DraftResultsTable","swapButtonText","swapButtonColor","react_jqxpopover_JqxPopover","ref","isModal","width","title","selector","float","padding","borderRadius","search","type","fontSize","PlayerListBox_UserListBox","borderStyle","min","max","step","App","Homepage_Homepage","Simulator_Simulator","Optimizer_Optimizer","Boolean","hostname","match","ReactDOM","render","src_main_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.263e4410.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/football.c5005feb.ico\";","module.exports = __webpack_public_path__ + \"media/football2.fac02615.svg\";","module.exports = __webpack_public_path__ + \"media/search.04c89f3b.ico\";","module.exports = __webpack_public_path__ + \"media/cloudy.340c3269.ico\";","module.exports = __webpack_public_path__ + \"media/partlycloudy.a5e52894.ico\";","module.exports = __webpack_public_path__ + \"media/rainy.dda0cf39.ico\";","module.exports = __webpack_public_path__ + \"media/snowy.203024ab.ico\";","module.exports = __webpack_public_path__ + \"media/stormy.ca70c957.ico\";","module.exports = __webpack_public_path__ + \"media/sunny.a306062d.ico\";","module.exports = __webpack_public_path__ + \"media/plus.220c44df.ico\";","module.exports = __webpack_public_path__ + \"media/minus.5edbe473.ico\";","module.exports = __webpack_public_path__ + \"media/up.04732abf.ico\";","module.exports = __webpack_public_path__ + \"media/down.61889039.ico\";","import React, { Component } from 'react';\nimport './App.css';\n\nexport class Homepage extends Component {\n\n    render() {\n        return (\n                <div className={'Home'}>\n                    <h1 className={'Home-header'}>Welcome to Draft Simulator!</h1>\n                    <h3 className={'Dfs-header'}>To start, click the link below:</h3>\n                    <div className={\"Home-buttons\"}>\n                    <button onClick={() => {window.location.href = window.location.origin + '/simulate'}}\n                            className={'Site-button'}>Simulator</button>\n                    </div>\n                    <h3 className={'Dfs-header'}>Or, check out our DFS Optimizer:</h3>\n                    <button onClick={() => {window.location.href = window.location.origin + '/optimize'}}\n                            className={'Dfs-button'}>DFS Optimizer</button>\n                    <button onClick={() => {window.location.href = window.location.origin + '/logout'}}\n                            className={'Logout-button'}>Log Out</button>\n                </div>\n        )\n    }\n\n}","import * as React from 'react';\n\ninterface playerAttributes {\n    Position: string,\n    Team: string,\n    Name: string,\n    Status: string,\n    Projected: number,\n    Price: string,\n    Opp: string,\n    Weather: any\n}\n\ninterface playerProps {\n    player: playerAttributes,\n    onRemove: () => void\n}\n\nconst cloudy = require(\"../icons/cloudy.ico\") as any;\nconst partlyCloudy = require(\"../icons/partlycloudy.ico\") as any;\nconst rainy = require(\"../icons/rainy.ico\") as any;\nconst snowy = require(\"../icons/snowy.ico\") as any;\nconst stormy = require(\"../icons/stormy.ico\") as any;\nconst sunny = require(\"../icons/sunny.ico\") as any;\n\nconst Player = (props: playerProps) => {\n    const forecast = (props.player.Weather.forecast) ? props.player.Weather.forecast.toLowerCase() : null;\n    const weatherImage = (props.player.Weather.forecast) ?\n        (forecast.includes('partly')) ? partlyCloudy :\n        (forecast.includes('cloud') || forecast.includes('fog')) ? cloudy :\n        (forecast.includes('storm') || forecast.includes('thunder')) ? stormy :\n        (forecast.includes('rain') || forecast.includes('shower')) ? rainy :\n        (forecast.includes('snow') || forecast.includes('flurr')) ? snowy :\n        (forecast.includes('sun') || forecast.includes('clear')) ? sunny : null\n        : null;\n\n    return (\n        <tr>\n            <td>\n                {props.player.Position && <button onClick={props.onRemove} style={{fontWeight: 'bold'}}>X</button>}\n            </td>\n            <td>{props.player.Position}</td>\n            <td>{props.player.Team}</td>\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\n                {props.player.Name} <b style={{color: 'red'}}>{props.player.Status}</b></td>\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\n                {props.player.Projected}</td>\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\n                {props.player.Price}</td>\n            <td>{props.player.Opp}</td>\n            <td style={{display: 'flex', alignItems: 'center'}}>\n                {props.player.Weather.forecast && <img src={weatherImage} alt={\"weather\"} style={{height: '4vmin'}}/>}\n                <p>{props.player.Weather.details}</p>\n            </td>\n        </tr>\n    );\n};\n\nexport const DfsGrid = (props: {\n        dfsLineup: playerAttributes[],\n        removePlayer: (playerIndex: number, site: string) => void,\n        site: string}) =>\n    <table className={'Dfs-grid'}>\n        <tr style={{backgroundColor: (props.site === 'fd') ? 'dodgerblue' : 'black'}}>\n            <th>Exclude</th>\n            <th>Position</th>\n            <th>Team</th>\n            <th>Player</th>\n            <th>Projected</th>\n            <th>Price</th>\n            <th>Opp</th>\n            <th>Weather</th>\n        </tr>\n        {props.dfsLineup.map(\n            (player, playerIndex) => (\n                <Player player={player} onRemove={() => props.removePlayer(playerIndex, props.site)}/>\n            )\n        )}\n    </table>;\n","import * as React from 'react';\n\ninterface rowAttributes {\n    position: string,\n    expected: number,\n    actual: number,\n    optimal: number,\n    expected_v_actual: number,\n    actual_v_optimal: number,\n    expected_v_optimal: number\n}\n\nexport const DfsReport = (props: {\n    reportingData: rowAttributes[]}) =>\n    <table>\n        <tr>\n            <th>Position</th>\n            <th>Projected</th>\n            <th>Actual</th>\n            <th>Optimal</th>\n            <th>Expected vs Actual</th>\n            <th>Actual vs Optimal</th>\n            <th>Expected vs Optimal</th>\n        </tr>\n        {props.reportingData.map(\n            (row) => (\n                <tr style={{fontWeight: (row.position === 'Total') ? 'bold' : 'normal'}}>\n                    <td>{row.position}</td>\n                    <td>{row.expected}</td>\n                    <td>{row.actual}</td>\n                    <td>{row.optimal}</td>\n                    <td>{(100 * row.expected_v_actual).toFixed(2).toString().concat('%')}</td>\n                    <td>{(100 * row.actual_v_optimal).toFixed(2).toString().concat('%')}</td>\n                    <td>{(100 * row.expected_v_optimal).toFixed(2).toString().concat('%')}</td>\n                </tr>\n            )\n        )}\n    </table>;\n","import React, { Component } from 'react';\nimport { Container, Nav, Navbar } from 'react-bootstrap'\nimport { DfsGrid } from './DfsGrid.tsx';\nimport { DfsReport } from './DfsReport.tsx';\nimport football2 from '../icons/football2.svg';\n\nexport class Optimizer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {isLoading: false, isReporting: false, sport: '', slate: '', fdLineup: [], dkLineup: [],\n        reportingData: {}, weeks: [], site: ''};\n    }\n\n    fetchOptimalLineups = (sport, slate) => {\n        if (!sport) {\n            alert('Please select a sport.');\n        } else if (!slate) {\n            this.setState({sport: sport});\n        } else {\n            let prevSport = this.state.sport;\n            this.setState({isLoading: true, isReporting: false, sport: sport, slate: slate});\n            fetch(window.location.origin + '/optimized-lineup/' + sport + '/' + slate)\n                .then(response => {\n                    if (response.status !== 200) {\n                        alert('Failed to generate lineups.');\n                    } else {\n                        response.json()\n                            .then((lineupJson) => {\n                                this.ingestDfsLineup(lineupJson, sport, prevSport, false);\n                            });\n                    }\n                });\n        }\n    };\n\n    ingestDfsLineup = (lineupJson, sport, prevSport, remove) => {\n        if (!remove) {\n            if (lineupJson.length === 1) {\n                this.setState({isLoading: false, sport: prevSport});\n                alert(lineupJson[0]);\n                return\n            }\n            if (typeof lineupJson[0] === \"string\") {\n                alert(lineupJson[0]);\n            } else if (lineupJson.length === 2 && lineupJson[1] === \"string\") {\n                alert(lineupJson[1]);\n            }\n        }\n        let fdLineup = (typeof lineupJson[0] === \"string\") ? [] : lineupJson[0];\n        let dkLineup = (typeof lineupJson[1] === \"string\") ? [] : lineupJson[1];\n        this.setState({isLoading: false, fdLineup: fdLineup, dkLineup: dkLineup});\n        return {'fdLineup': fdLineup, 'dkLineup': dkLineup}\n    };\n\n    removePlayerFromDfsLineup = (lineupIndex, site) => {\n        let {sport, slate} = this.state;\n        let removedPlayer = (site === 'fd') ? this.state.fdLineup[lineupIndex].Name : this.state.dkLineup[lineupIndex].Name;\n        fetch(window.location.origin + '/optimized-lineup/' + sport + '/' + slate, {\n            method: 'POST',\n            body: removedPlayer + '|' + site\n        }).then(response => {\n            if (response.status !== 200) {\n                alert('Error removing player.');\n            } else {\n                response.json()\n                    .then((lineupJson) => {\n                        this.ingestDfsLineup(lineupJson, sport, sport, true);\n                        let alertString = (site === 'fd') ?\n                            ' from your Fanduel lineup.' : ' from your Draftkings lineup.';\n                        alert('You have removed ' + removedPlayer + alertString);\n                    });\n            }\n        });\n    };\n\n    fetchReportingData = (sport, slate, site, weeks) => {\n        sport = 'nfl';\n        if (!sport) {\n            alert('Please select a sport.');\n        } else {\n            fetch(window.location.origin + '/optimize/reporting/' + sport + '/' + slate, {\n                method: 'POST',\n                body: site + '|' + weeks\n            }).then(response => {\n                    if (response.status !== 200) {\n                        alert('Failed to generate report.');\n                    } else {\n                        response.json()\n                            .then((reportJson) => {\n                                this.setState({\n                                    isReporting: true,\n                                    sport: sport,\n                                    slate: slate,\n                                    site: site,\n                                    weeks: weeks,\n                                    reportingData: reportJson});\n                            });\n                    }\n                });\n        }\n    };\n\n    toggleSite = (selectedSite) => {\n        let {sport, slate, site, weeks} = this.state;\n        site = (selectedSite) ? ((site === selectedSite) ? '' : selectedSite) : '';\n        this.fetchReportingData(sport, slate, site, weeks);\n        return site\n    };\n\n    toggleWeek = (selectedWeek) => {\n        let {sport, slate, site, weeks} = this.state;\n        if (weeks.includes(selectedWeek)) {\n            weeks.splice(weeks.indexOf(selectedWeek), 1);\n        } else {\n            weeks.push(selectedWeek);\n        }\n        this.fetchReportingData(sport, slate, site, weeks);\n        return weeks\n    };\n\n    render() {\n        const {isLoading, isReporting, sport, slate, fdLineup, dkLineup, reportingData, site, weeks} = this.state;\n\n        let gridSection;\n        let weekArray = [];\n        for (let i = 1; i <= reportingData.maxWeek; i++) {\n            weekArray.push(i);\n        }\n\n        if (isLoading) {\n            gridSection =\n                <div className={\"Loading\"}>\n                    <div><p className={\"Optimizing-text\"}>Optimizing . . .</p></div>\n                    <div><img src={football2} className={\"App-logo2\"} alt=\"football2\"/></div>\n                </div>;\n        } else if (isReporting) {\n            gridSection =\n                <div className={\"Dfs-grid-section\"}>\n                    <div>\n                        <DfsReport reportingData={reportingData.data}/>\n                    </div>\n                    <div>\n                        <div className={'Dfs-sport'}>\n                            <h3>Site</h3>\n                            <div className={\"Dfs-grid-section\"}>\n                                <button style={{backgroundColor: (site === 'fd') ? 'dodgerblue' : 'white'}}\n                                        onClick={() => this.toggleSite('fd')}>Fanduel</button>\n                                <button style={{backgroundColor: (site === 'dk') ? 'dodgerblue' : 'white'}}\n                                        onClick={() => this.toggleSite('dk')}>Draftkings</button>\n                            </div>\n                        </div>\n                        <div className={'Dfs-sport'}>\n                            <h3>Week</h3>\n                            <div className={\"Dfs-grid-section\"}>\n                            {weekArray.map(\n                                (weekNumber) => (\n                                    <button style={{backgroundColor: (weeks.includes(weekNumber)) ? 'dodgerblue' : 'white'}}\n                                            onClick={() => this.toggleWeek(weekNumber)}>{weekNumber}</button>\n                                )\n                            )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        } else {\n            gridSection =\n                <div className={\"Dfs-grid-section\"}>\n                    <div>\n                        <h2 className={\"Dfs-header\"}>Fanduel</h2>\n                        <DfsGrid dfsLineup={fdLineup} removePlayer={this.removePlayerFromDfsLineup} site={'fd'}/>\n                    </div>\n                    <div>\n                        <h2 className={\"Dfs-header\"}>Draftkings</h2>\n                        <DfsGrid dfsLineup={dkLineup} removePlayer={this.removePlayerFromDfsLineup} site={'dk'}/>\n                    </div>\n                </div>;\n        }\n\n        return (\n            <Container fluid={true}>\n                <Navbar bg=\"primary\" variant=\"dark\">\n                    <Nav className=\"Nav-bar\">\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/simulate\">Back to Draft Simulator</Nav.Link>\n                        <Nav.Link href=\"/logout\">Logout</Nav.Link>\n                    </Nav>\n                </Navbar>\n                <h1 className={\"App-header\"}>DFS Optimizer</h1>\n                <div className={\"Dfs-sport\"}>\n                    <h3>Choose a sport:</h3>\n                    <div style={{display: 'flex'}}>\n                        <button style={{backgroundColor: (sport === 'mlb') ? 'dodgerblue' : 'white'}}\n                                onClick={() => this.fetchOptimalLineups('mlb', 'main')}>MLB</button>\n                        <button style={{backgroundColor: (sport === 'nfl') ? 'dodgerblue' : 'white'}}\n                                onClick={() => this.fetchOptimalLineups('nfl', slate)}>NFL</button>\n                        <button style={{backgroundColor: (sport === 'nba') ? 'dodgerblue' : 'white'}}\n                                onClick={() => this.fetchOptimalLineups('nba', 'main')}>NBA</button>\n                    </div>\n                    {(sport === 'nfl') && <h3>Choose a game slate:</h3>}\n                    {(sport === 'nfl') &&\n                        <div style={{display: 'flex'}}>\n                            <button style={{backgroundColor: (slate === 'thurs') ? 'dodgerblue' : 'white'}}\n                                    onClick={() => this.fetchOptimalLineups(sport, 'thurs')}>Thurs only</button>\n                            <button style={{backgroundColor: (slate === 'thurs-mon') ? 'dodgerblue' : 'white'}}\n                                    onClick={() => this.fetchOptimalLineups(sport, 'thurs-mon')}>Thurs - Mon</button>\n                            <button style={{backgroundColor: (slate === 'main') ? 'dodgerblue' : 'white'}}\n                                    onClick={() => this.fetchOptimalLineups(sport, 'main')}>Sun (Main)</button>\n                            <button style={{backgroundColor: (slate === 'sun-mon') ? 'dodgerblue' : 'white'}}\n                                    onClick={() => this.fetchOptimalLineups(sport, 'sun-mon')}>Sun - Mon</button>\n                        </div>}\n                    {sport && slate && <button style={{marginTop: '10px'}}\n                                      onClick={() => this.fetchOptimalLineups(sport, slate)}>Reset Lineups</button>}\n                    {(sport === 'nfl' && slate) && <button style={{marginTop: '10px'}}\n                                      onClick={() =>\n                                          this.fetchReportingData(sport, slate, site, weekArray)}>Generate Report</button>}\n                </div>\n                {gridSection}\n            </Container>\n        )\n    }\n}\n","/*\njQWidgets v7.1.0 (2019-Feb)\nCopyright (c) 2011-2019 jQWidgets.\nLicense: https://jqwidgets.com/license/\n*/\n/* eslint-disable */\n\nimport 'jqwidgets-framework/jqwidgets/styles/jqx.base.css';\nimport 'jqwidgets-framework/jqwidgets/jqxcore.js';\nimport 'jqwidgets-framework/jqwidgets/jqxpopover.js';\n\nimport React from 'react';\n\nconst JQXLite = window.JQXLite;\n\nexport const jqx = window.jqx;\n\nexport default class JqxPopover extends React.Component {\n    constructor(props) {\n        super(props);\n        const widgetId = 'jqxPopover' + JQXLite.generateID();\n        this.componentSelector = '#' + widgetId;\n        this.state = { id: widgetId };\n    };\n    componentDidMount() {\n        const options = this.manageAttributes();\n        this.createComponent(options);\n    };\n    manageAttributes() {\n        const properties = ['arrowOffsetValue','animationOpenDelay','animationCloseDelay','autoClose','animationType','height','initContent','isModal','offset','position','rtl','selector','showArrow','showCloseButton','width','title','theme'];\n        let options = {};\n        for(let item in this.props) {\n            if(item === 'settings') {\n                for(let itemTwo in this.props[item]) {\n                    options[itemTwo] = this.props[item][itemTwo];\n                }\n            } else {\n                if(properties.indexOf(item) !== -1) {\n                      options[item] = this.props[item];\n                }\n            }\n        }\n        return options;\n    };\n    createComponent(options) {\n        if(!this.style) {\n            for (let style in this.props.style) {\n                JQXLite(this.componentSelector).css(style, this.props.style[style]);\n            }\n        }\n        if(this.props.className !== undefined) {\n            const classes = this.props.className.split(' ');\n            for (let i = 0; i < classes.length; i++ ) {\n                JQXLite(this.componentSelector).addClass(classes[i]);\n            }\n        }\n        if(!this.template) {\n            JQXLite(this.componentSelector).html(this.props.template);\n        }\n        JQXLite(this.componentSelector).jqxPopover(options);\n    };\n    setOptions(options) {\n        JQXLite(this.componentSelector).jqxPopover('setOptions', options);\n    };\n    getOptions() {\n        if(arguments.length === 0) {\n            throw Error('At least one argument expected in getOptions()!');\n        }\n        let resultToReturn = {};\n        for(let i = 0; i < arguments.length; i++) {\n            resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxPopover(arguments[i]);\n        }\n        return resultToReturn;\n    };\n    on(name,callbackFn) {\n        JQXLite(this.componentSelector).on(name,callbackFn);\n    };\n    off(name) {\n        JQXLite(this.componentSelector).off(name);\n    };\n    arrowOffsetValue(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue');\n        }\n    };\n    animationOpenDelay(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('animationOpenDelay', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('animationOpenDelay');\n        }\n    };\n    animationCloseDelay(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('animationCloseDelay', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('animationCloseDelay');\n        }\n    };\n    autoClose(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('autoClose', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('autoClose');\n        }\n    };\n    animationType(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('animationType', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('animationType');\n        }\n    };\n    height(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('height', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('height');\n        }\n    };\n    initContent(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('initContent', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('initContent');\n        }\n    };\n    isModal(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('isModal', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('isModal');\n        }\n    };\n    offset(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('offset', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('offset');\n        }\n    };\n    position(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('position', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('position');\n        }\n    };\n    rtl(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('rtl', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('rtl');\n        }\n    };\n    selector(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('selector', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('selector');\n        }\n    };\n    showArrow(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('showArrow', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('showArrow');\n        }\n    };\n    showCloseButton(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('showCloseButton', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('showCloseButton');\n        }\n    };\n    width(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('width', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('width');\n        }\n    };\n    title(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('title', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('title');\n        }\n    };\n    theme(arg) {\n        if (arg !== undefined) {\n            JQXLite(this.componentSelector).jqxPopover('theme', arg)\n        } else {\n            return JQXLite(this.componentSelector).jqxPopover('theme');\n        }\n    };\n    close() {\n        JQXLite(this.componentSelector).jqxPopover('close');\n    };\n    destroy() {\n        JQXLite(this.componentSelector).jqxPopover('destroy');\n    };\n    open() {\n        JQXLite(this.componentSelector).jqxPopover('open');\n    };\n    render() {\n        return (\n            <div id={this.state.id}>{this.props.value}{this.props.children}</div>\n        )\n    };\n};\n\n","import * as React from 'react';\n\ninterface playerAttributes {\n    Rank: number,\n    Name: string,\n    Position: string,\n    Team: string,\n}\n\ninterface playerProps {\n    player: playerAttributes,\n    isUserPlayer: boolean,\n    onChange: () => void,\n    onMove: (direction: string) => void\n}\n\nconst plus = require(\"../icons/plus.ico\") as any;\nconst minus = require(\"../icons/minus.ico\") as any;\nconst up = require(\"../icons/up.ico\") as any;\nconst down = require(\"../icons/down.ico\") as any;\n\nconst Player = (props: playerProps) =>\n    <tr>\n        <td>{props.player.Rank}</td>\n        <td>\n            <tr style={{fontWeight: 'bold'}}>{props.player.Name}</tr>\n            <tr>{props.player.Team} {props.player.Position}</tr>\n        </td>\n        <td>\n            <img src={(props.isUserPlayer) ? minus : plus} alt={\"add-or-remove\"} onClick={props.onChange} style={{height: '3vmin'}}/>\n        </td>\n        {props.isUserPlayer && (\n            <td style={{display: 'flex', flexDirection: 'column'}}>\n                <img src={up} alt={\"up\"} onClick={() => props.onMove('up')} style={{height: '3vmin'}}/>\n                <img src={down} alt={\"down\"} onClick={() => props.onMove('down')} style={{height: '3vmin'}}/>\n            </td>\n            )\n        }\n    </tr>;\n\nexport const PlayerListBox = (props: {\n    playerList: playerAttributes[],\n    filterList: playerAttributes[],\n    addPlayer: (index: number) => void }) =>\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\n            {props.playerList.map(\n                (player, index) => {\n                    if (!props.filterList || props.filterList.includes(player)) {\n                        return (\n                            <Player player={player}\n                                        isUserPlayer={false}\n                                        onChange={() => props.addPlayer(index)}\n                                        onMove={null}\n                            />\n                        )\n                    }\n                }\n            )}\n        </table>;\n\nexport const UserListBox = (props: {\n    userRoundList: [playerAttributes[]],\n    removePlayer: (roundIndex: number, index: number) => void,\n    movePlayer: (roundIndex: number, index: number, direction: string) => void}) =>\n        props.userRoundList.map(\n            (playerList, roundIndex) => {\n                return (\n                    <table style={{borderCollapse: 'collapse', marginBottom: '5vmin'}} className={'Draft-grid'}>\n                        <th colSpan={4} style={{textAlign: 'center'}}>{'Round ' + (roundIndex + 1)}</th>\n                        {playerList.map(\n                            (player, index) => (\n                                <Player player={player}\n                                        isUserPlayer={true}\n                                        onChange={() => props.removePlayer(roundIndex, index)}\n                                        onMove={(direction) => props.movePlayer(roundIndex, index, direction)}\n                                />\n                            )\n                        )}\n                    </table>\n                )\n            });\n","import * as React from 'react';\n\ninterface playerAttributes {\n    Name: string,\n    Position: string,\n    Team: string,\n    Round: number,\n    Frequency: string\n}\n\nexport const DraftResultsTable = (props: {\n    frequencyData: playerAttributes[]}) =>\n    <table>\n        <tr>\n            <th>Player</th>\n            <th>Round</th>\n            <th>Draft Frequency</th>\n        </tr>\n        {props.frequencyData.map(\n            (player) => (\n                <tr>\n                    <td>\n                        <tr style={{fontWeight: 'bold'}}>{player.Name}</tr>\n                        <tr>{player.Team} {player.Position}</tr>\n                    </td>\n                    <td>{player.Round}</td>\n                    <td>{player.Frequency}</td>\n                </tr>\n            )\n        )}\n    </table>;","import React, {Component} from 'react'\nimport { Container, Nav, Navbar } from 'react-bootstrap'\nimport './App.css';\nimport JqxPopover from '../jqxwidgets/react_jqxpopover'\nimport { PlayerListBox, UserListBox } from \"./PlayerListBox.tsx\"\nimport { DraftResultsTable } from \"./DraftResultsTable.tsx\";\nimport football from '../icons/football.ico'\nimport search from '../icons/search.ico'\n\nexport class Simulator extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {isLoading: true, players: [], searchText: '', filteredPlayers: null, site: 'espn',\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\n            teamCount: 10, pickOrder: 5, roundCount: 16, isDrafting: false, isRandom: false,\n            allFreqs: [], userFreqs: [], expectedTeam: [], frequencyData: []};\n    }\n\n    componentDidMount() {\n        this.fetchPlayersForSimulator(this.state.site);\n    }\n\n    fetchPlayersForSimulator = (site) => {\n        this.setState({isLoading: true});\n        fetch(window.location.origin + '/' + site + '-players')\n            .then(response => {\n                if (response.status !== 200) {\n                    alert('Could not load players.');\n                } else {\n                    response.json()\n                        .then((players) => {\n                            if (typeof players[0] === \"string\") {\n                                this.setState({isLoading: false});\n                                alert(players[0]);\n                            } else {\n                                this.setState({\n                                    isLoading: false,\n                                    players: players,\n                                    site: site\n                                });\n                            }\n                        })\n                }\n            });\n    };\n\n    handleSliderChange = (param, event) => {\n        this.setState({[param]: event.target.value})\n    };\n\n    closeAbout = () => {\n        this.refs.about.close();\n        let url = window.location.pathname.split('#');\n        window.location.href = window.location.origin + url[0].toString() + '#';\n    };\n\n    closeInstructions = () => {\n        this.refs.instructions.close();\n        let url = window.location.pathname.split('#');\n        window.location.href = window.location.origin + url[0].toString() + '#';\n    };\n\n    swapRankings = () => {\n        let newSite = (this.state.site === 'espn') ? 'yahoo' : 'espn';\n        this.fetchPlayersForSimulator(newSite);\n    };\n\n    saveRankings = () => {\n        let {userPlayers, site} = this.state;\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\n            alert('Please rank at least one player before saving.');\n        } else {\n            fetch(window.location.origin + '/save-ranking/' + site, {\n                method: 'POST',\n                body: JSON.stringify(userPlayers)\n            }).then(response => {\n                if (response.status !== 200) {\n                    alert('User ranking unable to be saved.');\n                } else {\n                    response.json()\n                        .then((responseJson) => {\n                            alert(responseJson[0])\n                        })\n                }\n            })\n        }\n    };\n\n    loadRankings = () => {\n        let site = this.state.site;\n        fetch(window.location.origin + '/load-ranking/' + site)\n            .then(response => {\n                if (response.status !== 200) {\n                    alert('Could not load user ranking data.');\n                }  else {\n                    response.json()\n                        .then((userRanking) => {\n                            if (typeof userRanking[0] === \"string\") {\n                                alert(userRanking[0]);\n                            } else {\n                                let {players, userPlayers} = this.state;\n                                let allPlayers = players.concat(userPlayers.flat());\n                                players = allPlayers.sort((a, b) => a.Rank - b.Rank);\n                                let allLoadedPlayers = userRanking.flat();\n                                for (let i = 0; i < allLoadedPlayers.length; i++) {\n                                    let userPlayerRank = allLoadedPlayers[i].Rank;\n                                    let playerIndex = players.findIndex(\n                                        (player) => player.Rank === userPlayerRank);\n                                    players.splice(playerIndex, 1);\n                                }\n                                this.setState({\n                                    players: players,\n                                    userPlayers: userRanking,\n                                    filteredPlayers: null\n                                })\n                            }\n                        })\n                }\n            });\n    };\n\n    filterPlayers = (event) => {\n        let text = event.target.value.toLowerCase();\n        let players = this.state.players;\n        let filteredPlayers = players.filter(\n            (player) =>\n                player.Name.toLowerCase().includes(text)\n                || player.Position.toLowerCase().includes(text)\n                || player.Team.toLowerCase().includes(text)\n        );\n        this.setState({\n            searchText: text,\n            filteredPlayers: filteredPlayers});\n    };\n\n    addPlayer = (playerIndex) => {\n        let {players, userPlayers} = this.state;\n        let playerToAdd = players[playerIndex];\n        players.splice(playerIndex, 1);\n        userPlayers[0].push(playerToAdd);\n        this.setState({\n            players: players,\n            userPlayers: userPlayers,\n            filteredPlayers: null,\n            searchText: ''\n        });\n    };\n\n    removePlayer = (roundIndex, playerIndex) => {\n        let {players, userPlayers} = this.state;\n        let roundList = userPlayers[roundIndex];\n        let removedPlayer = roundList[playerIndex];\n        let removedPlayerRank = removedPlayer.Rank;\n        const originalPlayerNeighbor = players.find((player) => player.Rank > removedPlayerRank);\n        players.splice(players.indexOf(originalPlayerNeighbor), 0, removedPlayer);\n        roundList.splice(playerIndex, 1);\n        this.setState({\n            players: players,\n            userPlayers: userPlayers\n        });\n    };\n\n    clearPlayers = () => {\n        let {players, userPlayers} = this.state;\n        let allUserPlayers = userPlayers.flat();\n        let allPlayers = players.concat(allUserPlayers);\n        this.setState({\n            players: allPlayers.sort((a, b) => a.Rank - b.Rank),\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\n            filteredPlayers: null\n        });\n    };\n\n    movePlayer = (roundIndex, playerIndex, direction) => {\n        let userPlayers = this.state.userPlayers;\n        let roundList = userPlayers[roundIndex];\n        let player = roundList[playerIndex];\n        userPlayers[roundIndex].splice(playerIndex, 1);\n        if (direction === 'up') {\n            if (playerIndex > 0) {\n                userPlayers[roundIndex].splice(playerIndex - 1, 0, player);\n            } else if (roundIndex > 0) {\n                userPlayers[roundIndex - 1].push(player);\n            } else {\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\n            }\n        } else if (direction === 'down') {\n            if (playerIndex < roundList.length) {\n                roundList.splice(playerIndex + 1, 0, player);\n            } else if (roundIndex < userPlayers.length - 1) {\n                userPlayers[roundIndex + 1].splice(0, 0, player);\n            } else {\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\n            }\n        }\n        this.setState({userPlayers: userPlayers});\n    };\n\n    determineIfRandom = (event) => {\n        this.setState({isRandom: event.target.checked})\n    };\n\n    simulateDrafts = (draftCancelled) => {\n        if (draftCancelled) {\n            this.setState({isDrafting: false});\n            return\n        }\n        let {userPlayers, teamCount, pickOrder, roundCount, site} = this.state;\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\n            alert('Please select at least one player to draft.');\n        } else {\n            let playerNames = userPlayers.map((roundList) => roundList.map((player) => player.Name));\n            this.setState({isDrafting: true});\n            fetch(window.location.origin + '/draft-results', {\n                method: 'POST',\n                body: JSON.stringify(playerNames) + '|' + teamCount + '|' + pickOrder + '|' + roundCount + '|' + site\n            }).then(response => {\n                if (response.status !== 200) {\n                    alert('Error loading draft results.');\n                } else {\n                    response.json()\n                        .then((draftResults) => {\n                            if (typeof draftResults[0] == \"string\") {\n                                alert(draftResults[0]);\n                            } else {\n                                this.generateDraftOutput(draftResults);\n                            }\n                        })\n                }\n            });\n        }\n    };\n\n    generateDraftOutput = (draftResults) => {\n        if (draftResults === ['Draft error!']) {\n            alert('No players were drafted. :( \\nSomething went wrong . . .');\n        }\n        this.setState({\n            isDrafting: false,\n            userFreqs: draftResults.UserFrequencies,\n            allFreqs: draftResults.AllFrequencies,\n            expectedTeam: draftResults.ExpectedTeam,\n            frequencyData: draftResults.UserFrequencies\n        });\n    };\n\n    toggleFrequencyData = (frequencyData) => {\n        this.setState({frequencyData: frequencyData});\n    };\n\n    render() {\n        const {isLoading, players, filteredPlayers, site,\n            userPlayers, teamCount, pickOrder, roundCount, isDrafting, isRandom,\n            userFreqs, allFreqs, expectedTeam, frequencyData} = this.state;\n        let playerListBox, draftResultsTable;\n\n        if (isLoading) {\n            playerListBox =\n                <div className={\"Loading\"}>\n                    <div><p className={\"Loading-text\"}>Loading players . . .</p></div>\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\n                </div>;\n        } else {\n            playerListBox =\n                <PlayerListBox playerList={players} filterList={filteredPlayers} addPlayer={this.addPlayer}/>;\n        }\n        if (isDrafting) {\n            draftResultsTable =\n                <div className={\"Loading\"}>\n                    <div><p className={\"Loading-text\"}>Drafting . . .</p></div>\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\n                    <div>\n                        <button onClick={() => this.simulateDrafts(true)}\n                                className={\"Cancel-draft-button\"}>Cancel</button>\n                    </div>\n                </div>;\n        } else {\n            draftResultsTable = <DraftResultsTable frequencyData={frequencyData}/>;\n        }\n\n        const swapButtonText = (site === 'espn') ? 'Switch to Yahoo' : 'Switch to ESPN';\n        const swapButtonColor = (site === 'espn') ? '#6C00B3' : '#CE0000';\n\n        return (\n            <Container fluid={true}>\n                <Navbar bg=\"primary\" variant=\"dark\">\n                    <Nav className=\"Nav-bar\">\n                      <Nav.Link href=\"/\">Home</Nav.Link>\n                      <Nav.Link href=\"#about\">About</Nav.Link>\n                      <Nav.Link href=\"#instructions\">Instructions</Nav.Link>\n                      <Nav.Link href=\"/optimize\">DFS Optimizer</Nav.Link>\n                        <Nav.Link href=\"/logout\">Logout</Nav.Link>\n                    </Nav>\n                </Navbar>\n                <div className={\"Info-buttons\"}>\n                    <JqxPopover ref='about' isModal={true} width={310}\n                        position={'bottom'} title={'About Draft Simulator'} selector={'a[href$=\"#about\"]'}>\n                        <p>Draft Simulator is a fantasy football draft preparation tool.</p>\n                        <p>More often than not, others in your league will only draft among the \"top available\n                            players\" in each round, which are determined by ESPN's preseason rankings.</p>\n                        <p>However, Draft Simulator allows you to create and refine your own personal rankings that\n                            you can bring to your draft to get the team you've always dreamed of.</p>\n                        <button onClick={this.closeAbout}\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\n                            Got it!</button>\n                    </JqxPopover>\n                    <JqxPopover ref='instructions' isModal={true} width={310}\n                        position={'bottom'} title={'Instructions'} selector={'a[href$=\"#instructions\"]'}>\n                        <ol>\n                            <li>Search for and select players from the player list. These should be players you'd\n                                feel strongly about drafting.</li>\n                            <li>Click \"Add\" to move them to your preferred list.</li>\n                            <li>Drag and drop your players in order of overall preference.</li>\n                            <li>Adjust the sliders to your desired specifications, then click \"Draft\".</li>\n                            <li>See how often you were able to draft each player under the \"Draft Frequency\"\n                                tab.</li>\n                            <li>The \"All Players\" tab shows the draft frequency of all players taken, not just your\n                                preferred players.</li>\n                            <li>The \"Expected Team\" tab shows your most likely fantasy team given the\n                                simulations.</li>\n                        </ol>\n                        <button onClick={this.closeInstructions}\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\n                            Let's draft!</button>\n                    </JqxPopover>\n                </div>\n                <h1 className={\"App-header\"}>Draft Simulator</h1>\n                <div className={\"Buttons-and-boxes\"}>\n                    <div className={\"Player-list-box\"}>\n                        <div>\n                            {!filteredPlayers && <img src={search} style={{height: '3vmin', position: 'absolute'}}\n                                                      alt=\"search\"/>}\n                            <input type=\"text\" style={{height: '25px', width: '90%'}}\n                                   value={this.state.searchText}\n                                   onClick={this.filterPlayers}\n                                   onChange={this.filterPlayers}>{null}</input>\n                        </div>\n                        {playerListBox}\n                    </div>\n                    <div className={\"Player-buttons\"}>\n                        <button onClick={this.clearPlayers} style={{fontSize: 16}}\n                                className={\"Clear-button\"}>Clear</button>\n                        <button id='rankingButton' onClick={this.loadRankings}\n                                className={\"Ranking-button\"}>Load Saved Rankings</button>\n                        <button id='swapButton' style={{backgroundColor: swapButtonColor}}\n                                onClick={this.swapRankings} className={\"Swap-button\"}>{swapButtonText}</button>\n                    </div>\n                    <div className={\"Player-list-box\"}>\n                        <UserListBox userRoundList={userPlayers} removePlayer={this.removePlayer}\n                                     movePlayer={this.movePlayer} className={\"Player-list-box\"}/>\n                    </div>\n                    <div className={\"Draft-buttons\"}>\n                        <button onClick={this.saveRankings} style={{fontSize: 16}}\n                                className={\"Ranking-button\"}>Save Player Rankings</button>\n                        <button onClick={() => this.simulateDrafts(false)}\n                                style={{fontSize: 16}} className={\"Draft-button\"}>Draft!</button>\n                    </div>\n                    <div className={\"Player-list-box\"}>\n                        <tr>\n                            <button\n                                onClick={() => this.toggleFrequencyData(userFreqs)}\n                                style={{borderStyle: (frequencyData === userFreqs) ?\n                                        'inset' : 'outset'}}>Your Players</button>\n                            <button\n                                onClick={() => this.toggleFrequencyData(allFreqs)}\n                                style={{borderStyle: (frequencyData === allFreqs) ?\n                                        'inset' : 'outset'}}>All Players</button>\n                            <button\n                                onClick={() => this.toggleFrequencyData(expectedTeam)}\n                                style={{borderStyle: (frequencyData === expectedTeam) ?\n                                        'inset' : 'outset'}}>Expected Team</button>\n                        </tr>\n                        {draftResultsTable}\n                    </div>\n                </div>\n                <div className={\"Slider-row\"}>\n                    <div className={\"Sliders\"}>\n                        <p>Number of teams per draft:</p>\n                        <div>{teamCount}</div>\n                        <input type={\"range\"} min={6} max={14} step={2} value={teamCount}\n                               onChange={(event) => this.handleSliderChange('teamCount', event)}/>\n                    </div>\n                    <div className={\"Sliders\"}>\n                        <p>Your pick in the draft:</p>\n                        <div>{pickOrder}</div>\n                        <input type={\"range\"} min={1} max={teamCount} value={pickOrder}\n                                   onChange={(event) => this.handleSliderChange('pickOrder', event)}/>\n                        <form>\n                          <label>\n                            Randomize:\n                            <input type=\"checkbox\" checked={isRandom} onChange={this.determineIfRandom}/>\n                          </label>\n                        </form>\n                    </div>\n                    <div className={\"Sliders\"}>\n                        <p>Number of rounds per draft:</p>\n                        <div>{roundCount}</div>\n                        <input type={\"range\"} min={1} max={16} value={roundCount}\n                                   onChange={(event) => this.handleSliderChange('roundCount', event)}/>\n                    </div>\n                </div>\n            </Container>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Homepage } from \"./Homepage\";\nimport { Optimizer } from './Optimizer'\nimport { Simulator } from \"./Simulator\";\n\nclass App extends Component {\n\n    render() {\n        if (window.location.pathname === '/home') {\n            return <Homepage/>\n        } else if (window.location.pathname === '/simulate') {\n            return <Simulator/>\n        } else if (window.location.pathname === '/optimize') {\n            return <Optimizer/>\n        }\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}