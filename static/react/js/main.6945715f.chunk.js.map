{"version":3,"sources":["icons/football.ico","icons/search.ico","icons/plus.ico","icons/minus.ico","icons/football2.svg","icons/cloudy.ico","icons/partlycloudy.ico","icons/rainy.ico","icons/snowy.ico","icons/stormy.ico","icons/sunny.ico","icons/up.ico","icons/down.ico","main/Homepage.js","main/optimizer/sumAttribute.js","main/optimizer/DfsGrid.tsx","main/optimizer/DfsReport.tsx","main/optimizer/DfsPlayerListBox.tsx","main/optimizer/DfsBlackListBox.tsx","main/optimizer/Optimizer.js","main/optimizer/getfilterPlayersState.js","main/optimizer/getAddToLineupState.js","main/optimizer/getRemoveFromLineupState.js","main/optimizer/getToggleBlackListState.js","jqxwidgets/react_jqxpopover.js","main/simulator/PlayerListBox.tsx","main/simulator/DraftResultsTable.tsx","main/simulator/Simulator.js","main/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Homepage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","onClick","window","location","href","origin","Component","sumAttribute","lineup","attribute","map","player","parseFloat","reduce","b","cloudy","require","partlyCloudy","rainy","snowy","stormy","sunny","Player","props","forecast","Weather","toLowerCase","weatherImage","includes","react","style","backgroundColor","Name","whiteList","filter","Position","Team","fontWeight","color","Status","Projected","Price","concat","toString","replace","Opp","display","alignItems","src","alt","height","details","onRemove","DfsGrid","site","dfsLineup","playerIndex","DfsGrid_Player","removePlayer","pointSum","toFixed","salarySum","cap","DfsReport","reportingData","row","position","expected","actual","optimal","expected_v_actual","actual_v_optimal","expected_v_optimal","plus","minus","blackList","onPlusClick","onMinusClick","DfsPlayerBox","borderCollapse","playerList","sort","index","filterList","DfsPlayerListBox_Player","whiteListFunction","blackListFunction","DfsBlackListBox","DfsBlackListBox_Player","Optimizer","_this","call","generateLineup","sport","slate","_this$state","state","whiteListNames","blackListNames","setState","isOptimizing","isReporting","fetch","method","body","then","response","status","alert","json","lineupJson","ingestDfsLineup","clearLineup","isLoading","data","playerPool","fetchReportingData","weeks","filterPlayers","newState","filteredPool","text","searchText","getFilterPlayersState","addToLineup","playerToAdd","find","Id","spotsToReplace","length","push","playerInBlackList","splice","indexOf","spotToReplace","lineupIndex","playerToAddCopy","JSON","parse","stringify","getAddToLineupState","removeFromLineup","playerToRemove","playerInWhiteList","getRemoveFromLineupState","toggleBlackList","blackListedPlayer","playerInLineup","getToggleBlackListState","toggleWeek","selectedWeek","_this$state2","gridSection","_this2","_this$state3","weekArray","i","maxWeek","console","log","football","football2","DfsReport_DfsReport","weekNumber","DfsBlackListBox_DfsBlackListBox","flexDirection","search","type","width","onChange","event","target","toConsumableArray","Set","split","selected","team","DfsPlayerListBox_DfsPlayerBox","DfsGrid_DfsGrid","Container","fluid","Navbar","bg","variant","Nav","Link","margin","marginTop","JQXLite","JqxPopover","jqx","widgetId","generateID","componentSelector","id","options","manageAttributes","createComponent","properties","item","itemTwo","css","undefined","classes","addClass","template","html","jqxPopover","Error","resultToReturn","name","callbackFn","on","off","arg","children","React","up","down","Rank","isUserPlayer","onMove","PlayerListBox","PlayerListBox_Player","addPlayer","UserListBox","userRoundList","roundIndex","marginBottom","colSpan","textAlign","direction","movePlayer","DraftResultsTable","frequencyData","Round","Frequency","Simulator","fetchPlayersForSimulator","players","handleSliderChange","param","defineProperty","closeAbout","refs","about","close","url","pathname","closeInstructions","instructions","swapRankings","newSite","saveRankings","userPlayers","every","roundList","responseJson","loadRankings","userRanking","allPlayers","flat","allLoadedPlayers","_loop","userPlayerRank","findIndex","filteredPlayers","_this$state4","removedPlayer","removedPlayerRank","originalPlayerNeighbor","clearPlayers","_this$state5","allUserPlayers","determineIfRandom","isRandom","checked","simulateDrafts","draftCancelled","isDrafting","_this$state6","teamCount","pickOrder","roundCount","playerNames","draftResults","generateDraftOutput","userFreqs","UserFrequencies","allFreqs","AllFrequencies","expectedTeam","ExpectedTeam","toggleFrequencyData","playerListBox","draftResultsTable","_this$state7","PlayerListBox_PlayerListBox","DraftResultsTable_DraftResultsTable","swapButtonText","swapButtonColor","react_jqxpopover_JqxPopover","ref","isModal","title","selector","float","padding","borderRadius","fontSize","PlayerListBox_UserListBox","borderStyle","min","max","step","App","Homepage_Homepage","Simulator_Simulator","Optimizer_Optimizer","Boolean","hostname","match","ReactDOM","render","src_main_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.6945715f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/football.c5005feb.ico\";","module.exports = __webpack_public_path__ + \"media/search.04c89f3b.ico\";","module.exports = __webpack_public_path__ + \"media/plus.220c44df.ico\";","module.exports = __webpack_public_path__ + \"media/minus.5edbe473.ico\";","module.exports = __webpack_public_path__ + \"media/football2.fac02615.svg\";","module.exports = __webpack_public_path__ + \"media/cloudy.340c3269.ico\";","module.exports = __webpack_public_path__ + \"media/partlycloudy.a5e52894.ico\";","module.exports = __webpack_public_path__ + \"media/rainy.dda0cf39.ico\";","module.exports = __webpack_public_path__ + \"media/snowy.203024ab.ico\";","module.exports = __webpack_public_path__ + \"media/stormy.ca70c957.ico\";","module.exports = __webpack_public_path__ + \"media/sunny.a306062d.ico\";","module.exports = __webpack_public_path__ + \"media/up.04732abf.ico\";","module.exports = __webpack_public_path__ + \"media/down.61889039.ico\";","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nexport class Homepage extends Component {\r\n\r\n    render() {\r\n        return (\r\n                <div className={'Home'}>\r\n                    <h1 className={'Home-header'}>Welcome to Draft Simulator!</h1>\r\n                    <h3 className={'Dfs-header'}>To start, click the link below:</h3>\r\n                    <div className={\"Home-buttons\"}>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/simulate'}}\r\n                            className={'Site-button'}>Simulator</button>\r\n                    </div>\r\n                    <h3 className={'Dfs-header'}>Or, check out our DFS Optimizer:</h3>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/optimize'}}\r\n                            className={'Dfs-button'}>DFS Optimizer</button>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/logout'}}\r\n                            className={'Logout-button'}>Log Out</button>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}","function sumAttribute(lineup, attribute) {\r\n    let attributeArray = lineup.map((player) => ((player[attribute]) ? parseFloat(player[attribute]) : 0));\r\n    return attributeArray.reduce((a,b) => a + b, 0);\r\n}\r\n\r\nexport { sumAttribute }","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Position: string,\r\n    Team: string,\r\n    Name: string,\r\n    Status: string,\r\n    Projected: number,\r\n    Price: number,\r\n    Opp: string,\r\n    Weather: any\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    onRemove: () => void,\r\n    whiteList: playerAttributes[]\r\n}\r\n\r\nconst cloudy = require(\"../../icons/cloudy.ico\") as any;\r\nconst partlyCloudy = require(\"../../icons/partlycloudy.ico\") as any;\r\nconst rainy = require(\"../../icons/rainy.ico\") as any;\r\nconst snowy = require(\"../../icons/snowy.ico\") as any;\r\nconst stormy = require(\"../../icons/stormy.ico\") as any;\r\nconst sunny = require(\"../../icons/sunny.ico\") as any;\r\n\r\nconst Player = (props: playerProps) => {\r\n    const forecast = (props.player.Weather.forecast) ? props.player.Weather.forecast.toLowerCase() : null;\r\n    const weatherImage = (props.player.Weather.forecast) ?\r\n        (forecast.includes('partly')) ? partlyCloudy :\r\n        (forecast.includes('cloud') || forecast.includes('fog')) ? cloudy :\r\n        (forecast.includes('storm') || forecast.includes('thunder')) ? stormy :\r\n        (forecast.includes('rain') || forecast.includes('shower')) ? rainy :\r\n        (forecast.includes('snow') || forecast.includes('flurr')) ? snowy :\r\n        (forecast.includes('sun') || forecast.includes('clear')) ? sunny : null\r\n        : null;\r\n\r\n    return (\r\n        <tr style={{backgroundColor: (props.player.Name && props.whiteList.filter(\r\n            (player) => player.Name).map((player) => (player.Name)).includes(props.player.Name)) ? 'lightgreen' : null}}>\r\n            <td>{props.player.Position}</td>\r\n            <td>{props.player.Team}</td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\r\n                {props.player.Name} <b style={{color: 'red'}}>{props.player.Status}</b></td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\r\n                {props.player.Projected}</td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\r\n                {props.player.Price && '$'.concat(props.player.Price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}</td>\r\n            <td>{props.player.Opp}</td>\r\n            <td style={{display: 'flex', alignItems: 'center'}}>\r\n                {props.player.Weather.forecast && <img src={weatherImage} alt={\"weather\"} style={{height: '4vmin'}}/>}\r\n                <p>{props.player.Weather.details}</p>\r\n            </td>\r\n            <td>\r\n                {props.player.Position && props.player.Name && <button onClick={props.onRemove} style={{fontWeight: 'bold'}}>X</button>}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport const DfsGrid = (props: {\r\n    dfsLineup: playerAttributes[],\r\n    removePlayer: (playerIndex: number) => void,\r\n    site: string,\r\n    whiteList: playerAttributes[],\r\n    pointSum: number,\r\n    salarySum: number,\r\n    cap: number}) =>\r\n        <table className={'Dfs-grid'}>\r\n            <tr style={{backgroundColor: (props.site === 'fd') ? 'dodgerblue' : 'black'}}>\r\n                <th>Position</th>\r\n                <th>Team</th>\r\n                <th>Player</th>\r\n                <th>Projected</th>\r\n                <th>Price</th>\r\n                <th>Opp</th>\r\n                <th>Weather</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n            {props.dfsLineup.map(\r\n                (player, playerIndex) => (\r\n                    <Player player={player}\r\n                            onRemove={() => props.removePlayer(playerIndex)}\r\n                            whiteList={props.whiteList}\r\n                    />\r\n                )\r\n            )}\r\n            <tr style={{fontWeight: 'bold'}}>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n                <td>Total</td>\r\n                <td>{props.pointSum.toFixed(1)}</td>\r\n                <td style={{color: (props.salarySum > props.cap) ? 'indianred' : 'black'}}>\r\n                    {'$'.concat(props.salarySum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}\r\n                </td>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n            </tr>\r\n        </table>;\r\n","import * as React from 'react';\r\n\r\ninterface rowAttributes {\r\n    position: string,\r\n    expected: number,\r\n    actual: number,\r\n    optimal: number,\r\n    expected_v_actual: number,\r\n    actual_v_optimal: number,\r\n    expected_v_optimal: number\r\n}\r\n\r\nexport const DfsReport = (props: {\r\n    reportingData: rowAttributes[]}) =>\r\n    <table>\r\n        <tr>\r\n            <th>Position</th>\r\n            <th>Projected</th>\r\n            <th>Actual</th>\r\n            <th>Optimal</th>\r\n            <th>Expected vs Actual</th>\r\n            <th>Actual vs Optimal</th>\r\n            <th>Expected vs Optimal</th>\r\n        </tr>\r\n        {props.reportingData.map(\r\n            (row) => (\r\n                <tr style={{fontWeight: (row.position === 'Total') ? 'bold' : 'normal'}}>\r\n                    <td>{row.position}</td>\r\n                    <td>{row.expected}</td>\r\n                    <td>{row.actual}</td>\r\n                    <td>{row.optimal}</td>\r\n                    <td>{(100 * row.expected_v_actual).toFixed(2).toString().concat('%')}</td>\r\n                    <td>{(100 * row.actual_v_optimal).toFixed(2).toString().concat('%')}</td>\r\n                    <td>{(100 * row.expected_v_optimal).toFixed(2).toString().concat('%')}</td>\r\n                </tr>\r\n            )\r\n        )}\r\n    </table>;\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Position: string,\r\n    Team: string,\r\n    Name: string,\r\n    Status: string,\r\n    Projected: number,\r\n    Price: number,\r\n    Opp: string,\r\n    Weather: any\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    onPlusClick: () => void,\r\n    onMinusClick: () => void,\r\n    whiteList: playerAttributes[],\r\n    blackList: playerAttributes[],\r\n    salarySum: number,\r\n    cap: number\r\n}\r\n\r\nconst plus = require(\"../../icons/plus.ico\") as any;\r\nconst minus = require(\"../../icons/minus.ico\") as any;\r\n\r\nconst Player = (props: playerProps) =>\r\n    <tr style={{backgroundColor: (props.whiteList.includes(props.player)) ? 'lightgreen' : (props.blackList.includes(props.player)) ? 'indianred' : 'white'}}>\r\n        <td>\r\n            <tr style={{fontWeight: 'bold'}}>{props.player.Name}</tr>\r\n            <tr>{props.player.Team} {props.player.Position}</tr>\r\n        </td>\r\n        <td>{props.player.Opp}</td>\r\n        <td style={{color: (props.salarySum + props.player.Price > props.cap) ? 'red' : 'black'}}>\r\n            {'$'.concat(props.player.Price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}\r\n        </td>\r\n        <td>\r\n            <img src={plus} alt={\"add\"} onClick={props.onPlusClick} style={{height: '3vmin'}}/>\r\n        </td>\r\n        <td>\r\n            <img src={minus} alt={\"remove\"} onClick={props.onMinusClick} style={{height: '3vmin'}}/>\r\n        </td>\r\n    </tr>;\r\n\r\nexport const DfsPlayerBox = (props: {\r\n    playerList: playerAttributes[],\r\n    filterList: playerAttributes[],\r\n    whiteListFunction: (index: number) => void,\r\n    blackListFunction: (index: number) => void,\r\n    whiteList: playerAttributes[],\r\n    blackList: playerAttributes[],\r\n    salarySum: number,\r\n    cap: number}) =>\r\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\r\n            <tr style={{backgroundColor: 'lightgray'}}>\r\n                <th>Player</th>\r\n                <th>Opp</th>\r\n                <th>Salary</th>\r\n                <th>Add</th>\r\n                <th>Blacklist</th>\r\n            </tr>\r\n            {props.playerList.sort((a, b) => b.Price - a.Price).map(\r\n                (player, index) => {\r\n                    if (!props.filterList || props.filterList.includes(player)) {\r\n                        return (\r\n                            <Player player={player}\r\n                                    onPlusClick={() => props.whiteListFunction(index)}\r\n                                    onMinusClick={() => props.blackListFunction(index)}\r\n                                    whiteList={props.whiteList}\r\n                                    blackList={props.blackList}\r\n                                    salarySum={props.salarySum}\r\n                                    cap={props.cap}\r\n                            />\r\n                        )\r\n                    }\r\n                }\r\n            )}\r\n        </table>;\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Position: string,\r\n    Team: string,\r\n    Name: string,\r\n    Status: string,\r\n    Projected: number,\r\n    Price: number,\r\n    Opp: string,\r\n    Weather: any\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes\r\n}\r\n\r\nconst Player = (props: playerProps) =>\r\n    <tr>\r\n        <td>\r\n            <tr style={{fontWeight: 'bold'}}>{props.player.Name}</tr>\r\n            <tr>{props.player.Team} {props.player.Position}</tr>\r\n        </td>\r\n        <td>{props.player.Opp}</td>\r\n        <td>\r\n            {'$'.concat(props.player.Price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}\r\n        </td>\r\n    </tr>;\r\n\r\nexport const DfsBlackListBox = (props: {\r\n    blackList: playerAttributes[]\r\n    }) =>\r\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\r\n            <tr style={{backgroundColor: 'indianred'}}>\r\n                <th>Player</th>\r\n                <th>Opp</th>\r\n                <th>Salary</th>\r\n            </tr>\r\n            {props.blackList.sort((a, b) => b.Price - a.Price).map(\r\n                (player) => {\r\n                    return (\r\n                        <Player player={player}/>\r\n                    )\r\n                }\r\n            )}\r\n        </table>;\r\n","import React, { Component } from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap'\r\nimport { getAddToLineupState } from './getAddToLineupState'\r\nimport { getRemoveFromLineupState } from './getRemoveFromLineupState'\r\nimport { getToggleBlackListState } from './getToggleBlackListState'\r\nimport { getFilterPlayersState } from \"./getfilterPlayersState\"\r\nimport { sumAttribute } from './sumAttribute'\r\nimport { DfsGrid } from './DfsGrid.tsx';\r\nimport { DfsReport } from './DfsReport.tsx';\r\nimport { DfsPlayerBox } from './DfsPlayerListBox.tsx'\r\nimport { DfsBlackListBox } from './DfsBlackListBox.tsx'\r\nimport football2 from '../../icons/football2.svg';\r\nimport football from '../../icons/football.ico';\r\nimport search from \"../../icons/search.ico\";\r\n\r\nexport class Optimizer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isLoading: false, isOptimizing: false, isReporting: false, sport: '', site: '', slate: '',\r\n                      lineup: [], cap: 0, playerPool: [], filteredPool: null, searchText: '', whiteList: [],\r\n                      blackList: [], reportingData: {}, weeks: []};\r\n    }\r\n\r\n    generateLineup = (sport, site, slate) => {\r\n        let {lineup, blackList} = this.state;\r\n        let whiteListNames = lineup.filter((player) => player.Name).map((player) => (player.Name));\r\n        let blackListNames = blackList.filter((player) => player.Name).map((player) => (player.Name));\r\n        this.setState({\r\n            isOptimizing: true,\r\n            isReporting: false,\r\n            sport: sport,\r\n            site: site,\r\n            slate: slate,\r\n            whiteList: lineup.filter((player) => player.Name)\r\n        });\r\n        fetch(window.location.origin + '/optimize/generate/' + sport + '/' + site + '/' + slate, {\r\n            method: 'POST',\r\n            body: whiteListNames.toString() + '|' + blackListNames.toString()\r\n        }).then(response => {\r\n            if (response.status !== 200) {\r\n                alert('Error removing player.');\r\n            } else {\r\n                response.json()\r\n                    .then((lineupJson) => {\r\n                        this.ingestDfsLineup(lineupJson);\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    ingestDfsLineup = (lineupJson) => {\r\n        if (typeof lineupJson === \"string\") {\r\n            this.setState({isOptimizing: false});\r\n            alert(lineupJson);\r\n            return\r\n        }\r\n        let lineup = (typeof lineupJson === \"string\") ? [] : lineupJson;\r\n        this.setState({\r\n            isOptimizing: false,\r\n            lineup: lineup\r\n        });\r\n    };\r\n\r\n    clearLineup = (sport, site, slate) => {\r\n        if (!sport) {\r\n            alert('Please select a sport.');\r\n        } else if (sport === 'nba') {\r\n            alert('Warning: \\nThis sport is currently unavailable.');\r\n        } else if (!site || !slate) {\r\n            this.setState({sport: sport, site: site, slate: slate});\r\n        } else {\r\n            this.setState({\r\n                isLoading: true,\r\n                isReporting: false,\r\n                sport: sport,\r\n                site: site,\r\n                slate: slate\r\n            });\r\n            fetch(window.location.origin + '/optimize/clear/' + sport + '/' + site + '/' + slate)\r\n                .then(response => {\r\n                    if (response.status !== 200) {\r\n                        alert('An error occurred.');\r\n                    } else {\r\n                        response.json()\r\n                            .then((data) => {\r\n                                this.setState({\r\n                                    isLoading: false,\r\n                                    playerPool: data.playerPool,\r\n                                    lineup: data.lineup,\r\n                                    cap: data.cap,\r\n                                    whiteList: [],\r\n                                    blackList: []\r\n                                });\r\n                            });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    fetchReportingData = (sport, slate, site, weeks) => {\r\n        sport = 'nfl';\r\n        if (!sport) {\r\n            alert('Please select a sport.');\r\n        } else {\r\n            fetch(window.location.origin + '/optimize/reporting/' + sport + '/' + site + '/' + slate, {\r\n                method: 'POST',\r\n                body: weeks\r\n            }).then(response => {\r\n                    if (response.status !== 200) {\r\n                        alert('Failed to generate report.');\r\n                    } else {\r\n                        response.json()\r\n                            .then((reportingData) => {\r\n                                this.setState({\r\n                                    isReporting: true,\r\n                                    weeks: weeks,\r\n                                    reportingData: reportingData});\r\n                            });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    filterPlayers = (attribute, value) => {\r\n        let newState = getFilterPlayersState(attribute, value, this.state);\r\n        this.setState(newState);\r\n    };\r\n\r\n    addToLineup = (playerIndex) => {\r\n        let newState = getAddToLineupState(playerIndex, this.state);\r\n        if (typeof newState === 'string') {\r\n            alert(newState);\r\n        } else {\r\n            this.setState(newState);\r\n        }\r\n    };\r\n\r\n    removeFromLineup = (playerIndex) => {\r\n        let newState = getRemoveFromLineupState(playerIndex, this.state);\r\n        this.setState(newState);\r\n    };\r\n\r\n    toggleBlackList = (playerIndex) => {\r\n        let newState = getToggleBlackListState(playerIndex, this.state);\r\n        this.setState(newState);\r\n    };\r\n\r\n    toggleWeek = (selectedWeek) => {\r\n        let {sport, slate, site, weeks} = this.state;\r\n        if (weeks.includes(selectedWeek)) {\r\n            weeks.splice(weeks.indexOf(selectedWeek), 1);\r\n        } else {\r\n            weeks.push(selectedWeek);\r\n        }\r\n        this.fetchReportingData(sport, slate, site, weeks);\r\n        return weeks\r\n    };\r\n\r\n    render() {\r\n        const {isLoading, isOptimizing, isReporting, sport, site, slate, lineup, cap, playerPool, filteredPool,\r\n            searchText, whiteList, blackList, reportingData, weeks} = this.state;\r\n\r\n        let gridSection;\r\n        let weekArray = [];\r\n        for (let i = 1; i <= reportingData.maxWeek; i++) {\r\n            weekArray.push(i);\r\n        }\r\n        console.log(weekArray);\r\n\r\n        if (isLoading) {\r\n            gridSection =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Loading-text\"}>Loading . . .</p></div>\r\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\r\n                </div>;\r\n        } else if (isOptimizing) {\r\n            gridSection =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Optimizing-text\"}>Optimizing . . .</p></div>\r\n                    <div><img src={football2} className={\"App-logo2\"} alt=\"football2\"/></div>\r\n                </div>;\r\n        } else if (isReporting) {\r\n            gridSection =\r\n                <div className={\"Dfs-grid-section\"}>\r\n                    <div>\r\n                        <DfsReport reportingData={reportingData.data}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className={'Dfs-sport'}>\r\n                            <h3>Week</h3>\r\n                            <div className={\"Dfs-grid-section\"}>\r\n                            {weekArray.map(\r\n                                (weekNumber) => (\r\n                                    <button style={{backgroundColor: (weeks.includes(weekNumber)) ? 'dodgerblue' : 'white'}}\r\n                                            onClick={() => this.toggleWeek(weekNumber)}>{weekNumber}</button>\r\n                                )\r\n                            )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        } else {\r\n            gridSection =\r\n                <div className={\"Dfs-grid-section\"}>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <h2 className={\"Dfs-header\"}>Blacklist</h2>\r\n                        <DfsBlackListBox blackList={blackList}/>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className={\"Dfs-header\"}>Players</h2>\r\n                        <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                            {!filteredPool &&\r\n                                <img src={search} style={{height: '3vmin', position: 'absolute'}}\r\n                                     alt=\"search\"/>}\r\n                            <input type=\"text\" style={{height: '25px', width: '90%'}}\r\n                                   value={searchText}\r\n                                   onChange={(event) =>\r\n                                       this.filterPlayers('Name', event.target.value)}>{null}</input>\r\n                        </div>\r\n                        <div style={{display: 'flex'}}>\r\n                            <button onClick={() => this.filterPlayers('Position', 'All')}>All</button>\r\n                            {\r\n                                [... new Set(playerPool.map((player) => (player.Position === 'D/ST') ?\r\n                                    player.Position : player.Position.split('/')[0]))]\r\n                                    .map((position) =>\r\n                                        <button onClick={() => this.filterPlayers('Position', position)}>{position}</button>\r\n                                    )\r\n                            }\r\n                            <select onChange={(event) => this.filterPlayers('Team', event.target.value)}>\r\n                                <option selected={\"selected\"} value={'All'}>All</option>\r\n                                {[... new Set(playerPool.map((player) => player.Team))].sort().map((team) =>\r\n                                    <option value={team}>{team}</option>\r\n                                )}\r\n                            </select>\r\n                        </div>\r\n                        <div className={\"Player-list-box\"}>\r\n                            <DfsPlayerBox playerList={playerPool} filterList={filteredPool}\r\n                                          whiteListFunction={this.addToLineup} blackListFunction={this.toggleBlackList}\r\n                                          whiteList={whiteList} blackList={blackList} salarySum={sumAttribute(lineup, 'Price')}\r\n                                          cap={cap}/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className={\"Dfs-header\"}>Lineup</h2>\r\n                        <DfsGrid dfsLineup={lineup} removePlayer={this.removeFromLineup} site={site}\r\n                                 whiteList={whiteList} pointSum={sumAttribute(lineup, 'Projected')}\r\n                                 salarySum={sumAttribute(lineup, 'Price')} cap={cap}/>\r\n                    </div>\r\n                </div>;\r\n        }\r\n\r\n        return (\r\n            <Container fluid={true}>\r\n                <Navbar bg=\"primary\" variant=\"dark\">\r\n                    <Nav className=\"Nav-bar\">\r\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/simulate\">Back to Draft Simulator</Nav.Link>\r\n                        <Nav.Link href=\"/logout\">Log Out</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <h1 className={\"App-header\"}>DFS Optimizer</h1>\r\n                <div className={\"Dfs-sport\"}>\r\n                    <h3>Choose a sport:</h3>\r\n                    <div style={{display: 'flex'}}>\r\n                        <button style={{backgroundColor: (sport === 'mlb') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup('mlb', site, 'main')}>MLB</button>\r\n                        <button style={{backgroundColor: (sport === 'nfl') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup('nfl', site, slate)}>NFL</button>\r\n                        <button style={{backgroundColor: (sport === 'nba') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup('nba', site, 'main')}>NBA</button>\r\n                    </div>\r\n                    {sport === 'nfl' && <h3>Choose a game slate:</h3>}\r\n                    {sport === 'nfl' &&\r\n                        <div style={{display: 'flex'}}>\r\n                            <button style={{backgroundColor: (slate === 'thurs') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'thurs')}>Thurs only</button>\r\n                            <button style={{backgroundColor: (slate === 'thurs-mon') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'thurs-mon')}>Thurs - Mon</button>\r\n                            <button style={{backgroundColor: (slate === 'main') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'main')}>Sun (Main)</button>\r\n                            <button style={{backgroundColor: (slate === 'sun-mon') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'sun-mon')}>Sun - Mon</button>\r\n                        </div>}\r\n                    {sport && <h3>Choose a site:</h3>}\r\n                    {sport &&\r\n                        <div style={{display: 'flex'}}>\r\n                        <button style={{backgroundColor: (site === 'fd') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup(sport, 'fd', slate)}>Fanduel</button>\r\n                        <button style={{backgroundColor: (site === 'dk') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup(sport, 'dk', slate)}>Draftkings</button>\r\n                        </div>}\r\n                    <div style={{display: 'flex', margin: '2%'}}>\r\n                        {sport && slate && site && <button style={{marginTop: '10px'}}\r\n                                      onClick={() => this.generateLineup(sport, site, slate)}>Optimize Lineup</button>}\r\n                        {sport && slate && site && <button style={{marginTop: '10px'}}\r\n                                          onClick={() => this.clearLineup(sport, site, slate)}>Clear Lineup</button>}\r\n                        {(sport === 'nfl' && slate && site) && <button style={{marginTop: '10px'}}\r\n                                          onClick={() =>\r\n                                              this.fetchReportingData(sport, slate, site, weekArray)}>Generate Report</button>}\r\n                    </div>\r\n                </div>\r\n                {sport && slate && site && gridSection}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","function getFilterPlayersState(attribute, value, state) {\r\n    let {playerPool, text} = state;\r\n    let filteredPool;\r\n    if (value === 'All') {\r\n        return {\r\n            searchText: '',\r\n            filteredPool: playerPool\r\n        }\r\n    } else if (attribute === 'Name') {\r\n        text = value.toLowerCase();\r\n        filteredPool = playerPool.filter(\r\n            (player) => player.Name.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n    } else {\r\n        filteredPool = playerPool.filter(\r\n            (player) => player[attribute].includes(value)\r\n        );\r\n    }\r\n    return {\r\n        searchText: text,\r\n        filteredPool: filteredPool\r\n    }\r\n}\r\n\r\nexport { getFilterPlayersState }","function getAddToLineupState(playerIndex, state) {\r\n    let {playerPool, lineup, whiteList, blackList} = state;\r\n    let playerToAdd = playerPool[playerIndex];\r\n    let playerInLineup = lineup.find((player) => player.Id === playerToAdd.Id, null);\r\n    if (playerInLineup) {\r\n        return 'Player already added to lineup.'\r\n    }\r\n    let spotsToReplace = lineup.filter(\r\n        (player) =>\r\n            !player.Name && (\r\n                playerToAdd.Position === player.Position\r\n                || player.Position.includes(playerToAdd.Position)\r\n                || playerToAdd.Position.includes(player.Position)\r\n                || (!['QB', 'D/ST', 'P'].includes(playerToAdd.Position) && ['FLEX', 'Util'].includes(player.Position))\r\n            )\r\n    );\r\n    if (spotsToReplace.length === 0) {\r\n        return 'Not enough positions available to add player.'\r\n    } else {\r\n        whiteList.push(playerToAdd);\r\n        let playerInBlackList = blackList.find((player) => player.Id === playerToAdd.Id, null);\r\n        if (playerInBlackList) {\r\n            blackList.splice(blackList.indexOf(playerInBlackList), 1);\r\n        }\r\n        let spotToReplace = spotsToReplace[0];\r\n        let lineupIndex = lineup.indexOf(spotToReplace);\r\n        let playerToAddCopy = JSON.parse(JSON.stringify(playerToAdd));\r\n        playerToAddCopy.Position = spotToReplace.Position;\r\n        lineup[lineupIndex] = playerToAddCopy;\r\n        return {\r\n            lineup: lineup,\r\n            whiteList: whiteList,\r\n            blackList: blackList,\r\n            filteredPool: null,\r\n            searchText: ''\r\n        }\r\n    }\r\n}\r\n\r\nexport { getAddToLineupState }\r\n","function getRemoveFromLineupState(lineupIndex, state) {\r\n    let {lineup, whiteList} = state;\r\n    let playerToRemove = lineup[lineupIndex];\r\n    let playerInWhiteList = whiteList.find((player) => player.Id === playerToRemove.Id, null);\r\n    if (playerInWhiteList) {\r\n        whiteList.splice(whiteList.indexOf(playerInWhiteList), 1);\r\n    }\r\n    lineup[lineupIndex] = {\r\n        Position: playerToRemove.Position,\r\n        Team: '',\r\n        Name: '',\r\n        Id: '',\r\n        Status: '',\r\n        Projected: '',\r\n        Price: '',\r\n        Opp: '',\r\n        Weather: ''\r\n    };\r\n    return {\r\n        lineup: lineup,\r\n        whiteList: whiteList\r\n    }\r\n}\r\n\r\nexport { getRemoveFromLineupState }","function getToggleBlackListState(playerIndex, state) {\r\n    let {playerPool, lineup, whiteList, blackList} = state;\r\n    let blackListedPlayer = playerPool[playerIndex];\r\n    let playerInBlackList = blackList.find((player) => player.Id === blackListedPlayer.Id, null);\r\n    if (playerInBlackList) {\r\n        blackList.splice(blackList.indexOf(playerInBlackList), 1);\r\n    } else {\r\n        blackList.push(blackListedPlayer);\r\n        let playerInWhiteList = whiteList.find((player) => player.Id === blackListedPlayer.Id, null);\r\n        if (playerInWhiteList) {\r\n            whiteList.splice(whiteList.indexOf(playerInWhiteList), 1);\r\n        }\r\n        let playerInLineup = lineup.find((player) => player.Id === blackListedPlayer.Id, null);\r\n        if (playerInLineup) {\r\n            lineup[lineup.indexOf(playerInLineup)] = {\r\n                Position: playerInLineup.Position,\r\n                Team: '',\r\n                Name: '',\r\n                Id: '',\r\n                Status: '',\r\n                Projected: '',\r\n                Price: '',\r\n                Opp: '',\r\n                Weather: ''\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        lineup: lineup,\r\n        whiteList: whiteList,\r\n        blackList: blackList,\r\n        filteredPool: null,\r\n        searchText: ''\r\n    }\r\n}\r\n\r\nexport { getToggleBlackListState }","/*\r\njQWidgets v7.1.0 (2019-Feb)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\r\n/* eslint-disable */\r\n\r\nimport 'jqwidgets-framework/jqwidgets/styles/jqx.base.css';\r\nimport 'jqwidgets-framework/jqwidgets/jqxcore.js';\r\nimport 'jqwidgets-framework/jqwidgets/jqxpopover.js';\r\n\r\nimport React from 'react';\r\n\r\nconst JQXLite = window.JQXLite;\r\n\r\nexport const jqx = window.jqx;\r\n\r\nexport default class JqxPopover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const widgetId = 'jqxPopover' + JQXLite.generateID();\r\n        this.componentSelector = '#' + widgetId;\r\n        this.state = { id: widgetId };\r\n    };\r\n    componentDidMount() {\r\n        const options = this.manageAttributes();\r\n        this.createComponent(options);\r\n    };\r\n    manageAttributes() {\r\n        const properties = ['arrowOffsetValue','animationOpenDelay','animationCloseDelay','autoClose','animationType','height','initContent','isModal','offset','position','rtl','selector','showArrow','showCloseButton','width','title','theme'];\r\n        let options = {};\r\n        for(let item in this.props) {\r\n            if(item === 'settings') {\r\n                for(let itemTwo in this.props[item]) {\r\n                    options[itemTwo] = this.props[item][itemTwo];\r\n                }\r\n            } else {\r\n                if(properties.indexOf(item) !== -1) {\r\n                      options[item] = this.props[item];\r\n                }\r\n            }\r\n        }\r\n        return options;\r\n    };\r\n    createComponent(options) {\r\n        if(!this.style) {\r\n            for (let style in this.props.style) {\r\n                JQXLite(this.componentSelector).css(style, this.props.style[style]);\r\n            }\r\n        }\r\n        if(this.props.className !== undefined) {\r\n            const classes = this.props.className.split(' ');\r\n            for (let i = 0; i < classes.length; i++ ) {\r\n                JQXLite(this.componentSelector).addClass(classes[i]);\r\n            }\r\n        }\r\n        if(!this.template) {\r\n            JQXLite(this.componentSelector).html(this.props.template);\r\n        }\r\n        JQXLite(this.componentSelector).jqxPopover(options);\r\n    };\r\n    setOptions(options) {\r\n        JQXLite(this.componentSelector).jqxPopover('setOptions', options);\r\n    };\r\n    getOptions() {\r\n        if(arguments.length === 0) {\r\n            throw Error('At least one argument expected in getOptions()!');\r\n        }\r\n        let resultToReturn = {};\r\n        for(let i = 0; i < arguments.length; i++) {\r\n            resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxPopover(arguments[i]);\r\n        }\r\n        return resultToReturn;\r\n    };\r\n    on(name,callbackFn) {\r\n        JQXLite(this.componentSelector).on(name,callbackFn);\r\n    };\r\n    off(name) {\r\n        JQXLite(this.componentSelector).off(name);\r\n    };\r\n    arrowOffsetValue(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue');\r\n        }\r\n    };\r\n    animationOpenDelay(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationOpenDelay', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationOpenDelay');\r\n        }\r\n    };\r\n    animationCloseDelay(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationCloseDelay', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationCloseDelay');\r\n        }\r\n    };\r\n    autoClose(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('autoClose', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('autoClose');\r\n        }\r\n    };\r\n    animationType(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationType', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationType');\r\n        }\r\n    };\r\n    height(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('height', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('height');\r\n        }\r\n    };\r\n    initContent(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('initContent', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('initContent');\r\n        }\r\n    };\r\n    isModal(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('isModal', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('isModal');\r\n        }\r\n    };\r\n    offset(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('offset', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('offset');\r\n        }\r\n    };\r\n    position(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('position', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('position');\r\n        }\r\n    };\r\n    rtl(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('rtl', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('rtl');\r\n        }\r\n    };\r\n    selector(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('selector', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('selector');\r\n        }\r\n    };\r\n    showArrow(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('showArrow', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('showArrow');\r\n        }\r\n    };\r\n    showCloseButton(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('showCloseButton', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('showCloseButton');\r\n        }\r\n    };\r\n    width(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('width', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('width');\r\n        }\r\n    };\r\n    title(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('title', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('title');\r\n        }\r\n    };\r\n    theme(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('theme', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('theme');\r\n        }\r\n    };\r\n    close() {\r\n        JQXLite(this.componentSelector).jqxPopover('close');\r\n    };\r\n    destroy() {\r\n        JQXLite(this.componentSelector).jqxPopover('destroy');\r\n    };\r\n    open() {\r\n        JQXLite(this.componentSelector).jqxPopover('open');\r\n    };\r\n    render() {\r\n        return (\r\n            <div id={this.state.id}>{this.props.value}{this.props.children}</div>\r\n        )\r\n    };\r\n};\r\n\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Rank: number,\r\n    Name: string,\r\n    Position: string,\r\n    Team: string,\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    isUserPlayer: boolean,\r\n    onChange: () => void,\r\n    onMove: (direction: string) => void\r\n}\r\n\r\nconst plus = require(\"../../icons/plus.ico\") as any;\r\nconst minus = require(\"../../icons/minus.ico\") as any;\r\nconst up = require(\"../../icons/up.ico\") as any;\r\nconst down = require(\"../../icons/down.ico\") as any;\r\n\r\nconst Player = (props: playerProps) =>\r\n    <tr>\r\n        <td>{props.player.Rank}</td>\r\n        <td>\r\n            <tr style={{fontWeight: 'bold'}}>{props.player.Name}</tr>\r\n            <tr>{props.player.Team} {props.player.Position}</tr>\r\n        </td>\r\n        <td>\r\n            <img src={(props.isUserPlayer) ? minus : plus} alt={\"add-or-remove\"} onClick={props.onChange} style={{height: '3vmin'}}/>\r\n        </td>\r\n        {props.isUserPlayer && (\r\n            <td style={{display: 'flex', flexDirection: 'column'}}>\r\n                <img src={up} alt={\"up\"} onClick={() => props.onMove('up')} style={{height: '3vmin'}}/>\r\n                <img src={down} alt={\"down\"} onClick={() => props.onMove('down')} style={{height: '3vmin'}}/>\r\n            </td>\r\n            )\r\n        }\r\n    </tr>;\r\n\r\nexport const PlayerListBox = (props: {\r\n    playerList: playerAttributes[],\r\n    filterList: playerAttributes[],\r\n    addPlayer: (index: number) => void }) =>\r\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\r\n            {props.playerList.map(\r\n                (player, index) => {\r\n                    if (!props.filterList || props.filterList.includes(player)) {\r\n                        return (\r\n                            <Player player={player}\r\n                                        isUserPlayer={false}\r\n                                        onChange={() => props.addPlayer(index)}\r\n                                        onMove={null}\r\n                            />\r\n                        )\r\n                    }\r\n                }\r\n            )}\r\n        </table>;\r\n\r\nexport const UserListBox = (props: {\r\n    userRoundList: [playerAttributes[]],\r\n    removePlayer: (roundIndex: number, index: number) => void,\r\n    movePlayer: (roundIndex: number, index: number, direction: string) => void}) =>\r\n        props.userRoundList.map(\r\n            (playerList, roundIndex) => {\r\n                return (\r\n                    <table style={{borderCollapse: 'collapse', marginBottom: '5vmin'}} className={'Draft-grid'}>\r\n                        <th colSpan={4} style={{textAlign: 'center'}}>{'Round ' + (roundIndex + 1)}</th>\r\n                        {playerList.map(\r\n                            (player, index) => (\r\n                                <Player player={player}\r\n                                        isUserPlayer={true}\r\n                                        onChange={() => props.removePlayer(roundIndex, index)}\r\n                                        onMove={(direction) => props.movePlayer(roundIndex, index, direction)}\r\n                                />\r\n                            )\r\n                        )}\r\n                    </table>\r\n                )\r\n            });\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Name: string,\r\n    Position: string,\r\n    Team: string,\r\n    Round: number,\r\n    Frequency: string\r\n}\r\n\r\nexport const DraftResultsTable = (props: {\r\n    frequencyData: playerAttributes[]}) =>\r\n    <table>\r\n        <tr>\r\n            <th>Player</th>\r\n            <th>Round</th>\r\n            <th>Draft Frequency</th>\r\n        </tr>\r\n        {props.frequencyData.map(\r\n            (player) => (\r\n                <tr>\r\n                    <td>\r\n                        <tr style={{fontWeight: 'bold'}}>{player.Name}</tr>\r\n                        <tr>{player.Team} {player.Position}</tr>\r\n                    </td>\r\n                    <td>{player.Round}</td>\r\n                    <td>{player.Frequency}</td>\r\n                </tr>\r\n            )\r\n        )}\r\n    </table>;","import React, {Component} from 'react'\r\nimport { Container, Nav, Navbar } from 'react-bootstrap'\r\nimport '../App.css';\r\nimport JqxPopover from '../../jqxwidgets/react_jqxpopover'\r\nimport { PlayerListBox, UserListBox } from \"./PlayerListBox.tsx\"\r\nimport { DraftResultsTable } from \"./DraftResultsTable.tsx\";\r\nimport football from '../../icons/football.ico'\r\nimport search from '../../icons/search.ico'\r\n\r\nexport class Simulator extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isLoading: true, players: [], searchText: '', filteredPlayers: null, site: 'espn',\r\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\r\n            teamCount: 10, pickOrder: 5, roundCount: 16, isDrafting: false, isRandom: false,\r\n            allFreqs: [], userFreqs: [], expectedTeam: [], frequencyData: []};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPlayersForSimulator(this.state.site);\r\n    }\r\n\r\n    fetchPlayersForSimulator = (site) => {\r\n        this.setState({isLoading: true});\r\n        fetch(window.location.origin + '/' + site + '-players')\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Could not load players.');\r\n                } else {\r\n                    response.json()\r\n                        .then((players) => {\r\n                            if (typeof players[0] === \"string\") {\r\n                                this.setState({isLoading: false});\r\n                                alert(players[0]);\r\n                            } else {\r\n                                this.setState({\r\n                                    isLoading: false,\r\n                                    players: players,\r\n                                    site: site\r\n                                });\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n    };\r\n\r\n    handleSliderChange = (param, event) => {\r\n        this.setState({[param]: event.target.value})\r\n    };\r\n\r\n    closeAbout = () => {\r\n        this.refs.about.close();\r\n        let url = window.location.pathname.split('#');\r\n        window.location.href = window.location.origin + url[0].toString() + '#';\r\n    };\r\n\r\n    closeInstructions = () => {\r\n        this.refs.instructions.close();\r\n        let url = window.location.pathname.split('#');\r\n        window.location.href = window.location.origin + url[0].toString() + '#';\r\n    };\r\n\r\n    swapRankings = () => {\r\n        let newSite = (this.state.site === 'espn') ? 'yahoo' : 'espn';\r\n        this.fetchPlayersForSimulator(newSite);\r\n    };\r\n\r\n    saveRankings = () => {\r\n        let {userPlayers, site} = this.state;\r\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\r\n            alert('Please rank at least one player before saving.');\r\n        } else {\r\n            fetch(window.location.origin + '/save-ranking/' + site, {\r\n                method: 'POST',\r\n                body: JSON.stringify(userPlayers)\r\n            }).then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('User ranking unable to be saved.');\r\n                } else {\r\n                    response.json()\r\n                        .then((responseJson) => {\r\n                            alert(responseJson[0])\r\n                        })\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    loadRankings = () => {\r\n        let site = this.state.site;\r\n        fetch(window.location.origin + '/load-ranking/' + site)\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Could not load user ranking data.');\r\n                }  else {\r\n                    response.json()\r\n                        .then((userRanking) => {\r\n                            if (typeof userRanking[0] === \"string\") {\r\n                                alert(userRanking[0]);\r\n                            } else {\r\n                                let {players, userPlayers} = this.state;\r\n                                let allPlayers = players.concat(userPlayers.flat());\r\n                                players = allPlayers.sort((a, b) => a.Rank - b.Rank);\r\n                                let allLoadedPlayers = userRanking.flat();\r\n                                for (let i = 0; i < allLoadedPlayers.length; i++) {\r\n                                    let userPlayerRank = allLoadedPlayers[i].Rank;\r\n                                    let playerIndex = players.findIndex(\r\n                                        (player) => player.Rank === userPlayerRank);\r\n                                    players.splice(playerIndex, 1);\r\n                                }\r\n                                this.setState({\r\n                                    players: players,\r\n                                    userPlayers: userRanking,\r\n                                    filteredPlayers: null\r\n                                })\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n    };\r\n\r\n    filterPlayers = (event) => {\r\n        let text = event.target.value.toLowerCase();\r\n        let players = this.state.players;\r\n        let filteredPlayers = players.filter(\r\n            (player) =>\r\n                player.Name.toLowerCase().includes(text)\r\n                || player.Position.toLowerCase().includes(text)\r\n                || player.Team.toLowerCase().includes(text)\r\n        );\r\n        this.setState({\r\n            searchText: text,\r\n            filteredPlayers: filteredPlayers});\r\n    };\r\n\r\n    addPlayer = (playerIndex) => {\r\n        let {players, userPlayers} = this.state;\r\n        let playerToAdd = players[playerIndex];\r\n        players.splice(playerIndex, 1);\r\n        userPlayers[0].push(playerToAdd);\r\n        this.setState({\r\n            players: players,\r\n            userPlayers: userPlayers,\r\n            filteredPlayers: null,\r\n            searchText: ''\r\n        });\r\n    };\r\n\r\n    removePlayer = (roundIndex, playerIndex) => {\r\n        let {players, userPlayers} = this.state;\r\n        let roundList = userPlayers[roundIndex];\r\n        let removedPlayer = roundList[playerIndex];\r\n        let removedPlayerRank = removedPlayer.Rank;\r\n        const originalPlayerNeighbor = players.find((player) => player.Rank > removedPlayerRank);\r\n        players.splice(players.indexOf(originalPlayerNeighbor), 0, removedPlayer);\r\n        roundList.splice(playerIndex, 1);\r\n        this.setState({\r\n            players: players,\r\n            userPlayers: userPlayers\r\n        });\r\n    };\r\n\r\n    clearPlayers = () => {\r\n        let {players, userPlayers} = this.state;\r\n        let allUserPlayers = userPlayers.flat();\r\n        let allPlayers = players.concat(allUserPlayers);\r\n        this.setState({\r\n            players: allPlayers.sort((a, b) => a.Rank - b.Rank),\r\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\r\n            filteredPlayers: null\r\n        });\r\n    };\r\n\r\n    movePlayer = (roundIndex, playerIndex, direction) => {\r\n        let userPlayers = this.state.userPlayers;\r\n        let roundList = userPlayers[roundIndex];\r\n        let player = roundList[playerIndex];\r\n        userPlayers[roundIndex].splice(playerIndex, 1);\r\n        if (direction === 'up') {\r\n            if (playerIndex > 0) {\r\n                userPlayers[roundIndex].splice(playerIndex - 1, 0, player);\r\n            } else if (roundIndex > 0) {\r\n                userPlayers[roundIndex - 1].push(player);\r\n            } else {\r\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\r\n            }\r\n        } else if (direction === 'down') {\r\n            if (playerIndex < roundList.length) {\r\n                roundList.splice(playerIndex + 1, 0, player);\r\n            } else if (roundIndex < userPlayers.length - 1) {\r\n                userPlayers[roundIndex + 1].splice(0, 0, player);\r\n            } else {\r\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\r\n            }\r\n        }\r\n        this.setState({userPlayers: userPlayers});\r\n    };\r\n\r\n    determineIfRandom = (event) => {\r\n        this.setState({isRandom: event.target.checked})\r\n    };\r\n\r\n    simulateDrafts = (draftCancelled) => {\r\n        if (draftCancelled) {\r\n            this.setState({isDrafting: false});\r\n            return\r\n        }\r\n        let {userPlayers, teamCount, pickOrder, roundCount, site} = this.state;\r\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\r\n            alert('Please select at least one player to draft.');\r\n        } else {\r\n            let playerNames = userPlayers.map((roundList) => roundList.map((player) => player.Name));\r\n            this.setState({isDrafting: true});\r\n            fetch(window.location.origin + '/draft-results', {\r\n                method: 'POST',\r\n                body: JSON.stringify(playerNames) + '|' + teamCount + '|' + pickOrder + '|' + roundCount + '|' + site\r\n            }).then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Error loading draft results.');\r\n                } else {\r\n                    response.json()\r\n                        .then((draftResults) => {\r\n                            if (typeof draftResults[0] == \"string\") {\r\n                                alert(draftResults[0]);\r\n                            } else {\r\n                                this.generateDraftOutput(draftResults);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    generateDraftOutput = (draftResults) => {\r\n        if (draftResults === ['Draft error!']) {\r\n            alert('No players were drafted. :( \\nSomething went wrong . . .');\r\n        }\r\n        this.setState({\r\n            isDrafting: false,\r\n            userFreqs: draftResults.UserFrequencies,\r\n            allFreqs: draftResults.AllFrequencies,\r\n            expectedTeam: draftResults.ExpectedTeam,\r\n            frequencyData: draftResults.UserFrequencies\r\n        });\r\n    };\r\n\r\n    toggleFrequencyData = (frequencyData) => {\r\n        this.setState({frequencyData: frequencyData});\r\n    };\r\n\r\n    render() {\r\n        const {isLoading, players, filteredPlayers, site,\r\n            userPlayers, teamCount, pickOrder, roundCount, isDrafting, isRandom,\r\n            userFreqs, allFreqs, expectedTeam, frequencyData} = this.state;\r\n        let playerListBox, draftResultsTable;\r\n\r\n        if (isLoading) {\r\n            playerListBox =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Loading-text\"}>Loading players . . .</p></div>\r\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\r\n                </div>;\r\n        } else {\r\n            playerListBox =\r\n                <PlayerListBox playerList={players} filterList={filteredPlayers} addPlayer={this.addPlayer}/>;\r\n        }\r\n        if (isDrafting) {\r\n            draftResultsTable =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Loading-text\"}>Drafting . . .</p></div>\r\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\r\n                    <div>\r\n                        <button onClick={() => this.simulateDrafts(true)}\r\n                                className={\"Cancel-draft-button\"}>Cancel</button>\r\n                    </div>\r\n                </div>;\r\n        } else {\r\n            draftResultsTable = <DraftResultsTable frequencyData={frequencyData}/>;\r\n        }\r\n\r\n        const swapButtonText = (site === 'espn') ? 'Switch to Yahoo' : 'Switch to ESPN';\r\n        const swapButtonColor = (site === 'espn') ? '#6C00B3' : '#CE0000';\r\n\r\n        return (\r\n            <Container fluid={true}>\r\n                <Navbar bg=\"primary\" variant=\"dark\">\r\n                    <Nav className=\"Nav-bar\">\r\n                      <Nav.Link href=\"/home\">Home</Nav.Link>\r\n                      <Nav.Link href=\"#about\">About</Nav.Link>\r\n                      <Nav.Link href=\"#instructions\">Instructions</Nav.Link>\r\n                      <Nav.Link href=\"/optimize\">DFS Optimizer</Nav.Link>\r\n                        <Nav.Link href=\"/logout\">Log Out</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <div className={\"Info-buttons\"}>\r\n                    <JqxPopover ref='about' isModal={true} width={310}\r\n                        position={'bottom'} title={'About Draft Simulator'} selector={'a[href$=\"#about\"]'}>\r\n                        <p>Draft Simulator is a fantasy football draft preparation tool.</p>\r\n                        <p>More often than not, others in your league will only draft among the \"top available\r\n                            players\" in each round, which are determined by ESPN's preseason rankings.</p>\r\n                        <p>However, Draft Simulator allows you to create and refine your own personal rankings that\r\n                            you can bring to your draft to get the team you've always dreamed of.</p>\r\n                        <button onClick={this.closeAbout}\r\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\r\n                            Got it!</button>\r\n                    </JqxPopover>\r\n                    <JqxPopover ref='instructions' isModal={true} width={310}\r\n                        position={'bottom'} title={'Instructions'} selector={'a[href$=\"#instructions\"]'}>\r\n                        <ol>\r\n                            <li>Search for and select players from the player list. These should be players you'd\r\n                                feel strongly about drafting.</li>\r\n                            <li>Click \"Add\" to move them to your preferred list.</li>\r\n                            <li>Drag and drop your players in order of overall preference.</li>\r\n                            <li>Adjust the sliders to your desired specifications, then click \"Draft\".</li>\r\n                            <li>See how often you were able to draft each player under the \"Draft Frequency\"\r\n                                tab.</li>\r\n                            <li>The \"All Players\" tab shows the draft frequency of all players taken, not just your\r\n                                preferred players.</li>\r\n                            <li>The \"Expected Team\" tab shows your most likely fantasy team given the\r\n                                simulations.</li>\r\n                        </ol>\r\n                        <button onClick={this.closeInstructions}\r\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\r\n                            Let's draft!</button>\r\n                    </JqxPopover>\r\n                </div>\r\n                <h1 className={\"App-header\"}>Draft Simulator</h1>\r\n                <div className={\"Buttons-and-boxes\"}>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <div>\r\n                            {!filteredPlayers && <img src={search} style={{height: '3vmin', position: 'absolute'}}\r\n                                                      alt=\"search\"/>}\r\n                            <input type=\"text\" style={{height: '25px', width: '90%'}}\r\n                                   value={this.state.searchText}\r\n                                   onClick={this.filterPlayers}\r\n                                   onChange={this.filterPlayers}>{null}</input>\r\n                        </div>\r\n                        {playerListBox}\r\n                    </div>\r\n                    <div className={\"Player-buttons\"}>\r\n                        <button onClick={this.clearPlayers} style={{fontSize: 16}}\r\n                                className={\"Clear-button\"}>Clear</button>\r\n                        <button id='rankingButton' onClick={this.loadRankings}\r\n                                className={\"Ranking-button\"}>Load Saved Rankings</button>\r\n                        <button id='swapButton' style={{backgroundColor: swapButtonColor}}\r\n                                onClick={this.swapRankings} className={\"Swap-button\"}>{swapButtonText}</button>\r\n                    </div>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <UserListBox userRoundList={userPlayers} removePlayer={this.removePlayer}\r\n                                     movePlayer={this.movePlayer} className={\"Player-list-box\"}/>\r\n                    </div>\r\n                    <div className={\"Draft-buttons\"}>\r\n                        <button onClick={this.saveRankings} style={{fontSize: 16}}\r\n                                className={\"Ranking-button\"}>Save Player Rankings</button>\r\n                        <button onClick={() => this.simulateDrafts(false)}\r\n                                style={{fontSize: 16}} className={\"Draft-button\"}>Draft!</button>\r\n                    </div>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <tr>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(userFreqs)}\r\n                                style={{borderStyle: (frequencyData === userFreqs) ?\r\n                                        'inset' : 'outset'}}>Your Players</button>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(allFreqs)}\r\n                                style={{borderStyle: (frequencyData === allFreqs) ?\r\n                                        'inset' : 'outset'}}>All Players</button>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(expectedTeam)}\r\n                                style={{borderStyle: (frequencyData === expectedTeam) ?\r\n                                        'inset' : 'outset'}}>Expected Team</button>\r\n                        </tr>\r\n                        {draftResultsTable}\r\n                    </div>\r\n                </div>\r\n                <div className={\"Slider-row\"}>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Number of teams per draft:</p>\r\n                        <div>{teamCount}</div>\r\n                        <input type={\"range\"} min={6} max={14} step={2} value={teamCount}\r\n                               onChange={(event) => this.handleSliderChange('teamCount', event)}/>\r\n                    </div>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Your pick in the draft:</p>\r\n                        <div>{pickOrder}</div>\r\n                        <input type={\"range\"} min={1} max={teamCount} value={pickOrder}\r\n                                   onChange={(event) => this.handleSliderChange('pickOrder', event)}/>\r\n                        <form>\r\n                          <label>\r\n                            Randomize:\r\n                            <input type=\"checkbox\" checked={isRandom} onChange={this.determineIfRandom}/>\r\n                          </label>\r\n                        </form>\r\n                    </div>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Number of rounds per draft:</p>\r\n                        <div>{roundCount}</div>\r\n                        <input type={\"range\"} min={1} max={16} value={roundCount}\r\n                                   onChange={(event) => this.handleSliderChange('roundCount', event)}/>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Homepage } from \"./Homepage\";\r\nimport { Optimizer } from './optimizer/Optimizer'\r\nimport { Simulator } from \"./simulator/Simulator\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        if (window.location.pathname === '/home') {\r\n            return <Homepage/>\r\n        } else if (window.location.pathname === '/simulate') {\r\n            return <Simulator/>\r\n        } else if (window.location.pathname === '/optimize') {\r\n            return <Optimizer/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}