{"version":3,"sources":["icons/football.ico","icons/search.ico","icons/plus.ico","icons/minus.ico","icons/football2.svg","icons/cloudy.ico","icons/partlycloudy.ico","icons/rainy.ico","icons/snowy.ico","icons/stormy.ico","icons/sunny.ico","icons/up.ico","icons/down.ico","main/Homepage.js","main/optimizer/DfsGrid.tsx","main/optimizer/DfsReport.tsx","main/optimizer/DfsPlayerListBox.tsx","main/optimizer/DfsBlackListBox.tsx","main/optimizer/Optimizer.js","jqxwidgets/react_jqxpopover.js","main/simulator/PlayerListBox.tsx","main/simulator/DraftResultsTable.tsx","main/simulator/Simulator.js","main/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Homepage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","onClick","window","location","href","origin","Component","cloudy","require","partlyCloudy","rainy","snowy","stormy","sunny","Player","props","forecast","player","Weather","toLowerCase","weatherImage","includes","react","style","backgroundColor","Name","whiteList","filter","map","Position","Team","fontWeight","color","Status","Projected","Price","concat","toString","replace","Opp","display","alignItems","src","alt","height","details","onRemove","DfsGrid","site","dfsLineup","playerIndex","DfsGrid_Player","removePlayer","pointSum","toFixed","salarySum","cap","DfsReport","reportingData","row","position","expected","actual","optimal","expected_v_actual","actual_v_optimal","expected_v_optimal","plus","minus","blackList","onPlusClick","onMinusClick","DfsPlayerBox","borderCollapse","playerList","sort","b","index","filterList","DfsPlayerListBox_Player","whiteListFunction","blackListFunction","DfsBlackListBox","DfsBlackListBox_Player","Optimizer","_this","call","generateLineup","sport","slate","_this$state","state","lineup","whiteListNames","blackListNames","setState","isOptimizing","isReporting","fetch","method","body","then","response","status","alert","json","lineupJson","ingestDfsLineup","clearLineup","isLoading","data","playerPool","filterPlayersByText","event","text","target","filteredPool","searchText","filterPlayersByPosition","filterPlayersByTeam","team","handleTeamChange","addToLineup","_this$state2","playerToAdd","spotToReplace","spotsToReplace","length","push","splice","indexOf","lineupIndex","removeFromLineup","_this$state3","playerToRemove","toggleBlackList","_this$state4","blackListedPlayer","sumPoints","parseFloat","reduce","sumSalary","parseInt","fetchReportingData","weeks","reportJson","toggleWeek","selectedWeek","_this$state5","gridSection","_this2","_this$state6","weekArray","i","maxWeek","football","football2","DfsReport_DfsReport","weekNumber","DfsBlackListBox_DfsBlackListBox","flexDirection","search","type","width","onChange","selected","toConsumableArray","Set","DfsPlayerListBox_DfsPlayerBox","DfsGrid_DfsGrid","Container","fluid","Navbar","bg","variant","Nav","Link","margin","marginTop","JQXLite","JqxPopover","jqx","widgetId","generateID","componentSelector","id","options","manageAttributes","createComponent","properties","item","itemTwo","css","undefined","classes","split","addClass","template","html","jqxPopover","Error","resultToReturn","name","callbackFn","on","off","arg","children","React","up","down","Rank","isUserPlayer","onMove","PlayerListBox","PlayerListBox_Player","addPlayer","UserListBox","userRoundList","roundIndex","marginBottom","colSpan","textAlign","direction","movePlayer","DraftResultsTable","frequencyData","Round","Frequency","Simulator","fetchPlayersForSimulator","players","handleSliderChange","param","defineProperty","closeAbout","refs","about","close","url","pathname","closeInstructions","instructions","swapRankings","newSite","saveRankings","userPlayers","every","roundList","JSON","stringify","responseJson","loadRankings","userRanking","allPlayers","flat","allLoadedPlayers","_loop","userPlayerRank","findIndex","filteredPlayers","filterPlayers","removedPlayer","removedPlayerRank","originalPlayerNeighbor","find","clearPlayers","allUserPlayers","determineIfRandom","isRandom","checked","simulateDrafts","draftCancelled","isDrafting","teamCount","pickOrder","roundCount","playerNames","draftResults","generateDraftOutput","userFreqs","UserFrequencies","allFreqs","AllFrequencies","expectedTeam","ExpectedTeam","toggleFrequencyData","playerListBox","draftResultsTable","_this$state7","PlayerListBox_PlayerListBox","DraftResultsTable_DraftResultsTable","swapButtonText","swapButtonColor","react_jqxpopover_JqxPopover","ref","isModal","title","selector","float","padding","borderRadius","fontSize","PlayerListBox_UserListBox","borderStyle","min","max","step","App","Homepage_Homepage","Simulator_Simulator","Optimizer_Optimizer","Boolean","hostname","match","ReactDOM","render","src_main_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.c93e1efa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/football.c5005feb.ico\";","module.exports = __webpack_public_path__ + \"media/search.04c89f3b.ico\";","module.exports = __webpack_public_path__ + \"media/plus.220c44df.ico\";","module.exports = __webpack_public_path__ + \"media/minus.5edbe473.ico\";","module.exports = __webpack_public_path__ + \"media/football2.fac02615.svg\";","module.exports = __webpack_public_path__ + \"media/cloudy.340c3269.ico\";","module.exports = __webpack_public_path__ + \"media/partlycloudy.a5e52894.ico\";","module.exports = __webpack_public_path__ + \"media/rainy.dda0cf39.ico\";","module.exports = __webpack_public_path__ + \"media/snowy.203024ab.ico\";","module.exports = __webpack_public_path__ + \"media/stormy.ca70c957.ico\";","module.exports = __webpack_public_path__ + \"media/sunny.a306062d.ico\";","module.exports = __webpack_public_path__ + \"media/up.04732abf.ico\";","module.exports = __webpack_public_path__ + \"media/down.61889039.ico\";","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nexport class Homepage extends Component {\r\n\r\n    render() {\r\n        return (\r\n                <div className={'Home'}>\r\n                    <h1 className={'Home-header'}>Welcome to Draft Simulator!</h1>\r\n                    <h3 className={'Dfs-header'}>To start, click the link below:</h3>\r\n                    <div className={\"Home-buttons\"}>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/simulate'}}\r\n                            className={'Site-button'}>Simulator</button>\r\n                    </div>\r\n                    <h3 className={'Dfs-header'}>Or, check out our DFS Optimizer:</h3>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/optimize'}}\r\n                            className={'Dfs-button'}>DFS Optimizer</button>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/logout'}}\r\n                            className={'Logout-button'}>Log Out</button>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Position: string,\r\n    Team: string,\r\n    Name: string,\r\n    Status: string,\r\n    Projected: number,\r\n    Price: number,\r\n    Opp: string,\r\n    Weather: any\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    onRemove: () => void,\r\n    whiteList: playerAttributes[]\r\n}\r\n\r\nconst cloudy = require(\"../../icons/cloudy.ico\") as any;\r\nconst partlyCloudy = require(\"../../icons/partlycloudy.ico\") as any;\r\nconst rainy = require(\"../../icons/rainy.ico\") as any;\r\nconst snowy = require(\"../../icons/snowy.ico\") as any;\r\nconst stormy = require(\"../../icons/stormy.ico\") as any;\r\nconst sunny = require(\"../../icons/sunny.ico\") as any;\r\n\r\nconst Player = (props: playerProps) => {\r\n    const forecast = (props.player.Weather.forecast) ? props.player.Weather.forecast.toLowerCase() : null;\r\n    const weatherImage = (props.player.Weather.forecast) ?\r\n        (forecast.includes('partly')) ? partlyCloudy :\r\n        (forecast.includes('cloud') || forecast.includes('fog')) ? cloudy :\r\n        (forecast.includes('storm') || forecast.includes('thunder')) ? stormy :\r\n        (forecast.includes('rain') || forecast.includes('shower')) ? rainy :\r\n        (forecast.includes('snow') || forecast.includes('flurr')) ? snowy :\r\n        (forecast.includes('sun') || forecast.includes('clear')) ? sunny : null\r\n        : null;\r\n\r\n    return (\r\n        <tr style={{backgroundColor: (props.player.Name && props.whiteList.filter(\r\n            (player) => player.Name).map((player) => (player.Name)).includes(props.player.Name)) ? 'lightgreen' : null}}>\r\n            <td>{props.player.Position}</td>\r\n            <td>{props.player.Team}</td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\r\n                {props.player.Name} <b style={{color: 'red'}}>{props.player.Status}</b></td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\r\n                {props.player.Projected}</td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\r\n                {props.player.Price && '$'.concat(props.player.Price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}</td>\r\n            <td>{props.player.Opp}</td>\r\n            <td style={{display: 'flex', alignItems: 'center'}}>\r\n                {props.player.Weather.forecast && <img src={weatherImage} alt={\"weather\"} style={{height: '4vmin'}}/>}\r\n                <p>{props.player.Weather.details}</p>\r\n            </td>\r\n            <td>\r\n                {props.player.Position && props.player.Name && <button onClick={props.onRemove} style={{fontWeight: 'bold'}}>X</button>}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport const DfsGrid = (props: {\r\n    dfsLineup: playerAttributes[],\r\n    removePlayer: (playerIndex: number) => void,\r\n    site: string,\r\n    whiteList: playerAttributes[],\r\n    pointSum: number,\r\n    salarySum: number,\r\n    cap: number}) =>\r\n        <table className={'Dfs-grid'}>\r\n            <tr style={{backgroundColor: (props.site === 'fd') ? 'dodgerblue' : 'black'}}>\r\n                <th>Position</th>\r\n                <th>Team</th>\r\n                <th>Player</th>\r\n                <th>Projected</th>\r\n                <th>Price</th>\r\n                <th>Opp</th>\r\n                <th>Weather</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n            {props.dfsLineup.map(\r\n                (player, playerIndex) => (\r\n                    <Player player={player}\r\n                            onRemove={() => props.removePlayer(playerIndex)}\r\n                            whiteList={props.whiteList}\r\n                    />\r\n                )\r\n            )}\r\n            <tr style={{fontWeight: 'bold'}}>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n                <td>Total</td>\r\n                <td>{props.pointSum.toFixed(1)}</td>\r\n                <td style={{color: (props.salarySum > props.cap) ? 'indianred' : 'white'}}>\r\n                    {'$'.concat(props.salarySum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}\r\n                </td>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n            </tr>\r\n        </table>;\r\n","import * as React from 'react';\r\n\r\ninterface rowAttributes {\r\n    position: string,\r\n    expected: number,\r\n    actual: number,\r\n    optimal: number,\r\n    expected_v_actual: number,\r\n    actual_v_optimal: number,\r\n    expected_v_optimal: number\r\n}\r\n\r\nexport const DfsReport = (props: {\r\n    reportingData: rowAttributes[]}) =>\r\n    <table>\r\n        <tr>\r\n            <th>Position</th>\r\n            <th>Projected</th>\r\n            <th>Actual</th>\r\n            <th>Optimal</th>\r\n            <th>Expected vs Actual</th>\r\n            <th>Actual vs Optimal</th>\r\n            <th>Expected vs Optimal</th>\r\n        </tr>\r\n        {props.reportingData.map(\r\n            (row) => (\r\n                <tr style={{fontWeight: (row.position === 'Total') ? 'bold' : 'normal'}}>\r\n                    <td>{row.position}</td>\r\n                    <td>{row.expected}</td>\r\n                    <td>{row.actual}</td>\r\n                    <td>{row.optimal}</td>\r\n                    <td>{(100 * row.expected_v_actual).toFixed(2).toString().concat('%')}</td>\r\n                    <td>{(100 * row.actual_v_optimal).toFixed(2).toString().concat('%')}</td>\r\n                    <td>{(100 * row.expected_v_optimal).toFixed(2).toString().concat('%')}</td>\r\n                </tr>\r\n            )\r\n        )}\r\n    </table>;\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Position: string,\r\n    Team: string,\r\n    Name: string,\r\n    Status: string,\r\n    Projected: number,\r\n    Price: number,\r\n    Opp: string,\r\n    Weather: any\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    onPlusClick: () => void,\r\n    onMinusClick: () => void,\r\n    whiteList: playerAttributes[],\r\n    blackList: playerAttributes[],\r\n    salarySum: number,\r\n    cap: number\r\n}\r\n\r\nconst plus = require(\"../../icons/plus.ico\") as any;\r\nconst minus = require(\"../../icons/minus.ico\") as any;\r\n\r\nconst Player = (props: playerProps) =>\r\n    <tr style={{backgroundColor: (props.whiteList.includes(props.player)) ? 'lightgreen' : (props.blackList.includes(props.player)) ? 'indianred' : 'white'}}>\r\n        <td>\r\n            <tr style={{fontWeight: 'bold'}}>{props.player.Name}</tr>\r\n            <tr>{props.player.Team} {props.player.Position}</tr>\r\n        </td>\r\n        <td>{props.player.Opp}</td>\r\n        <td style={{color: (props.salarySum + props.player.Price > props.cap) ? 'red' : 'black'}}>\r\n            {'$'.concat(props.player.Price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}\r\n        </td>\r\n        <td>\r\n            <img src={plus} alt={\"add\"} onClick={props.onPlusClick} style={{height: '3vmin'}}/>\r\n        </td>\r\n        <td>\r\n            <img src={minus} alt={\"remove\"} onClick={props.onMinusClick} style={{height: '3vmin'}}/>\r\n        </td>\r\n    </tr>;\r\n\r\nexport const DfsPlayerBox = (props: {\r\n    playerList: playerAttributes[],\r\n    filterList: playerAttributes[],\r\n    whiteListFunction: (index: number) => void,\r\n    blackListFunction: (index: number) => void,\r\n    whiteList: playerAttributes[],\r\n    blackList: playerAttributes[],\r\n    salarySum: number,\r\n    cap: number}) =>\r\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\r\n            <tr style={{backgroundColor: 'lightgray'}}>\r\n                <th>Player</th>\r\n                <th>Opp</th>\r\n                <th>Salary</th>\r\n                <th>Add</th>\r\n                <th>Blacklist</th>\r\n            </tr>\r\n            {props.playerList.sort((a, b) => b.Price - a.Price).map(\r\n                (player, index) => {\r\n                    if (!props.filterList || props.filterList.includes(player)) {\r\n                        return (\r\n                            <Player player={player}\r\n                                    onPlusClick={() => props.whiteListFunction(index)}\r\n                                    onMinusClick={() => props.blackListFunction(index)}\r\n                                    whiteList={props.whiteList}\r\n                                    blackList={props.blackList}\r\n                                    salarySum={props.salarySum}\r\n                                    cap={props.cap}\r\n                            />\r\n                        )\r\n                    }\r\n                }\r\n            )}\r\n        </table>;\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Position: string,\r\n    Team: string,\r\n    Name: string,\r\n    Status: string,\r\n    Projected: number,\r\n    Price: number,\r\n    Opp: string,\r\n    Weather: any\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes\r\n}\r\n\r\nconst Player = (props: playerProps) =>\r\n    <tr>\r\n        <td>\r\n            <tr style={{fontWeight: 'bold'}}>{props.player.Name}</tr>\r\n            <tr>{props.player.Team} {props.player.Position}</tr>\r\n        </td>\r\n        <td>{props.player.Opp}</td>\r\n        <td>\r\n            {'$'.concat(props.player.Price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}\r\n        </td>\r\n    </tr>;\r\n\r\nexport const DfsBlackListBox = (props: {\r\n    blackList: playerAttributes[]\r\n    }) =>\r\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\r\n            <tr style={{backgroundColor: 'indianred'}}>\r\n                <th>Player</th>\r\n                <th>Opp</th>\r\n                <th>Salary</th>\r\n            </tr>\r\n            {props.blackList.sort((a, b) => b.Price - a.Price).map(\r\n                (player) => {\r\n                    return (\r\n                        <Player player={player}/>\r\n                    )\r\n                }\r\n            )}\r\n        </table>;\r\n","import React, { Component } from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap'\r\nimport { DfsGrid } from './DfsGrid.tsx';\r\nimport { DfsReport } from './DfsReport.tsx';\r\nimport { DfsPlayerBox } from './DfsPlayerListBox.tsx'\r\nimport { DfsBlackListBox } from './DfsBlackListBox.tsx'\r\nimport football2 from '../../icons/football2.svg';\r\nimport football from '../../icons/football.ico';\r\nimport search from \"../../icons/search.ico\";\r\n\r\nexport class Optimizer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isLoading: false, isOptimizing: false, isReporting: false, sport: '', site: '', slate: '',\r\n                      lineup: [], cap: 0, playerPool: [], filteredPool: null, searchText: '', whiteList: [],\r\n                      blackList: [], reportingData: {}, weeks: []};\r\n    }\r\n\r\n    generateLineup = (sport, site, slate) => {\r\n        let {lineup, blackList} = this.state;\r\n        let whiteListNames = lineup.filter((player) => player.Name).map((player) => (player.Name));\r\n        let blackListNames = blackList.filter((player) => player.Name).map((player) => (player.Name));\r\n        this.setState({\r\n            isOptimizing: true,\r\n            isReporting: false,\r\n            sport: sport,\r\n            site: site,\r\n            slate: slate,\r\n            whiteList: lineup.filter((player) => player.Name)\r\n        });\r\n        fetch(window.location.origin + '/optimize/generate/' + sport + '/' + site + '/' + slate, {\r\n            method: 'POST',\r\n            body: whiteListNames.toString() + '|' + blackListNames.toString()\r\n        }).then(response => {\r\n            if (response.status !== 200) {\r\n                alert('Error removing player.');\r\n            } else {\r\n                response.json()\r\n                    .then((lineupJson) => {\r\n                        this.ingestDfsLineup(lineupJson);\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    ingestDfsLineup = (lineupJson) => {\r\n        if (typeof lineupJson === \"string\") {\r\n            this.setState({isOptimizing: false});\r\n            alert(lineupJson);\r\n            return\r\n        }\r\n        let lineup = (typeof lineupJson === \"string\") ? [] : lineupJson;\r\n        this.setState({\r\n            isOptimizing: false,\r\n            lineup: lineup\r\n        });\r\n    };\r\n\r\n    clearLineup = (sport, site, slate) => {\r\n        if (!sport) {\r\n            alert('Please select a sport.');\r\n        } else if (!site || !slate) {\r\n            this.setState({sport: sport, site: site, slate: slate});\r\n        } else {\r\n            this.setState({\r\n                isLoading: true,\r\n                isReporting: false,\r\n                sport: sport,\r\n                site: site,\r\n                slate: slate\r\n            });\r\n            fetch(window.location.origin + '/optimize/clear/' + sport + '/' + site + '/' + slate)\r\n                .then(response => {\r\n                    if (response.status !== 200) {\r\n                        alert('An error occurred.');\r\n                    } else {\r\n                        response.json()\r\n                            .then((data) => {\r\n                                this.setState({\r\n                                    isLoading: false,\r\n                                    playerPool: data.playerPool,\r\n                                    lineup: data.lineup,\r\n                                    cap: data.cap,\r\n                                    whiteList: [],\r\n                                    blackList: []\r\n                                });\r\n                            });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    filterPlayersByText = (event) => {\r\n        let text = event.target.value.toLowerCase();\r\n        let playerPool = this.state.playerPool;\r\n        let filteredPool = playerPool.filter(\r\n            (player) => player.Name.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n        this.setState({\r\n            searchText: text,\r\n            filteredPool: filteredPool\r\n        });\r\n    };\r\n\r\n    filterPlayersByPosition = (position) => {\r\n        let playerPool = this.state.playerPool;\r\n        if (position === 'All') {\r\n            this.setState({\r\n            searchText: '',\r\n            filteredPool: playerPool\r\n        });\r\n        } else {\r\n            let filteredPool = playerPool.filter(\r\n                (player) => player.Position === position\r\n            );\r\n            this.setState({\r\n                searchText: '',\r\n                filteredPool: filteredPool\r\n            });\r\n        }\r\n    };\r\n\r\n    filterPlayersByTeam = (team) => {\r\n        let playerPool = this.state.playerPool;\r\n        if (team === 'All') {\r\n            this.setState({\r\n            searchText: '',\r\n            filteredPool: playerPool,\r\n        });\r\n        } else {\r\n            let filteredPool = playerPool.filter(\r\n                (player) => player.Team === team\r\n            );\r\n            this.setState({\r\n                searchText: '',\r\n                filteredPool: filteredPool\r\n            });\r\n        }\r\n    };\r\n\r\n    handleTeamChange = (event) => {\r\n        this.filterPlayersByTeam(event.target.value);\r\n    };\r\n\r\n    addToLineup = (playerIndex) => {\r\n        let {playerPool, lineup, whiteList, blackList} = this.state;\r\n        let playerToAdd = playerPool[playerIndex];\r\n        if (lineup.includes(playerToAdd)) {\r\n            alert('Player already added to lineup.');\r\n            return\r\n        }\r\n        let spotToReplace;\r\n        let spotsToReplace = lineup.filter(\r\n            (player) =>\r\n                (playerToAdd.Position === player.Position && !player.Name)\r\n                || (['RB', 'WR', 'TE'].includes(playerToAdd.Position) && player.Position === 'FLEX' && !player.Name)\r\n        );\r\n        if (spotsToReplace.length === 0) {\r\n            alert('Not enough positions available to add player.');\r\n        } else {\r\n            whiteList.push(playerToAdd);\r\n            if (blackList.includes(playerToAdd)) {\r\n                blackList.splice(blackList.indexOf(playerToAdd), 1)\r\n            }\r\n            spotToReplace = spotsToReplace[0];\r\n            let lineupIndex = lineup.indexOf(spotToReplace);\r\n            lineup[lineupIndex] = playerToAdd;\r\n            this.setState({\r\n                lineup: lineup,\r\n                whiteList: whiteList,\r\n                blackList: blackList,\r\n                filteredPool: null,\r\n                searchText: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    removeFromLineup = (playerIndex) => {\r\n        let {playerPool, lineup, whiteList} = this.state;\r\n        let playerToRemove = lineup[playerIndex];\r\n        if (whiteList.includes(playerToRemove)) {\r\n            whiteList.splice(whiteList.indexOf(playerToRemove), 1)\r\n        }\r\n        lineup[playerIndex] = {\r\n            Position: playerToRemove.Position,\r\n            Team: '',\r\n            Name: '',\r\n            Status: '',\r\n            Projected: '',\r\n            Price: '',\r\n            Opp: '',\r\n            Weather: ''\r\n        };\r\n        this.setState({\r\n            playerPool: playerPool,\r\n            lineup: lineup,\r\n            whiteList: whiteList\r\n        });\r\n    };\r\n\r\n    toggleBlackList = (playerIndex) => {\r\n        let {playerPool, lineup, whiteList, blackList} = this.state;\r\n        let blackListedPlayer = playerPool[playerIndex];\r\n        if (lineup.includes(blackListedPlayer)) {\r\n            this.removeFromLineup(lineup.indexOf(blackListedPlayer));\r\n        }\r\n        if (blackList.includes(blackListedPlayer)) {\r\n            blackList.splice(blackList.indexOf(blackListedPlayer), 1)\r\n        } else {\r\n            blackList.push(blackListedPlayer);\r\n        }\r\n        this.setState({\r\n            playerPool: playerPool,\r\n            whiteList: whiteList,\r\n            blackList: blackList,\r\n            filteredPool: null,\r\n            searchText: ''\r\n        });\r\n    };\r\n\r\n    sumPoints = (lineup) => {\r\n         return lineup.map((player) => ((player.Projected) ? parseFloat(player.Projected) : 0)).reduce((a,b) => a + b, 0);\r\n    };\r\n\r\n    sumSalary = (lineup) => {\r\n        return lineup.map((player) => ((player.Price) ? parseInt(player.Price) : 0)).reduce((a, b) => a + b, 0);\r\n    };\r\n\r\n    fetchReportingData = (sport, slate, site, weeks) => {\r\n        sport = 'nfl';\r\n        if (!sport) {\r\n            alert('Please select a sport.');\r\n        } else {\r\n            fetch(window.location.origin + '/optimize/reporting/' + sport + '/' + site + '/' + slate, {\r\n                method: 'POST',\r\n                body: weeks\r\n            }).then(response => {\r\n                    if (response.status !== 200) {\r\n                        alert('Failed to generate report.');\r\n                    } else {\r\n                        response.json()\r\n                            .then((reportJson) => {\r\n                                this.setState({\r\n                                    isReporting: true,\r\n                                    weeks: weeks,\r\n                                    reportingData: reportJson});\r\n                            });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    toggleWeek = (selectedWeek) => {\r\n        let {sport, slate, site, weeks} = this.state;\r\n        if (weeks.includes(selectedWeek)) {\r\n            weeks.splice(weeks.indexOf(selectedWeek), 1);\r\n        } else {\r\n            weeks.push(selectedWeek);\r\n        }\r\n        this.fetchReportingData(sport, slate, site, weeks);\r\n        return weeks\r\n    };\r\n\r\n    render() {\r\n        const {isLoading, isOptimizing, isReporting, sport, site, slate, lineup, cap, playerPool, filteredPool,\r\n            searchText, whiteList, blackList, reportingData, weeks} = this.state;\r\n\r\n        let gridSection;\r\n        let weekArray = [];\r\n        for (let i = 1; i <= reportingData.maxWeek; i++) {\r\n            weekArray.push(i);\r\n        }\r\n\r\n        if (isLoading) {\r\n            gridSection =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Loading-text\"}>Loading . . .</p></div>\r\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\r\n                </div>;\r\n        } else if (isOptimizing) {\r\n            gridSection =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Optimizing-text\"}>Optimizing . . .</p></div>\r\n                    <div><img src={football2} className={\"App-logo2\"} alt=\"football2\"/></div>\r\n                </div>;\r\n        } else if (isReporting) {\r\n            gridSection =\r\n                <div className={\"Dfs-grid-section\"}>\r\n                    <div>\r\n                        <DfsReport reportingData={reportingData.data}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className={'Dfs-sport'}>\r\n                            <h3>Week</h3>\r\n                            <div className={\"Dfs-grid-section\"}>\r\n                            {weekArray.map(\r\n                                (weekNumber) => (\r\n                                    <button style={{backgroundColor: (weeks.includes(weekNumber)) ? 'dodgerblue' : 'white'}}\r\n                                            onClick={() => this.toggleWeek(weekNumber)}>{weekNumber}</button>\r\n                                )\r\n                            )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        } else {\r\n            gridSection =\r\n                <div className={\"Dfs-grid-section\"}>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <h2 className={\"Dfs-header\"}>Blacklist</h2>\r\n                        <DfsBlackListBox blackList={blackList}/>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className={\"Dfs-header\"}>Players</h2>\r\n                        <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                            {!filteredPool &&\r\n                                <img src={search} style={{height: '3vmin', position: 'absolute'}}\r\n                                     alt=\"search\"/>}\r\n                            <input type=\"text\" style={{height: '25px', width: '90%'}}\r\n                                   value={searchText}\r\n                                   onClick={this.filterPlayersByText}\r\n                                   onChange={this.filterPlayersByText}>{null}</input>\r\n                        </div>\r\n                        <div style={{display: 'flex'}}>\r\n                            <button onClick={() => this.filterPlayersByPosition('All')}>All</button>\r\n                            {\r\n                                ['QB', 'RB', 'WR', 'TE', 'D/ST']\r\n                                    .map((position) =>\r\n                                        <button onClick={() => this.filterPlayersByPosition(position)}>{position}</button>\r\n                                    )\r\n                            }\r\n                            <select onChange={(event) => this.handleTeamChange(event)}>\r\n                                <option selected={\"selected\"} value={'All'}>All</option>\r\n                                {[... new Set(playerPool.map((player) => player.Team))].sort().map((team) =>\r\n                                    <option value={team}>{team}</option>\r\n                                )}\r\n                            </select>\r\n                        </div>\r\n                        <div className={\"Player-list-box\"}>\r\n                            <DfsPlayerBox playerList={playerPool} filterList={filteredPool}\r\n                                          whiteListFunction={this.addToLineup} blackListFunction={this.toggleBlackList}\r\n                                          whiteList={whiteList} blackList={blackList} salarySum={this.sumSalary(lineup)}\r\n                                          cap={cap}/>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className={\"Dfs-header\"}>Lineup</h2>\r\n                        <DfsGrid dfsLineup={lineup} removePlayer={this.removeFromLineup} site={site}\r\n                                 whiteList={whiteList} pointSum={this.sumPoints(lineup)}\r\n                                 salarySum={this.sumSalary(lineup)} cap={cap}/>\r\n                    </div>\r\n                </div>;\r\n        }\r\n\r\n        return (\r\n            <Container fluid={true}>\r\n                <Navbar bg=\"primary\" variant=\"dark\">\r\n                    <Nav className=\"Nav-bar\">\r\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/simulate\">Back to Draft Simulator</Nav.Link>\r\n                        <Nav.Link href=\"/logout\">Log Out</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <h1 className={\"App-header\"}>DFS Optimizer</h1>\r\n                <div className={\"Dfs-sport\"}>\r\n                    <h3>Choose a sport:</h3>\r\n                    <div style={{display: 'flex'}}>\r\n                        <button style={{backgroundColor: (sport === 'mlb') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup('mlb', site, 'main')}>MLB</button>\r\n                        <button style={{backgroundColor: (sport === 'nfl') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup('nfl', site, slate)}>NFL</button>\r\n                        <button style={{backgroundColor: (sport === 'nba') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup('nba', site, 'main')}>NBA</button>\r\n                    </div>\r\n                    {sport && <h3>Choose a game slate:</h3>}\r\n                    {sport &&\r\n                        <div style={{display: 'flex'}}>\r\n                            <button style={{backgroundColor: (slate === 'thurs') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'thurs')}>Thurs only</button>\r\n                            <button style={{backgroundColor: (slate === 'thurs-mon') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'thurs-mon')}>Thurs - Mon</button>\r\n                            <button style={{backgroundColor: (slate === 'main') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'main')}>Sun (Main)</button>\r\n                            <button style={{backgroundColor: (slate === 'sun-mon') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'sun-mon')}>Sun - Mon</button>\r\n                        </div>}\r\n                    {sport && <h3>Choose a site:</h3>}\r\n                    {sport &&\r\n                        <div style={{display: 'flex'}}>\r\n                        <button style={{backgroundColor: (site === 'fd') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup(sport, 'fd', slate)}>Fanduel</button>\r\n                        <button style={{backgroundColor: (site === 'dk') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup(sport, 'dk', slate)}>Draftkings</button>\r\n                        </div>}\r\n                    <div style={{display: 'flex', margin: '2%'}}>\r\n                        {sport && slate && site && <button style={{marginTop: '10px'}}\r\n                                      onClick={() => this.generateLineup(sport, site, slate)}>Optimize Lineup</button>}\r\n                        {sport && slate && site && <button style={{marginTop: '10px'}}\r\n                                          onClick={() => this.clearLineup(sport, site, slate)}>Clear Lineup</button>}\r\n                        {(sport === 'nfl' && slate && site) && <button style={{marginTop: '10px'}}\r\n                                          onClick={() =>\r\n                                              this.fetchReportingData(sport, slate, site, weekArray)}>Generate Report</button>}\r\n                    </div>\r\n                </div>\r\n                {sport && slate && site && gridSection}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","/*\r\njQWidgets v7.1.0 (2019-Feb)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\r\n/* eslint-disable */\r\n\r\nimport 'jqwidgets-framework/jqwidgets/styles/jqx.base.css';\r\nimport 'jqwidgets-framework/jqwidgets/jqxcore.js';\r\nimport 'jqwidgets-framework/jqwidgets/jqxpopover.js';\r\n\r\nimport React from 'react';\r\n\r\nconst JQXLite = window.JQXLite;\r\n\r\nexport const jqx = window.jqx;\r\n\r\nexport default class JqxPopover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const widgetId = 'jqxPopover' + JQXLite.generateID();\r\n        this.componentSelector = '#' + widgetId;\r\n        this.state = { id: widgetId };\r\n    };\r\n    componentDidMount() {\r\n        const options = this.manageAttributes();\r\n        this.createComponent(options);\r\n    };\r\n    manageAttributes() {\r\n        const properties = ['arrowOffsetValue','animationOpenDelay','animationCloseDelay','autoClose','animationType','height','initContent','isModal','offset','position','rtl','selector','showArrow','showCloseButton','width','title','theme'];\r\n        let options = {};\r\n        for(let item in this.props) {\r\n            if(item === 'settings') {\r\n                for(let itemTwo in this.props[item]) {\r\n                    options[itemTwo] = this.props[item][itemTwo];\r\n                }\r\n            } else {\r\n                if(properties.indexOf(item) !== -1) {\r\n                      options[item] = this.props[item];\r\n                }\r\n            }\r\n        }\r\n        return options;\r\n    };\r\n    createComponent(options) {\r\n        if(!this.style) {\r\n            for (let style in this.props.style) {\r\n                JQXLite(this.componentSelector).css(style, this.props.style[style]);\r\n            }\r\n        }\r\n        if(this.props.className !== undefined) {\r\n            const classes = this.props.className.split(' ');\r\n            for (let i = 0; i < classes.length; i++ ) {\r\n                JQXLite(this.componentSelector).addClass(classes[i]);\r\n            }\r\n        }\r\n        if(!this.template) {\r\n            JQXLite(this.componentSelector).html(this.props.template);\r\n        }\r\n        JQXLite(this.componentSelector).jqxPopover(options);\r\n    };\r\n    setOptions(options) {\r\n        JQXLite(this.componentSelector).jqxPopover('setOptions', options);\r\n    };\r\n    getOptions() {\r\n        if(arguments.length === 0) {\r\n            throw Error('At least one argument expected in getOptions()!');\r\n        }\r\n        let resultToReturn = {};\r\n        for(let i = 0; i < arguments.length; i++) {\r\n            resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxPopover(arguments[i]);\r\n        }\r\n        return resultToReturn;\r\n    };\r\n    on(name,callbackFn) {\r\n        JQXLite(this.componentSelector).on(name,callbackFn);\r\n    };\r\n    off(name) {\r\n        JQXLite(this.componentSelector).off(name);\r\n    };\r\n    arrowOffsetValue(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue');\r\n        }\r\n    };\r\n    animationOpenDelay(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationOpenDelay', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationOpenDelay');\r\n        }\r\n    };\r\n    animationCloseDelay(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationCloseDelay', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationCloseDelay');\r\n        }\r\n    };\r\n    autoClose(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('autoClose', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('autoClose');\r\n        }\r\n    };\r\n    animationType(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationType', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationType');\r\n        }\r\n    };\r\n    height(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('height', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('height');\r\n        }\r\n    };\r\n    initContent(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('initContent', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('initContent');\r\n        }\r\n    };\r\n    isModal(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('isModal', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('isModal');\r\n        }\r\n    };\r\n    offset(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('offset', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('offset');\r\n        }\r\n    };\r\n    position(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('position', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('position');\r\n        }\r\n    };\r\n    rtl(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('rtl', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('rtl');\r\n        }\r\n    };\r\n    selector(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('selector', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('selector');\r\n        }\r\n    };\r\n    showArrow(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('showArrow', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('showArrow');\r\n        }\r\n    };\r\n    showCloseButton(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('showCloseButton', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('showCloseButton');\r\n        }\r\n    };\r\n    width(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('width', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('width');\r\n        }\r\n    };\r\n    title(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('title', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('title');\r\n        }\r\n    };\r\n    theme(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('theme', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('theme');\r\n        }\r\n    };\r\n    close() {\r\n        JQXLite(this.componentSelector).jqxPopover('close');\r\n    };\r\n    destroy() {\r\n        JQXLite(this.componentSelector).jqxPopover('destroy');\r\n    };\r\n    open() {\r\n        JQXLite(this.componentSelector).jqxPopover('open');\r\n    };\r\n    render() {\r\n        return (\r\n            <div id={this.state.id}>{this.props.value}{this.props.children}</div>\r\n        )\r\n    };\r\n};\r\n\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Rank: number,\r\n    Name: string,\r\n    Position: string,\r\n    Team: string,\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    isUserPlayer: boolean,\r\n    onChange: () => void,\r\n    onMove: (direction: string) => void\r\n}\r\n\r\nconst plus = require(\"../../icons/plus.ico\") as any;\r\nconst minus = require(\"../../icons/minus.ico\") as any;\r\nconst up = require(\"../../icons/up.ico\") as any;\r\nconst down = require(\"../../icons/down.ico\") as any;\r\n\r\nconst Player = (props: playerProps) =>\r\n    <tr>\r\n        <td>{props.player.Rank}</td>\r\n        <td>\r\n            <tr style={{fontWeight: 'bold'}}>{props.player.Name}</tr>\r\n            <tr>{props.player.Team} {props.player.Position}</tr>\r\n        </td>\r\n        <td>\r\n            <img src={(props.isUserPlayer) ? minus : plus} alt={\"add-or-remove\"} onClick={props.onChange} style={{height: '3vmin'}}/>\r\n        </td>\r\n        {props.isUserPlayer && (\r\n            <td style={{display: 'flex', flexDirection: 'column'}}>\r\n                <img src={up} alt={\"up\"} onClick={() => props.onMove('up')} style={{height: '3vmin'}}/>\r\n                <img src={down} alt={\"down\"} onClick={() => props.onMove('down')} style={{height: '3vmin'}}/>\r\n            </td>\r\n            )\r\n        }\r\n    </tr>;\r\n\r\nexport const PlayerListBox = (props: {\r\n    playerList: playerAttributes[],\r\n    filterList: playerAttributes[],\r\n    addPlayer: (index: number) => void }) =>\r\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\r\n            {props.playerList.map(\r\n                (player, index) => {\r\n                    if (!props.filterList || props.filterList.includes(player)) {\r\n                        return (\r\n                            <Player player={player}\r\n                                        isUserPlayer={false}\r\n                                        onChange={() => props.addPlayer(index)}\r\n                                        onMove={null}\r\n                            />\r\n                        )\r\n                    }\r\n                }\r\n            )}\r\n        </table>;\r\n\r\nexport const UserListBox = (props: {\r\n    userRoundList: [playerAttributes[]],\r\n    removePlayer: (roundIndex: number, index: number) => void,\r\n    movePlayer: (roundIndex: number, index: number, direction: string) => void}) =>\r\n        props.userRoundList.map(\r\n            (playerList, roundIndex) => {\r\n                return (\r\n                    <table style={{borderCollapse: 'collapse', marginBottom: '5vmin'}} className={'Draft-grid'}>\r\n                        <th colSpan={4} style={{textAlign: 'center'}}>{'Round ' + (roundIndex + 1)}</th>\r\n                        {playerList.map(\r\n                            (player, index) => (\r\n                                <Player player={player}\r\n                                        isUserPlayer={true}\r\n                                        onChange={() => props.removePlayer(roundIndex, index)}\r\n                                        onMove={(direction) => props.movePlayer(roundIndex, index, direction)}\r\n                                />\r\n                            )\r\n                        )}\r\n                    </table>\r\n                )\r\n            });\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Name: string,\r\n    Position: string,\r\n    Team: string,\r\n    Round: number,\r\n    Frequency: string\r\n}\r\n\r\nexport const DraftResultsTable = (props: {\r\n    frequencyData: playerAttributes[]}) =>\r\n    <table>\r\n        <tr>\r\n            <th>Player</th>\r\n            <th>Round</th>\r\n            <th>Draft Frequency</th>\r\n        </tr>\r\n        {props.frequencyData.map(\r\n            (player) => (\r\n                <tr>\r\n                    <td>\r\n                        <tr style={{fontWeight: 'bold'}}>{player.Name}</tr>\r\n                        <tr>{player.Team} {player.Position}</tr>\r\n                    </td>\r\n                    <td>{player.Round}</td>\r\n                    <td>{player.Frequency}</td>\r\n                </tr>\r\n            )\r\n        )}\r\n    </table>;","import React, {Component} from 'react'\r\nimport { Container, Nav, Navbar } from 'react-bootstrap'\r\nimport '../App.css';\r\nimport JqxPopover from '../../jqxwidgets/react_jqxpopover'\r\nimport { PlayerListBox, UserListBox } from \"./PlayerListBox.tsx\"\r\nimport { DraftResultsTable } from \"./DraftResultsTable.tsx\";\r\nimport football from '../../icons/football.ico'\r\nimport search from '../../icons/search.ico'\r\n\r\nexport class Simulator extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isLoading: true, players: [], searchText: '', filteredPlayers: null, site: 'espn',\r\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\r\n            teamCount: 10, pickOrder: 5, roundCount: 16, isDrafting: false, isRandom: false,\r\n            allFreqs: [], userFreqs: [], expectedTeam: [], frequencyData: []};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPlayersForSimulator(this.state.site);\r\n    }\r\n\r\n    fetchPlayersForSimulator = (site) => {\r\n        this.setState({isLoading: true});\r\n        fetch(window.location.origin + '/' + site + '-players')\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Could not load players.');\r\n                } else {\r\n                    response.json()\r\n                        .then((players) => {\r\n                            if (typeof players[0] === \"string\") {\r\n                                this.setState({isLoading: false});\r\n                                alert(players[0]);\r\n                            } else {\r\n                                this.setState({\r\n                                    isLoading: false,\r\n                                    players: players,\r\n                                    site: site\r\n                                });\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n    };\r\n\r\n    handleSliderChange = (param, event) => {\r\n        this.setState({[param]: event.target.value})\r\n    };\r\n\r\n    closeAbout = () => {\r\n        this.refs.about.close();\r\n        let url = window.location.pathname.split('#');\r\n        window.location.href = window.location.origin + url[0].toString() + '#';\r\n    };\r\n\r\n    closeInstructions = () => {\r\n        this.refs.instructions.close();\r\n        let url = window.location.pathname.split('#');\r\n        window.location.href = window.location.origin + url[0].toString() + '#';\r\n    };\r\n\r\n    swapRankings = () => {\r\n        let newSite = (this.state.site === 'espn') ? 'yahoo' : 'espn';\r\n        this.fetchPlayersForSimulator(newSite);\r\n    };\r\n\r\n    saveRankings = () => {\r\n        let {userPlayers, site} = this.state;\r\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\r\n            alert('Please rank at least one player before saving.');\r\n        } else {\r\n            fetch(window.location.origin + '/save-ranking/' + site, {\r\n                method: 'POST',\r\n                body: JSON.stringify(userPlayers)\r\n            }).then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('User ranking unable to be saved.');\r\n                } else {\r\n                    response.json()\r\n                        .then((responseJson) => {\r\n                            alert(responseJson[0])\r\n                        })\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    loadRankings = () => {\r\n        let site = this.state.site;\r\n        fetch(window.location.origin + '/load-ranking/' + site)\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Could not load user ranking data.');\r\n                }  else {\r\n                    response.json()\r\n                        .then((userRanking) => {\r\n                            if (typeof userRanking[0] === \"string\") {\r\n                                alert(userRanking[0]);\r\n                            } else {\r\n                                let {players, userPlayers} = this.state;\r\n                                let allPlayers = players.concat(userPlayers.flat());\r\n                                players = allPlayers.sort((a, b) => a.Rank - b.Rank);\r\n                                let allLoadedPlayers = userRanking.flat();\r\n                                for (let i = 0; i < allLoadedPlayers.length; i++) {\r\n                                    let userPlayerRank = allLoadedPlayers[i].Rank;\r\n                                    let playerIndex = players.findIndex(\r\n                                        (player) => player.Rank === userPlayerRank);\r\n                                    players.splice(playerIndex, 1);\r\n                                }\r\n                                this.setState({\r\n                                    players: players,\r\n                                    userPlayers: userRanking,\r\n                                    filteredPlayers: null\r\n                                })\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n    };\r\n\r\n    filterPlayers = (event) => {\r\n        let text = event.target.value.toLowerCase();\r\n        let players = this.state.players;\r\n        let filteredPlayers = players.filter(\r\n            (player) =>\r\n                player.Name.toLowerCase().includes(text)\r\n                || player.Position.toLowerCase().includes(text)\r\n                || player.Team.toLowerCase().includes(text)\r\n        );\r\n        this.setState({\r\n            searchText: text,\r\n            filteredPlayers: filteredPlayers});\r\n    };\r\n\r\n    addPlayer = (playerIndex) => {\r\n        let {players, userPlayers} = this.state;\r\n        let playerToAdd = players[playerIndex];\r\n        players.splice(playerIndex, 1);\r\n        userPlayers[0].push(playerToAdd);\r\n        this.setState({\r\n            players: players,\r\n            userPlayers: userPlayers,\r\n            filteredPlayers: null,\r\n            searchText: ''\r\n        });\r\n    };\r\n\r\n    removePlayer = (roundIndex, playerIndex) => {\r\n        let {players, userPlayers} = this.state;\r\n        let roundList = userPlayers[roundIndex];\r\n        let removedPlayer = roundList[playerIndex];\r\n        let removedPlayerRank = removedPlayer.Rank;\r\n        const originalPlayerNeighbor = players.find((player) => player.Rank > removedPlayerRank);\r\n        players.splice(players.indexOf(originalPlayerNeighbor), 0, removedPlayer);\r\n        roundList.splice(playerIndex, 1);\r\n        this.setState({\r\n            players: players,\r\n            userPlayers: userPlayers\r\n        });\r\n    };\r\n\r\n    clearPlayers = () => {\r\n        let {players, userPlayers} = this.state;\r\n        let allUserPlayers = userPlayers.flat();\r\n        let allPlayers = players.concat(allUserPlayers);\r\n        this.setState({\r\n            players: allPlayers.sort((a, b) => a.Rank - b.Rank),\r\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\r\n            filteredPlayers: null\r\n        });\r\n    };\r\n\r\n    movePlayer = (roundIndex, playerIndex, direction) => {\r\n        let userPlayers = this.state.userPlayers;\r\n        let roundList = userPlayers[roundIndex];\r\n        let player = roundList[playerIndex];\r\n        userPlayers[roundIndex].splice(playerIndex, 1);\r\n        if (direction === 'up') {\r\n            if (playerIndex > 0) {\r\n                userPlayers[roundIndex].splice(playerIndex - 1, 0, player);\r\n            } else if (roundIndex > 0) {\r\n                userPlayers[roundIndex - 1].push(player);\r\n            } else {\r\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\r\n            }\r\n        } else if (direction === 'down') {\r\n            if (playerIndex < roundList.length) {\r\n                roundList.splice(playerIndex + 1, 0, player);\r\n            } else if (roundIndex < userPlayers.length - 1) {\r\n                userPlayers[roundIndex + 1].splice(0, 0, player);\r\n            } else {\r\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\r\n            }\r\n        }\r\n        this.setState({userPlayers: userPlayers});\r\n    };\r\n\r\n    determineIfRandom = (event) => {\r\n        this.setState({isRandom: event.target.checked})\r\n    };\r\n\r\n    simulateDrafts = (draftCancelled) => {\r\n        if (draftCancelled) {\r\n            this.setState({isDrafting: false});\r\n            return\r\n        }\r\n        let {userPlayers, teamCount, pickOrder, roundCount, site} = this.state;\r\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\r\n            alert('Please select at least one player to draft.');\r\n        } else {\r\n            let playerNames = userPlayers.map((roundList) => roundList.map((player) => player.Name));\r\n            this.setState({isDrafting: true});\r\n            fetch(window.location.origin + '/draft-results', {\r\n                method: 'POST',\r\n                body: JSON.stringify(playerNames) + '|' + teamCount + '|' + pickOrder + '|' + roundCount + '|' + site\r\n            }).then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Error loading draft results.');\r\n                } else {\r\n                    response.json()\r\n                        .then((draftResults) => {\r\n                            if (typeof draftResults[0] == \"string\") {\r\n                                alert(draftResults[0]);\r\n                            } else {\r\n                                this.generateDraftOutput(draftResults);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    generateDraftOutput = (draftResults) => {\r\n        if (draftResults === ['Draft error!']) {\r\n            alert('No players were drafted. :( \\nSomething went wrong . . .');\r\n        }\r\n        this.setState({\r\n            isDrafting: false,\r\n            userFreqs: draftResults.UserFrequencies,\r\n            allFreqs: draftResults.AllFrequencies,\r\n            expectedTeam: draftResults.ExpectedTeam,\r\n            frequencyData: draftResults.UserFrequencies\r\n        });\r\n    };\r\n\r\n    toggleFrequencyData = (frequencyData) => {\r\n        this.setState({frequencyData: frequencyData});\r\n    };\r\n\r\n    render() {\r\n        const {isLoading, players, filteredPlayers, site,\r\n            userPlayers, teamCount, pickOrder, roundCount, isDrafting, isRandom,\r\n            userFreqs, allFreqs, expectedTeam, frequencyData} = this.state;\r\n        let playerListBox, draftResultsTable;\r\n\r\n        if (isLoading) {\r\n            playerListBox =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Loading-text\"}>Loading players . . .</p></div>\r\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\r\n                </div>;\r\n        } else {\r\n            playerListBox =\r\n                <PlayerListBox playerList={players} filterList={filteredPlayers} addPlayer={this.addPlayer}/>;\r\n        }\r\n        if (isDrafting) {\r\n            draftResultsTable =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Loading-text\"}>Drafting . . .</p></div>\r\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\r\n                    <div>\r\n                        <button onClick={() => this.simulateDrafts(true)}\r\n                                className={\"Cancel-draft-button\"}>Cancel</button>\r\n                    </div>\r\n                </div>;\r\n        } else {\r\n            draftResultsTable = <DraftResultsTable frequencyData={frequencyData}/>;\r\n        }\r\n\r\n        const swapButtonText = (site === 'espn') ? 'Switch to Yahoo' : 'Switch to ESPN';\r\n        const swapButtonColor = (site === 'espn') ? '#6C00B3' : '#CE0000';\r\n\r\n        return (\r\n            <Container fluid={true}>\r\n                <Navbar bg=\"primary\" variant=\"dark\">\r\n                    <Nav className=\"Nav-bar\">\r\n                      <Nav.Link href=\"/home\">Home</Nav.Link>\r\n                      <Nav.Link href=\"#about\">About</Nav.Link>\r\n                      <Nav.Link href=\"#instructions\">Instructions</Nav.Link>\r\n                      <Nav.Link href=\"/optimize\">DFS Optimizer</Nav.Link>\r\n                        <Nav.Link href=\"/logout\">Log Out</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <div className={\"Info-buttons\"}>\r\n                    <JqxPopover ref='about' isModal={true} width={310}\r\n                        position={'bottom'} title={'About Draft Simulator'} selector={'a[href$=\"#about\"]'}>\r\n                        <p>Draft Simulator is a fantasy football draft preparation tool.</p>\r\n                        <p>More often than not, others in your league will only draft among the \"top available\r\n                            players\" in each round, which are determined by ESPN's preseason rankings.</p>\r\n                        <p>However, Draft Simulator allows you to create and refine your own personal rankings that\r\n                            you can bring to your draft to get the team you've always dreamed of.</p>\r\n                        <button onClick={this.closeAbout}\r\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\r\n                            Got it!</button>\r\n                    </JqxPopover>\r\n                    <JqxPopover ref='instructions' isModal={true} width={310}\r\n                        position={'bottom'} title={'Instructions'} selector={'a[href$=\"#instructions\"]'}>\r\n                        <ol>\r\n                            <li>Search for and select players from the player list. These should be players you'd\r\n                                feel strongly about drafting.</li>\r\n                            <li>Click \"Add\" to move them to your preferred list.</li>\r\n                            <li>Drag and drop your players in order of overall preference.</li>\r\n                            <li>Adjust the sliders to your desired specifications, then click \"Draft\".</li>\r\n                            <li>See how often you were able to draft each player under the \"Draft Frequency\"\r\n                                tab.</li>\r\n                            <li>The \"All Players\" tab shows the draft frequency of all players taken, not just your\r\n                                preferred players.</li>\r\n                            <li>The \"Expected Team\" tab shows your most likely fantasy team given the\r\n                                simulations.</li>\r\n                        </ol>\r\n                        <button onClick={this.closeInstructions}\r\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\r\n                            Let's draft!</button>\r\n                    </JqxPopover>\r\n                </div>\r\n                <h1 className={\"App-header\"}>Draft Simulator</h1>\r\n                <div className={\"Buttons-and-boxes\"}>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <div>\r\n                            {!filteredPlayers && <img src={search} style={{height: '3vmin', position: 'absolute'}}\r\n                                                      alt=\"search\"/>}\r\n                            <input type=\"text\" style={{height: '25px', width: '90%'}}\r\n                                   value={this.state.searchText}\r\n                                   onClick={this.filterPlayers}\r\n                                   onChange={this.filterPlayers}>{null}</input>\r\n                        </div>\r\n                        {playerListBox}\r\n                    </div>\r\n                    <div className={\"Player-buttons\"}>\r\n                        <button onClick={this.clearPlayers} style={{fontSize: 16}}\r\n                                className={\"Clear-button\"}>Clear</button>\r\n                        <button id='rankingButton' onClick={this.loadRankings}\r\n                                className={\"Ranking-button\"}>Load Saved Rankings</button>\r\n                        <button id='swapButton' style={{backgroundColor: swapButtonColor}}\r\n                                onClick={this.swapRankings} className={\"Swap-button\"}>{swapButtonText}</button>\r\n                    </div>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <UserListBox userRoundList={userPlayers} removePlayer={this.removePlayer}\r\n                                     movePlayer={this.movePlayer} className={\"Player-list-box\"}/>\r\n                    </div>\r\n                    <div className={\"Draft-buttons\"}>\r\n                        <button onClick={this.saveRankings} style={{fontSize: 16}}\r\n                                className={\"Ranking-button\"}>Save Player Rankings</button>\r\n                        <button onClick={() => this.simulateDrafts(false)}\r\n                                style={{fontSize: 16}} className={\"Draft-button\"}>Draft!</button>\r\n                    </div>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <tr>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(userFreqs)}\r\n                                style={{borderStyle: (frequencyData === userFreqs) ?\r\n                                        'inset' : 'outset'}}>Your Players</button>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(allFreqs)}\r\n                                style={{borderStyle: (frequencyData === allFreqs) ?\r\n                                        'inset' : 'outset'}}>All Players</button>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(expectedTeam)}\r\n                                style={{borderStyle: (frequencyData === expectedTeam) ?\r\n                                        'inset' : 'outset'}}>Expected Team</button>\r\n                        </tr>\r\n                        {draftResultsTable}\r\n                    </div>\r\n                </div>\r\n                <div className={\"Slider-row\"}>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Number of teams per draft:</p>\r\n                        <div>{teamCount}</div>\r\n                        <input type={\"range\"} min={6} max={14} step={2} value={teamCount}\r\n                               onChange={(event) => this.handleSliderChange('teamCount', event)}/>\r\n                    </div>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Your pick in the draft:</p>\r\n                        <div>{pickOrder}</div>\r\n                        <input type={\"range\"} min={1} max={teamCount} value={pickOrder}\r\n                                   onChange={(event) => this.handleSliderChange('pickOrder', event)}/>\r\n                        <form>\r\n                          <label>\r\n                            Randomize:\r\n                            <input type=\"checkbox\" checked={isRandom} onChange={this.determineIfRandom}/>\r\n                          </label>\r\n                        </form>\r\n                    </div>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Number of rounds per draft:</p>\r\n                        <div>{roundCount}</div>\r\n                        <input type={\"range\"} min={1} max={16} value={roundCount}\r\n                                   onChange={(event) => this.handleSliderChange('roundCount', event)}/>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Homepage } from \"./Homepage\";\r\nimport { Optimizer } from './optimizer/Optimizer'\r\nimport { Simulator } from \"./simulator/Simulator\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        if (window.location.pathname === '/home') {\r\n            return <Homepage/>\r\n        } else if (window.location.pathname === '/simulate') {\r\n            return <Simulator/>\r\n        } else if (window.location.pathname === '/optimize') {\r\n            return <Optimizer/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}