{"version":3,"sources":["icons/search.ico","icons/football.ico","icons/plus.ico","icons/minus.ico","icons/football2.svg","icons/cloudy.ico","icons/partlycloudy.ico","icons/rainy.ico","icons/snowy.ico","icons/stormy.ico","icons/sunny.ico","icons/up.ico","icons/down.ico","main/Homepage.js","main/optimizer/DfsGrid.tsx","main/optimizer/DfsReport.tsx","main/optimizer/DfsPlayerListBox.tsx","main/optimizer/Optimizer.js","jqxwidgets/react_jqxpopover.js","main/simulator/PlayerListBox.tsx","main/simulator/DraftResultsTable.tsx","main/simulator/Simulator.js","main/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Homepage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","onClick","window","location","href","origin","Component","cloudy","require","partlyCloudy","rainy","snowy","stormy","sunny","Player","props","forecast","player","Weather","toLowerCase","weatherImage","includes","react","Position","Team","style","fontWeight","Name","color","Status","Projected","Price","concat","toString","replace","Opp","display","alignItems","src","alt","height","details","onRemove","DfsGrid","backgroundColor","site","dfsLineup","map","playerIndex","DfsGrid_Player","removePlayer","pointSum","salarySum","DfsReport","reportingData","row","position","expected","actual","optimal","expected_v_actual","toFixed","actual_v_optimal","expected_v_optimal","plus","minus","isPlayerPool","onChange","DfsPlayerBox","borderCollapse","playerList","sort","b","index","filterList","length","DfsPlayerListBox_Player","playerFunction","onMove","Optimizer","_this","call","generateLineup","sport","slate","prevSport","state","setState","isLoading","isReporting","fetch","then","response","status","alert","json","lineupJson","ingestDfsLineup","lineup","clearLineup","data","playerPool","filterPlayers","event","text","target","filteredPool","players","filter","searchText","addToLineup","spotToReplace","_this$state","playerToAdd","spotsToReplace","lineupIndex","indexOf","splice","addToBlackList","_this$state2","removedPlayer","method","body","addToWhiteList","playerArray","_this$state3","fetchReportingData","weeks","reportJson","toggleWeek","selectedWeek","_this$state4","push","blackList","gridSection","_this2","_this$state5","weekArray","i","maxWeek","console","log","points","parseFloat","reduce","parseInt","football2","DfsReport_DfsReport","weekNumber","search","type","width","DfsPlayerListBox_DfsPlayerBox","DfsGrid_DfsGrid","Container","fluid","Navbar","bg","variant","Nav","Link","marginTop","JQXLite","JqxPopover","jqx","widgetId","generateID","componentSelector","id","options","manageAttributes","createComponent","properties","item","itemTwo","css","undefined","classes","split","addClass","template","html","jqxPopover","Error","resultToReturn","name","callbackFn","on","off","arg","children","React","up","down","Rank","isUserPlayer","flexDirection","PlayerListBox","PlayerListBox_Player","addPlayer","UserListBox","userRoundList","roundIndex","marginBottom","colSpan","textAlign","direction","movePlayer","DraftResultsTable","frequencyData","Round","Frequency","Simulator","fetchPlayersForSimulator","handleSliderChange","param","defineProperty","closeAbout","refs","about","close","url","pathname","closeInstructions","instructions","swapRankings","newSite","saveRankings","userPlayers","every","roundList","JSON","stringify","responseJson","loadRankings","userRanking","allPlayers","flat","allLoadedPlayers","_loop","userPlayerRank","findIndex","filteredPlayers","removedPlayerRank","originalPlayerNeighbor","find","clearPlayers","allUserPlayers","determineIfRandom","isRandom","checked","simulateDrafts","draftCancelled","isDrafting","_this$state6","teamCount","pickOrder","roundCount","playerNames","draftResults","generateDraftOutput","userFreqs","UserFrequencies","allFreqs","AllFrequencies","expectedTeam","ExpectedTeam","toggleFrequencyData","playerListBox","draftResultsTable","_this$state7","football","PlayerListBox_PlayerListBox","DraftResultsTable_DraftResultsTable","swapButtonText","swapButtonColor","react_jqxpopover_JqxPopover","ref","isModal","title","selector","float","padding","borderRadius","fontSize","PlayerListBox_UserListBox","borderStyle","min","max","step","App","Homepage_Homepage","Simulator_Simulator","Optimizer_Optimizer","Boolean","hostname","match","ReactDOM","render","src_main_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.b2671fe6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/search.04c89f3b.ico\";","module.exports = __webpack_public_path__ + \"media/football.c5005feb.ico\";","module.exports = __webpack_public_path__ + \"media/plus.220c44df.ico\";","module.exports = __webpack_public_path__ + \"media/minus.5edbe473.ico\";","module.exports = __webpack_public_path__ + \"media/football2.fac02615.svg\";","module.exports = __webpack_public_path__ + \"media/cloudy.340c3269.ico\";","module.exports = __webpack_public_path__ + \"media/partlycloudy.a5e52894.ico\";","module.exports = __webpack_public_path__ + \"media/rainy.dda0cf39.ico\";","module.exports = __webpack_public_path__ + \"media/snowy.203024ab.ico\";","module.exports = __webpack_public_path__ + \"media/stormy.ca70c957.ico\";","module.exports = __webpack_public_path__ + \"media/sunny.a306062d.ico\";","module.exports = __webpack_public_path__ + \"media/up.04732abf.ico\";","module.exports = __webpack_public_path__ + \"media/down.61889039.ico\";","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nexport class Homepage extends Component {\r\n\r\n    render() {\r\n        return (\r\n                <div className={'Home'}>\r\n                    <h1 className={'Home-header'}>Welcome to Draft Simulator!</h1>\r\n                    <h3 className={'Dfs-header'}>To start, click the link below:</h3>\r\n                    <div className={\"Home-buttons\"}>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/simulate'}}\r\n                            className={'Site-button'}>Simulator</button>\r\n                    </div>\r\n                    <h3 className={'Dfs-header'}>Or, check out our DFS Optimizer:</h3>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/optimize'}}\r\n                            className={'Dfs-button'}>DFS Optimizer</button>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/logout'}}\r\n                            className={'Logout-button'}>Log Out</button>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Position: string,\r\n    Team: string,\r\n    Name: string,\r\n    Status: string,\r\n    Projected: number,\r\n    Price: number,\r\n    Opp: string,\r\n    Weather: any\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    onRemove: () => void\r\n}\r\n\r\nconst cloudy = require(\"../../icons/cloudy.ico\") as any;\r\nconst partlyCloudy = require(\"../../icons/partlycloudy.ico\") as any;\r\nconst rainy = require(\"../../icons/rainy.ico\") as any;\r\nconst snowy = require(\"../../icons/snowy.ico\") as any;\r\nconst stormy = require(\"../../icons/stormy.ico\") as any;\r\nconst sunny = require(\"../../icons/sunny.ico\") as any;\r\n\r\nconst Player = (props: playerProps) => {\r\n    const forecast = (props.player.Weather.forecast) ? props.player.Weather.forecast.toLowerCase() : null;\r\n    const weatherImage = (props.player.Weather.forecast) ?\r\n        (forecast.includes('partly')) ? partlyCloudy :\r\n        (forecast.includes('cloud') || forecast.includes('fog')) ? cloudy :\r\n        (forecast.includes('storm') || forecast.includes('thunder')) ? stormy :\r\n        (forecast.includes('rain') || forecast.includes('shower')) ? rainy :\r\n        (forecast.includes('snow') || forecast.includes('flurr')) ? snowy :\r\n        (forecast.includes('sun') || forecast.includes('clear')) ? sunny : null\r\n        : null;\r\n\r\n    return (\r\n        <tr>\r\n            <td>{props.player.Position}</td>\r\n            <td>{props.player.Team}</td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\r\n                {props.player.Name} <b style={{color: 'red'}}>{props.player.Status}</b></td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\r\n                {props.player.Projected}</td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>\r\n                {props.player.Price && '$'.concat(props.player.Price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}</td>\r\n            <td>{props.player.Opp}</td>\r\n            <td style={{display: 'flex', alignItems: 'center'}}>\r\n                {props.player.Weather.forecast && <img src={weatherImage} alt={\"weather\"} style={{height: '4vmin'}}/>}\r\n                <p>{props.player.Weather.details}</p>\r\n            </td>\r\n            <td>\r\n                {props.player.Position && props.player.Name && <button onClick={props.onRemove} style={{fontWeight: 'bold'}}>X</button>}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport const DfsGrid = (props: {\r\n    dfsLineup: playerAttributes[],\r\n    removePlayer: (playerIndex: number) => void,\r\n    site: string,\r\n    pointSum: number\r\n    salarySum: number}) =>\r\n        <table className={'Dfs-grid'}>\r\n            <tr style={{backgroundColor: (props.site === 'fd') ? 'dodgerblue' : 'black'}}>\r\n                <th>Position</th>\r\n                <th>Team</th>\r\n                <th>Player</th>\r\n                <th>Projected</th>\r\n                <th>Price</th>\r\n                <th>Opp</th>\r\n                <th>Weather</th>\r\n                <th>Exclude</th>\r\n            </tr>\r\n            {props.dfsLineup.map(\r\n                (player, playerIndex) => (\r\n                    <Player player={player} onRemove={() => props.removePlayer(playerIndex)}/>\r\n                )\r\n            )}\r\n            <tr style={{fontWeight: 'bold'}}>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n                <td>Total</td>\r\n                <td>{props.pointSum}</td>\r\n                <td>\r\n                    {'$'.concat(props.salarySum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}\r\n                </td>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n            </tr>\r\n        </table>;\r\n","import * as React from 'react';\r\n\r\ninterface rowAttributes {\r\n    position: string,\r\n    expected: number,\r\n    actual: number,\r\n    optimal: number,\r\n    expected_v_actual: number,\r\n    actual_v_optimal: number,\r\n    expected_v_optimal: number\r\n}\r\n\r\nexport const DfsReport = (props: {\r\n    reportingData: rowAttributes[]}) =>\r\n    <table>\r\n        <tr>\r\n            <th>Position</th>\r\n            <th>Projected</th>\r\n            <th>Actual</th>\r\n            <th>Optimal</th>\r\n            <th>Expected vs Actual</th>\r\n            <th>Actual vs Optimal</th>\r\n            <th>Expected vs Optimal</th>\r\n        </tr>\r\n        {props.reportingData.map(\r\n            (row) => (\r\n                <tr style={{fontWeight: (row.position === 'Total') ? 'bold' : 'normal'}}>\r\n                    <td>{row.position}</td>\r\n                    <td>{row.expected}</td>\r\n                    <td>{row.actual}</td>\r\n                    <td>{row.optimal}</td>\r\n                    <td>{(100 * row.expected_v_actual).toFixed(2).toString().concat('%')}</td>\r\n                    <td>{(100 * row.actual_v_optimal).toFixed(2).toString().concat('%')}</td>\r\n                    <td>{(100 * row.expected_v_optimal).toFixed(2).toString().concat('%')}</td>\r\n                </tr>\r\n            )\r\n        )}\r\n    </table>;\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Position: string,\r\n    Team: string,\r\n    Name: string,\r\n    Status: string,\r\n    Projected: number,\r\n    Price: number,\r\n    Opp: string,\r\n    Weather: any\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    isPlayerPool: boolean,\r\n    onChange: () => void,\r\n    onMove: (direction: string) => void\r\n}\r\n\r\nconst plus = require(\"../../icons/plus.ico\") as any;\r\nconst minus = require(\"../../icons/minus.ico\") as any;\r\n\r\nconst Player = (props: playerProps) =>\r\n    <tr>\r\n        <td>\r\n            <tr style={{fontWeight: 'bold'}}>{props.player.Name}</tr>\r\n            <tr>{props.player.Team} {props.player.Position}</tr>\r\n        </td>\r\n        <td>{props.player.Opp}</td>\r\n        <td>{'$'.concat(props.player.Price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}</td>\r\n        <td>\r\n            <img src={(props.isPlayerPool) ? plus : minus} alt={\"add-or-remove\"} onClick={props.onChange} style={{height: '3vmin'}}/>\r\n        </td>\r\n    </tr>;\r\n\r\nexport const DfsPlayerBox = (props: {\r\n    playerList: playerAttributes[],\r\n    filterList: playerAttributes[],\r\n    playerFunction: (index: number) => void,\r\n    isPlayerPool: boolean}) =>\r\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\r\n            <tr style={{backgroundColor: 'gray'}}>\r\n                <th>Player</th>\r\n                <th>Opp</th>\r\n                <th>Salary</th>\r\n                <th>Add</th>\r\n            </tr>\r\n            {props.playerList.sort((a, b) => b.Price - a.Price).map(\r\n                (player, index) => {\r\n                    if (props.filterList.length === 0 || props.filterList.includes(player)) {\r\n                        return (\r\n                            <Player player={player}\r\n                                        isPlayerPool={props.isPlayerPool}\r\n                                        onChange={() => props.playerFunction(index)}\r\n                                        onMove={null}\r\n                            />\r\n                        )\r\n                    }\r\n                }\r\n            )}\r\n        </table>;\r\n","import React, { Component } from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap'\r\nimport { DfsGrid } from './DfsGrid.tsx';\r\nimport { DfsReport } from './DfsReport.tsx';\r\nimport { DfsPlayerBox } from './DfsPlayerListBox.tsx'\r\nimport football2 from '../../icons/football2.svg';\r\nimport search from \"../../icons/search.ico\";\r\n\r\nexport class Optimizer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isLoading: false, isReporting: false, sport: '', site: '', slate: '', lineup: [], playerPool: [],\r\n                      filteredPool: [], searchText: '', blackList: [], reportingData: {}, weeks: []};\r\n    }\r\n\r\n    generateLineup = (sport, site, slate) => {\r\n        let prevSport = this.state.sport;\r\n        this.setState({\r\n            isLoading: true,\r\n            isReporting: false,\r\n            sport: sport,\r\n            site: site,\r\n            slate: slate});\r\n        fetch(window.location.origin + '/optimize/generate/' + sport + '/' + site + '/' + slate)\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Failed to generate lineups.');\r\n                } else {\r\n                    response.json()\r\n                        .then((lineupJson) => {\r\n                            this.ingestDfsLineup(lineupJson, sport, prevSport);\r\n                        });\r\n                }\r\n            });\r\n    };\r\n\r\n    ingestDfsLineup = (lineupJson, sport, prevSport) => {\r\n        if (typeof lineupJson[0] === \"string\") {\r\n            this.setState({isLoading: false, sport: prevSport});\r\n            alert(lineupJson[0]);\r\n            return\r\n        }\r\n        let lineup = (typeof lineupJson[0] === \"string\") ? [] : lineupJson;\r\n        this.setState({\r\n            isLoading: false,\r\n            lineup: lineup});\r\n    };\r\n\r\n    clearLineup = (sport, site, slate) => {\r\n        if (!sport) {\r\n            alert('Please select a sport.');\r\n        } else if (!site || !slate) {\r\n            this.setState({sport: sport, site: site, slate: slate});\r\n        } else {\r\n            this.setState({\r\n                isReporting: false,\r\n                sport: sport,\r\n                site: site,\r\n                slate: slate});\r\n            fetch(window.location.origin + '/optimize/clear/' + sport + '/' + site + '/' + slate)\r\n                .then(response => {\r\n                    if (response.status !== 200) {\r\n                        alert('An error occurred.');\r\n                    } else {\r\n                        response.json()\r\n                            .then((data) => {\r\n                                this.setState({\r\n                                    playerPool: data.playerPool,\r\n                                    lineup: data.lineup});\r\n                            });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    filterPlayers = (event) => {\r\n        let text = event.target.value.toLowerCase();\r\n        let players = this.state.players;\r\n        let filteredPool = players.filter(\r\n            (player) =>\r\n                player.Name.toLowerCase().includes(text)\r\n                || player.Position.toLowerCase().includes(text)\r\n                || player.Team.toLowerCase().includes(text)\r\n        );\r\n        this.setState({\r\n            searchText: text,\r\n            filteredPool: filteredPool});\r\n    };\r\n\r\n    addToLineup = (playerIndex) => {\r\n        let {playerPool, lineup} = this.state;\r\n        let playerToAdd = playerPool[playerIndex];\r\n        let spotToReplace;\r\n        let spotsToReplace = lineup.filter(\r\n            (player) =>\r\n                (playerToAdd.Position === player.Position && !player.Name)\r\n                || (['RB', 'WR', 'TE'].includes(playerToAdd.Position) && player.Position === 'FLEX' && !player.Name)\r\n        );\r\n        if (spotsToReplace.length > 0) {\r\n            spotToReplace = spotsToReplace[0];\r\n            let lineupIndex = lineup.indexOf(spotToReplace);\r\n            lineup[lineupIndex] = playerToAdd;\r\n            playerPool.splice(playerIndex, 1);\r\n            this.setState({\r\n                playerPool: playerPool,\r\n                lineup: lineup});\r\n        } else {\r\n            alert('Not enough room in lineup to add player.');\r\n        }\r\n    };\r\n\r\n    addToBlackList = (lineupIndex) => {\r\n        let {sport, site, slate, lineup} = this.state;\r\n        let removedPlayer = lineup[lineupIndex].Name;\r\n        this.setState({isLoading: true});\r\n        fetch(window.location.origin + '/optimize/blacklist/' + sport + '/' + site + '/' + slate, {\r\n            method: 'POST',\r\n            body: removedPlayer\r\n        }).then(response => {\r\n            if (response.status !== 200) {\r\n                alert('Error removing player.');\r\n            } else {\r\n                response.json()\r\n                    .then((lineupJson) => {\r\n                        this.ingestDfsLineup(lineupJson, sport, sport, site, slate);\r\n                        let alertString = (site === 'fd') ?\r\n                            ' from your Fanduel lineup.' : ' from your Draftkings lineup.';\r\n                        alert('You have removed ' + removedPlayer + alertString);\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    addToWhiteList = (playerArray) => {\r\n        let {sport, site, slate} = this.state;\r\n        fetch(window.location.origin + '/optimize/whitelist/' + sport + '/' + site + '/' + slate, {\r\n            method: 'POST',\r\n            body: playerArray\r\n        }).then(response => {\r\n            if (response.status !== 200) {\r\n                alert('Error removing player.');\r\n            } else {\r\n                response.json()\r\n                    .then((lineupJson) => {\r\n                        this.ingestDfsLineup(lineupJson, sport, sport, site, slate);\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    fetchReportingData = (sport, slate, site, weeks) => {\r\n        sport = 'nfl';\r\n        if (!sport) {\r\n            alert('Please select a sport.');\r\n        } else {\r\n            fetch(window.location.origin + '/optimize/reporting/' + sport + '/' + site + '/' + slate, {\r\n                method: 'POST',\r\n                body: weeks\r\n            }).then(response => {\r\n                    if (response.status !== 200) {\r\n                        alert('Failed to generate report.');\r\n                    } else {\r\n                        response.json()\r\n                            .then((reportJson) => {\r\n                                this.setState({\r\n                                    isReporting: true,\r\n                                    weeks: weeks,\r\n                                    reportingData: reportJson});\r\n                            });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    toggleWeek = (selectedWeek) => {\r\n        let {sport, slate, site, weeks} = this.state;\r\n        if (weeks.includes(selectedWeek)) {\r\n            weeks.splice(weeks.indexOf(selectedWeek), 1);\r\n        } else {\r\n            weeks.push(selectedWeek);\r\n        }\r\n        this.fetchReportingData(sport, slate, site, weeks);\r\n        return weeks\r\n    };\r\n\r\n    render() {\r\n        const {isLoading, isReporting, sport, site, slate, lineup, playerPool, filteredPool, searchText, blackList,\r\n            reportingData, weeks} = this.state;\r\n\r\n        let gridSection;\r\n        let weekArray = [];\r\n        for (let i = 1; i <= reportingData.maxWeek; i++) {\r\n            weekArray.push(i);\r\n        }\r\n\r\n        console.log(lineup);\r\n        const points = lineup.map((player) => ((player.Projected) ? parseFloat(player.Projected) : 0));\r\n        const pointSum = points.reduce((a,b) => a + b, 0);\r\n        console.log(points);\r\n        console.log(pointSum);\r\n\r\n        const salarySum = lineup.map((player) => ((player.Price) ? parseInt(player.Price) : 0)).reduce((a,b) => a + b, 0);\r\n        console.log(salarySum);\r\n\r\n        if (isLoading) {\r\n            gridSection =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Optimizing-text\"}>Optimizing . . .</p></div>\r\n                    <div><img src={football2} className={\"App-logo2\"} alt=\"football2\"/></div>\r\n                </div>;\r\n        } else if (isReporting) {\r\n            gridSection =\r\n                <div className={\"Dfs-grid-section\"}>\r\n                    <div>\r\n                        <DfsReport reportingData={reportingData.data}/>\r\n                    </div>\r\n                    <div>\r\n                        <div className={'Dfs-sport'}>\r\n                            <h3>Week</h3>\r\n                            <div className={\"Dfs-grid-section\"}>\r\n                            {weekArray.map(\r\n                                (weekNumber) => (\r\n                                    <button style={{backgroundColor: (weeks.includes(weekNumber)) ? 'dodgerblue' : 'white'}}\r\n                                            onClick={() => this.toggleWeek(weekNumber)}>{weekNumber}</button>\r\n                                )\r\n                            )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        } else {\r\n            gridSection =\r\n                <div className={\"Dfs-grid-section\"}>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <div>\r\n                            {filteredPool.length === 0 &&\r\n                                <img src={search} style={{height: '3vmin', position: 'absolute'}}\r\n                                     alt=\"search\"/>}\r\n                            <input type=\"text\" style={{height: '25px', width: '90%'}}\r\n                                   value={searchText}\r\n                                   onClick={this.filterPlayers}\r\n                                   onChange={this.filterPlayers}>{null}</input>\r\n                        </div>\r\n                        <DfsPlayerBox playerList={playerPool} filterList={filteredPool}\r\n                                      playerFunction={this.addToLineup} isPlayerPool={true}/>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className={\"Dfs-header\"}>{(site === 'fd') ? 'Fanduel' : 'Draftkings'}</h2>\r\n                        <DfsGrid dfsLineup={lineup} removePlayer={this.addToBlackList} site={site}\r\n                                 pointSum={pointSum} salarySum={salarySum}/>\r\n                    </div>\r\n                    {/*<DfsPlayerBox playerList={blackList} playerFunction={} isPlayerPool={false}/>*/}\r\n                </div>;\r\n        }\r\n\r\n        return (\r\n            <Container fluid={true}>\r\n                <Navbar bg=\"primary\" variant=\"dark\">\r\n                    <Nav className=\"Nav-bar\">\r\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/simulate\">Back to Draft Simulator</Nav.Link>\r\n                        <Nav.Link href=\"/logout\">Log Out</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <h1 className={\"App-header\"}>DFS Optimizer</h1>\r\n                <div className={\"Dfs-sport\"}>\r\n                    <h3>Choose a sport:</h3>\r\n                    <div style={{display: 'flex'}}>\r\n                        <button style={{backgroundColor: (sport === 'mlb') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup('mlb', site, 'main')}>MLB</button>\r\n                        <button style={{backgroundColor: (sport === 'nfl') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup('nfl', site, slate)}>NFL</button>\r\n                        <button style={{backgroundColor: (sport === 'nba') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup('nba', site, 'main')}>NBA</button>\r\n                    </div>\r\n                    {sport && <h3>Choose a game slate:</h3>}\r\n                    {sport &&\r\n                        <div style={{display: 'flex'}}>\r\n                            <button style={{backgroundColor: (slate === 'thurs') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'thurs')}>Thurs only</button>\r\n                            <button style={{backgroundColor: (slate === 'thurs-mon') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'thurs-mon')}>Thurs - Mon</button>\r\n                            <button style={{backgroundColor: (slate === 'main') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'main')}>Sun (Main)</button>\r\n                            <button style={{backgroundColor: (slate === 'sun-mon') ? 'dodgerblue' : 'white'}}\r\n                                    onClick={() => this.clearLineup(sport, site, 'sun-mon')}>Sun - Mon</button>\r\n                        </div>}\r\n                    {sport && <h3>Choose a site:</h3>}\r\n                    {sport &&\r\n                        <div style={{display: 'flex'}}>\r\n                        <button style={{backgroundColor: (site === 'fd') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup(sport, 'fd', slate)}>Fanduel</button>\r\n                        <button style={{backgroundColor: (site === 'dk') ? 'dodgerblue' : 'white'}}\r\n                                onClick={() => this.clearLineup(sport, 'dk', slate)}>Draftkings</button>\r\n                        </div>}\r\n                    {sport && slate && site && <button style={{marginTop: '10px'}}\r\n                                      onClick={() => this.generateLineup(sport, site, slate)}>Optimize Lineup</button>}\r\n                    {sport && slate && site && <button style={{marginTop: '10px'}}\r\n                                      onClick={() => this.clearLineup(sport, site, slate)}>Clear Lineup</button>}\r\n                    {(sport === 'nfl' && slate && site) && <button style={{marginTop: '10px'}}\r\n                                      onClick={() =>\r\n                                          this.fetchReportingData(sport, slate, site, weekArray)}>Generate Report</button>}\r\n                </div>\r\n                {sport && slate && site && gridSection}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","/*\r\njQWidgets v7.1.0 (2019-Feb)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\r\n/* eslint-disable */\r\n\r\nimport 'jqwidgets-framework/jqwidgets/styles/jqx.base.css';\r\nimport 'jqwidgets-framework/jqwidgets/jqxcore.js';\r\nimport 'jqwidgets-framework/jqwidgets/jqxpopover.js';\r\n\r\nimport React from 'react';\r\n\r\nconst JQXLite = window.JQXLite;\r\n\r\nexport const jqx = window.jqx;\r\n\r\nexport default class JqxPopover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const widgetId = 'jqxPopover' + JQXLite.generateID();\r\n        this.componentSelector = '#' + widgetId;\r\n        this.state = { id: widgetId };\r\n    };\r\n    componentDidMount() {\r\n        const options = this.manageAttributes();\r\n        this.createComponent(options);\r\n    };\r\n    manageAttributes() {\r\n        const properties = ['arrowOffsetValue','animationOpenDelay','animationCloseDelay','autoClose','animationType','height','initContent','isModal','offset','position','rtl','selector','showArrow','showCloseButton','width','title','theme'];\r\n        let options = {};\r\n        for(let item in this.props) {\r\n            if(item === 'settings') {\r\n                for(let itemTwo in this.props[item]) {\r\n                    options[itemTwo] = this.props[item][itemTwo];\r\n                }\r\n            } else {\r\n                if(properties.indexOf(item) !== -1) {\r\n                      options[item] = this.props[item];\r\n                }\r\n            }\r\n        }\r\n        return options;\r\n    };\r\n    createComponent(options) {\r\n        if(!this.style) {\r\n            for (let style in this.props.style) {\r\n                JQXLite(this.componentSelector).css(style, this.props.style[style]);\r\n            }\r\n        }\r\n        if(this.props.className !== undefined) {\r\n            const classes = this.props.className.split(' ');\r\n            for (let i = 0; i < classes.length; i++ ) {\r\n                JQXLite(this.componentSelector).addClass(classes[i]);\r\n            }\r\n        }\r\n        if(!this.template) {\r\n            JQXLite(this.componentSelector).html(this.props.template);\r\n        }\r\n        JQXLite(this.componentSelector).jqxPopover(options);\r\n    };\r\n    setOptions(options) {\r\n        JQXLite(this.componentSelector).jqxPopover('setOptions', options);\r\n    };\r\n    getOptions() {\r\n        if(arguments.length === 0) {\r\n            throw Error('At least one argument expected in getOptions()!');\r\n        }\r\n        let resultToReturn = {};\r\n        for(let i = 0; i < arguments.length; i++) {\r\n            resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxPopover(arguments[i]);\r\n        }\r\n        return resultToReturn;\r\n    };\r\n    on(name,callbackFn) {\r\n        JQXLite(this.componentSelector).on(name,callbackFn);\r\n    };\r\n    off(name) {\r\n        JQXLite(this.componentSelector).off(name);\r\n    };\r\n    arrowOffsetValue(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue');\r\n        }\r\n    };\r\n    animationOpenDelay(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationOpenDelay', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationOpenDelay');\r\n        }\r\n    };\r\n    animationCloseDelay(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationCloseDelay', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationCloseDelay');\r\n        }\r\n    };\r\n    autoClose(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('autoClose', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('autoClose');\r\n        }\r\n    };\r\n    animationType(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationType', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationType');\r\n        }\r\n    };\r\n    height(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('height', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('height');\r\n        }\r\n    };\r\n    initContent(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('initContent', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('initContent');\r\n        }\r\n    };\r\n    isModal(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('isModal', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('isModal');\r\n        }\r\n    };\r\n    offset(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('offset', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('offset');\r\n        }\r\n    };\r\n    position(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('position', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('position');\r\n        }\r\n    };\r\n    rtl(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('rtl', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('rtl');\r\n        }\r\n    };\r\n    selector(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('selector', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('selector');\r\n        }\r\n    };\r\n    showArrow(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('showArrow', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('showArrow');\r\n        }\r\n    };\r\n    showCloseButton(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('showCloseButton', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('showCloseButton');\r\n        }\r\n    };\r\n    width(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('width', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('width');\r\n        }\r\n    };\r\n    title(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('title', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('title');\r\n        }\r\n    };\r\n    theme(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('theme', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('theme');\r\n        }\r\n    };\r\n    close() {\r\n        JQXLite(this.componentSelector).jqxPopover('close');\r\n    };\r\n    destroy() {\r\n        JQXLite(this.componentSelector).jqxPopover('destroy');\r\n    };\r\n    open() {\r\n        JQXLite(this.componentSelector).jqxPopover('open');\r\n    };\r\n    render() {\r\n        return (\r\n            <div id={this.state.id}>{this.props.value}{this.props.children}</div>\r\n        )\r\n    };\r\n};\r\n\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Rank: number,\r\n    Name: string,\r\n    Position: string,\r\n    Team: string,\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    isUserPlayer: boolean,\r\n    onChange: () => void,\r\n    onMove: (direction: string) => void\r\n}\r\n\r\nconst plus = require(\"../../icons/plus.ico\") as any;\r\nconst minus = require(\"../../icons/minus.ico\") as any;\r\nconst up = require(\"../../icons/up.ico\") as any;\r\nconst down = require(\"../../icons/down.ico\") as any;\r\n\r\nconst Player = (props: playerProps) =>\r\n    <tr>\r\n        <td>{props.player.Rank}</td>\r\n        <td>\r\n            <tr style={{fontWeight: 'bold'}}>{props.player.Name}</tr>\r\n            <tr>{props.player.Team} {props.player.Position}</tr>\r\n        </td>\r\n        <td>\r\n            <img src={(props.isUserPlayer) ? minus : plus} alt={\"add-or-remove\"} onClick={props.onChange} style={{height: '3vmin'}}/>\r\n        </td>\r\n        {props.isUserPlayer && (\r\n            <td style={{display: 'flex', flexDirection: 'column'}}>\r\n                <img src={up} alt={\"up\"} onClick={() => props.onMove('up')} style={{height: '3vmin'}}/>\r\n                <img src={down} alt={\"down\"} onClick={() => props.onMove('down')} style={{height: '3vmin'}}/>\r\n            </td>\r\n            )\r\n        }\r\n    </tr>;\r\n\r\nexport const PlayerListBox = (props: {\r\n    playerList: playerAttributes[],\r\n    filterList: playerAttributes[],\r\n    addPlayer: (index: number) => void }) =>\r\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\r\n            {props.playerList.map(\r\n                (player, index) => {\r\n                    if (!props.filterList || props.filterList.includes(player)) {\r\n                        return (\r\n                            <Player player={player}\r\n                                        isUserPlayer={false}\r\n                                        onChange={() => props.addPlayer(index)}\r\n                                        onMove={null}\r\n                            />\r\n                        )\r\n                    }\r\n                }\r\n            )}\r\n        </table>;\r\n\r\nexport const UserListBox = (props: {\r\n    userRoundList: [playerAttributes[]],\r\n    removePlayer: (roundIndex: number, index: number) => void,\r\n    movePlayer: (roundIndex: number, index: number, direction: string) => void}) =>\r\n        props.userRoundList.map(\r\n            (playerList, roundIndex) => {\r\n                return (\r\n                    <table style={{borderCollapse: 'collapse', marginBottom: '5vmin'}} className={'Draft-grid'}>\r\n                        <th colSpan={4} style={{textAlign: 'center'}}>{'Round ' + (roundIndex + 1)}</th>\r\n                        {playerList.map(\r\n                            (player, index) => (\r\n                                <Player player={player}\r\n                                        isUserPlayer={true}\r\n                                        onChange={() => props.removePlayer(roundIndex, index)}\r\n                                        onMove={(direction) => props.movePlayer(roundIndex, index, direction)}\r\n                                />\r\n                            )\r\n                        )}\r\n                    </table>\r\n                )\r\n            });\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Name: string,\r\n    Position: string,\r\n    Team: string,\r\n    Round: number,\r\n    Frequency: string\r\n}\r\n\r\nexport const DraftResultsTable = (props: {\r\n    frequencyData: playerAttributes[]}) =>\r\n    <table>\r\n        <tr>\r\n            <th>Player</th>\r\n            <th>Round</th>\r\n            <th>Draft Frequency</th>\r\n        </tr>\r\n        {props.frequencyData.map(\r\n            (player) => (\r\n                <tr>\r\n                    <td>\r\n                        <tr style={{fontWeight: 'bold'}}>{player.Name}</tr>\r\n                        <tr>{player.Team} {player.Position}</tr>\r\n                    </td>\r\n                    <td>{player.Round}</td>\r\n                    <td>{player.Frequency}</td>\r\n                </tr>\r\n            )\r\n        )}\r\n    </table>;","import React, {Component} from 'react'\r\nimport { Container, Nav, Navbar } from 'react-bootstrap'\r\nimport '../App.css';\r\nimport JqxPopover from '../../jqxwidgets/react_jqxpopover'\r\nimport { PlayerListBox, UserListBox } from \"./PlayerListBox.tsx\"\r\nimport { DraftResultsTable } from \"./DraftResultsTable.tsx\";\r\nimport football from '../../icons/football.ico'\r\nimport search from '../../icons/search.ico'\r\n\r\nexport class Simulator extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isLoading: true, players: [], searchText: '', filteredPlayers: null, site: 'espn',\r\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\r\n            teamCount: 10, pickOrder: 5, roundCount: 16, isDrafting: false, isRandom: false,\r\n            allFreqs: [], userFreqs: [], expectedTeam: [], frequencyData: []};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPlayersForSimulator(this.state.site);\r\n    }\r\n\r\n    fetchPlayersForSimulator = (site) => {\r\n        this.setState({isLoading: true});\r\n        fetch(window.location.origin + '/' + site + '-players')\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Could not load players.');\r\n                } else {\r\n                    response.json()\r\n                        .then((players) => {\r\n                            if (typeof players[0] === \"string\") {\r\n                                this.setState({isLoading: false});\r\n                                alert(players[0]);\r\n                            } else {\r\n                                this.setState({\r\n                                    isLoading: false,\r\n                                    players: players,\r\n                                    site: site\r\n                                });\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n    };\r\n\r\n    handleSliderChange = (param, event) => {\r\n        this.setState({[param]: event.target.value})\r\n    };\r\n\r\n    closeAbout = () => {\r\n        this.refs.about.close();\r\n        let url = window.location.pathname.split('#');\r\n        window.location.href = window.location.origin + url[0].toString() + '#';\r\n    };\r\n\r\n    closeInstructions = () => {\r\n        this.refs.instructions.close();\r\n        let url = window.location.pathname.split('#');\r\n        window.location.href = window.location.origin + url[0].toString() + '#';\r\n    };\r\n\r\n    swapRankings = () => {\r\n        let newSite = (this.state.site === 'espn') ? 'yahoo' : 'espn';\r\n        this.fetchPlayersForSimulator(newSite);\r\n    };\r\n\r\n    saveRankings = () => {\r\n        let {userPlayers, site} = this.state;\r\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\r\n            alert('Please rank at least one player before saving.');\r\n        } else {\r\n            fetch(window.location.origin + '/save-ranking/' + site, {\r\n                method: 'POST',\r\n                body: JSON.stringify(userPlayers)\r\n            }).then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('User ranking unable to be saved.');\r\n                } else {\r\n                    response.json()\r\n                        .then((responseJson) => {\r\n                            alert(responseJson[0])\r\n                        })\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    loadRankings = () => {\r\n        let site = this.state.site;\r\n        fetch(window.location.origin + '/load-ranking/' + site)\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Could not load user ranking data.');\r\n                }  else {\r\n                    response.json()\r\n                        .then((userRanking) => {\r\n                            if (typeof userRanking[0] === \"string\") {\r\n                                alert(userRanking[0]);\r\n                            } else {\r\n                                let {players, userPlayers} = this.state;\r\n                                let allPlayers = players.concat(userPlayers.flat());\r\n                                players = allPlayers.sort((a, b) => a.Rank - b.Rank);\r\n                                let allLoadedPlayers = userRanking.flat();\r\n                                for (let i = 0; i < allLoadedPlayers.length; i++) {\r\n                                    let userPlayerRank = allLoadedPlayers[i].Rank;\r\n                                    let playerIndex = players.findIndex(\r\n                                        (player) => player.Rank === userPlayerRank);\r\n                                    players.splice(playerIndex, 1);\r\n                                }\r\n                                this.setState({\r\n                                    players: players,\r\n                                    userPlayers: userRanking,\r\n                                    filteredPlayers: null\r\n                                })\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n    };\r\n\r\n    filterPlayers = (event) => {\r\n        let text = event.target.value.toLowerCase();\r\n        let players = this.state.players;\r\n        let filteredPlayers = players.filter(\r\n            (player) =>\r\n                player.Name.toLowerCase().includes(text)\r\n                || player.Position.toLowerCase().includes(text)\r\n                || player.Team.toLowerCase().includes(text)\r\n        );\r\n        this.setState({\r\n            searchText: text,\r\n            filteredPlayers: filteredPlayers});\r\n    };\r\n\r\n    addPlayer = (playerIndex) => {\r\n        let {players, userPlayers} = this.state;\r\n        let playerToAdd = players[playerIndex];\r\n        players.splice(playerIndex, 1);\r\n        userPlayers[0].push(playerToAdd);\r\n        this.setState({\r\n            players: players,\r\n            userPlayers: userPlayers,\r\n            filteredPlayers: null,\r\n            searchText: ''\r\n        });\r\n    };\r\n\r\n    removePlayer = (roundIndex, playerIndex) => {\r\n        let {players, userPlayers} = this.state;\r\n        let roundList = userPlayers[roundIndex];\r\n        let removedPlayer = roundList[playerIndex];\r\n        let removedPlayerRank = removedPlayer.Rank;\r\n        const originalPlayerNeighbor = players.find((player) => player.Rank > removedPlayerRank);\r\n        players.splice(players.indexOf(originalPlayerNeighbor), 0, removedPlayer);\r\n        roundList.splice(playerIndex, 1);\r\n        this.setState({\r\n            players: players,\r\n            userPlayers: userPlayers\r\n        });\r\n    };\r\n\r\n    clearPlayers = () => {\r\n        let {players, userPlayers} = this.state;\r\n        let allUserPlayers = userPlayers.flat();\r\n        let allPlayers = players.concat(allUserPlayers);\r\n        this.setState({\r\n            players: allPlayers.sort((a, b) => a.Rank - b.Rank),\r\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\r\n            filteredPlayers: null\r\n        });\r\n    };\r\n\r\n    movePlayer = (roundIndex, playerIndex, direction) => {\r\n        let userPlayers = this.state.userPlayers;\r\n        let roundList = userPlayers[roundIndex];\r\n        let player = roundList[playerIndex];\r\n        userPlayers[roundIndex].splice(playerIndex, 1);\r\n        if (direction === 'up') {\r\n            if (playerIndex > 0) {\r\n                userPlayers[roundIndex].splice(playerIndex - 1, 0, player);\r\n            } else if (roundIndex > 0) {\r\n                userPlayers[roundIndex - 1].push(player);\r\n            } else {\r\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\r\n            }\r\n        } else if (direction === 'down') {\r\n            if (playerIndex < roundList.length) {\r\n                roundList.splice(playerIndex + 1, 0, player);\r\n            } else if (roundIndex < userPlayers.length - 1) {\r\n                userPlayers[roundIndex + 1].splice(0, 0, player);\r\n            } else {\r\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\r\n            }\r\n        }\r\n        this.setState({userPlayers: userPlayers});\r\n    };\r\n\r\n    determineIfRandom = (event) => {\r\n        this.setState({isRandom: event.target.checked})\r\n    };\r\n\r\n    simulateDrafts = (draftCancelled) => {\r\n        if (draftCancelled) {\r\n            this.setState({isDrafting: false});\r\n            return\r\n        }\r\n        let {userPlayers, teamCount, pickOrder, roundCount, site} = this.state;\r\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\r\n            alert('Please select at least one player to draft.');\r\n        } else {\r\n            let playerNames = userPlayers.map((roundList) => roundList.map((player) => player.Name));\r\n            this.setState({isDrafting: true});\r\n            fetch(window.location.origin + '/draft-results', {\r\n                method: 'POST',\r\n                body: JSON.stringify(playerNames) + '|' + teamCount + '|' + pickOrder + '|' + roundCount + '|' + site\r\n            }).then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Error loading draft results.');\r\n                } else {\r\n                    response.json()\r\n                        .then((draftResults) => {\r\n                            if (typeof draftResults[0] == \"string\") {\r\n                                alert(draftResults[0]);\r\n                            } else {\r\n                                this.generateDraftOutput(draftResults);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    generateDraftOutput = (draftResults) => {\r\n        if (draftResults === ['Draft error!']) {\r\n            alert('No players were drafted. :( \\nSomething went wrong . . .');\r\n        }\r\n        this.setState({\r\n            isDrafting: false,\r\n            userFreqs: draftResults.UserFrequencies,\r\n            allFreqs: draftResults.AllFrequencies,\r\n            expectedTeam: draftResults.ExpectedTeam,\r\n            frequencyData: draftResults.UserFrequencies\r\n        });\r\n    };\r\n\r\n    toggleFrequencyData = (frequencyData) => {\r\n        this.setState({frequencyData: frequencyData});\r\n    };\r\n\r\n    render() {\r\n        const {isLoading, players, filteredPlayers, site,\r\n            userPlayers, teamCount, pickOrder, roundCount, isDrafting, isRandom,\r\n            userFreqs, allFreqs, expectedTeam, frequencyData} = this.state;\r\n        let playerListBox, draftResultsTable;\r\n\r\n        if (isLoading) {\r\n            playerListBox =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Loading-text\"}>Loading players . . .</p></div>\r\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\r\n                </div>;\r\n        } else {\r\n            playerListBox =\r\n                <PlayerListBox playerList={players} filterList={filteredPlayers} addPlayer={this.addPlayer}/>;\r\n        }\r\n        if (isDrafting) {\r\n            draftResultsTable =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Loading-text\"}>Drafting . . .</p></div>\r\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\r\n                    <div>\r\n                        <button onClick={() => this.simulateDrafts(true)}\r\n                                className={\"Cancel-draft-button\"}>Cancel</button>\r\n                    </div>\r\n                </div>;\r\n        } else {\r\n            draftResultsTable = <DraftResultsTable frequencyData={frequencyData}/>;\r\n        }\r\n\r\n        const swapButtonText = (site === 'espn') ? 'Switch to Yahoo' : 'Switch to ESPN';\r\n        const swapButtonColor = (site === 'espn') ? '#6C00B3' : '#CE0000';\r\n\r\n        return (\r\n            <Container fluid={true}>\r\n                <Navbar bg=\"primary\" variant=\"dark\">\r\n                    <Nav className=\"Nav-bar\">\r\n                      <Nav.Link href=\"/home\">Home</Nav.Link>\r\n                      <Nav.Link href=\"#about\">About</Nav.Link>\r\n                      <Nav.Link href=\"#instructions\">Instructions</Nav.Link>\r\n                      <Nav.Link href=\"/optimize\">DFS Optimizer</Nav.Link>\r\n                        <Nav.Link href=\"/logout\">Log Out</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <div className={\"Info-buttons\"}>\r\n                    <JqxPopover ref='about' isModal={true} width={310}\r\n                        position={'bottom'} title={'About Draft Simulator'} selector={'a[href$=\"#about\"]'}>\r\n                        <p>Draft Simulator is a fantasy football draft preparation tool.</p>\r\n                        <p>More often than not, others in your league will only draft among the \"top available\r\n                            players\" in each round, which are determined by ESPN's preseason rankings.</p>\r\n                        <p>However, Draft Simulator allows you to create and refine your own personal rankings that\r\n                            you can bring to your draft to get the team you've always dreamed of.</p>\r\n                        <button onClick={this.closeAbout}\r\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\r\n                            Got it!</button>\r\n                    </JqxPopover>\r\n                    <JqxPopover ref='instructions' isModal={true} width={310}\r\n                        position={'bottom'} title={'Instructions'} selector={'a[href$=\"#instructions\"]'}>\r\n                        <ol>\r\n                            <li>Search for and select players from the player list. These should be players you'd\r\n                                feel strongly about drafting.</li>\r\n                            <li>Click \"Add\" to move them to your preferred list.</li>\r\n                            <li>Drag and drop your players in order of overall preference.</li>\r\n                            <li>Adjust the sliders to your desired specifications, then click \"Draft\".</li>\r\n                            <li>See how often you were able to draft each player under the \"Draft Frequency\"\r\n                                tab.</li>\r\n                            <li>The \"All Players\" tab shows the draft frequency of all players taken, not just your\r\n                                preferred players.</li>\r\n                            <li>The \"Expected Team\" tab shows your most likely fantasy team given the\r\n                                simulations.</li>\r\n                        </ol>\r\n                        <button onClick={this.closeInstructions}\r\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\r\n                            Let's draft!</button>\r\n                    </JqxPopover>\r\n                </div>\r\n                <h1 className={\"App-header\"}>Draft Simulator</h1>\r\n                <div className={\"Buttons-and-boxes\"}>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <div>\r\n                            {!filteredPlayers && <img src={search} style={{height: '3vmin', position: 'absolute'}}\r\n                                                      alt=\"search\"/>}\r\n                            <input type=\"text\" style={{height: '25px', width: '90%'}}\r\n                                   value={this.state.searchText}\r\n                                   onClick={this.filterPlayers}\r\n                                   onChange={this.filterPlayers}>{null}</input>\r\n                        </div>\r\n                        {playerListBox}\r\n                    </div>\r\n                    <div className={\"Player-buttons\"}>\r\n                        <button onClick={this.clearPlayers} style={{fontSize: 16}}\r\n                                className={\"Clear-button\"}>Clear</button>\r\n                        <button id='rankingButton' onClick={this.loadRankings}\r\n                                className={\"Ranking-button\"}>Load Saved Rankings</button>\r\n                        <button id='swapButton' style={{backgroundColor: swapButtonColor}}\r\n                                onClick={this.swapRankings} className={\"Swap-button\"}>{swapButtonText}</button>\r\n                    </div>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <UserListBox userRoundList={userPlayers} removePlayer={this.removePlayer}\r\n                                     movePlayer={this.movePlayer} className={\"Player-list-box\"}/>\r\n                    </div>\r\n                    <div className={\"Draft-buttons\"}>\r\n                        <button onClick={this.saveRankings} style={{fontSize: 16}}\r\n                                className={\"Ranking-button\"}>Save Player Rankings</button>\r\n                        <button onClick={() => this.simulateDrafts(false)}\r\n                                style={{fontSize: 16}} className={\"Draft-button\"}>Draft!</button>\r\n                    </div>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <tr>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(userFreqs)}\r\n                                style={{borderStyle: (frequencyData === userFreqs) ?\r\n                                        'inset' : 'outset'}}>Your Players</button>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(allFreqs)}\r\n                                style={{borderStyle: (frequencyData === allFreqs) ?\r\n                                        'inset' : 'outset'}}>All Players</button>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(expectedTeam)}\r\n                                style={{borderStyle: (frequencyData === expectedTeam) ?\r\n                                        'inset' : 'outset'}}>Expected Team</button>\r\n                        </tr>\r\n                        {draftResultsTable}\r\n                    </div>\r\n                </div>\r\n                <div className={\"Slider-row\"}>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Number of teams per draft:</p>\r\n                        <div>{teamCount}</div>\r\n                        <input type={\"range\"} min={6} max={14} step={2} value={teamCount}\r\n                               onChange={(event) => this.handleSliderChange('teamCount', event)}/>\r\n                    </div>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Your pick in the draft:</p>\r\n                        <div>{pickOrder}</div>\r\n                        <input type={\"range\"} min={1} max={teamCount} value={pickOrder}\r\n                                   onChange={(event) => this.handleSliderChange('pickOrder', event)}/>\r\n                        <form>\r\n                          <label>\r\n                            Randomize:\r\n                            <input type=\"checkbox\" checked={isRandom} onChange={this.determineIfRandom}/>\r\n                          </label>\r\n                        </form>\r\n                    </div>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Number of rounds per draft:</p>\r\n                        <div>{roundCount}</div>\r\n                        <input type={\"range\"} min={1} max={16} value={roundCount}\r\n                                   onChange={(event) => this.handleSliderChange('roundCount', event)}/>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Homepage } from \"./Homepage\";\r\nimport { Optimizer } from './optimizer/Optimizer'\r\nimport { Simulator } from \"./simulator/Simulator\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        if (window.location.pathname === '/home') {\r\n            return <Homepage/>\r\n        } else if (window.location.pathname === '/simulate') {\r\n            return <Simulator/>\r\n        } else if (window.location.pathname === '/optimize') {\r\n            return <Optimizer/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}