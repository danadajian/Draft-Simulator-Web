{"version":3,"sources":["icons/football.ico","icons/football2.svg","icons/search.ico","icons/cloudy.ico","icons/partlycloudy.ico","icons/rainy.ico","icons/snowy.ico","icons/stormy.ico","icons/sunny.ico","icons/plus.ico","icons/minus.ico","icons/up.ico","icons/down.ico","Homepage.js","DfsGrid.tsx","Optimizer.js","jqxwidgets/react_jqxpopover.js","PlayerListBox.tsx","DraftResultsTable.tsx","Simulator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Homepage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","onClick","window","location","href","origin","Component","cloudy","require","partlyCloudy","rainy","snowy","stormy","sunny","Player","props","forecast","player","Weather","toLowerCase","weatherImage","includes","react","Position","onRemove","style","fontWeight","Team","Name","Projected","Price","Opp","display","alignItems","src","alt","height","details","DfsGrid","backgroundColor","site","dfsLineup","map","playerIndex","DfsGrid_Player","removePlayer","Optimizer","_this","call","dfsSportChange","event","sport","target","fetchOptimalLineups","prevSport","state","setState","isLoading","fetch","then","response","status","alert","json","lineupJson","ingestDfsLineup","remove","length","fdLineup","dkLineup","removePlayerFromDfsLineup","lineupIndex","removedPlayer","method","body","gridSection","_this2","_this$state","football2","DfsGrid_DfsGrid","Container","fluid","Navbar","bg","variant","Nav","Link","ref","onChange","marginTop","JQXLite","JqxPopover","jqx","widgetId","generateID","componentSelector","id","options","manageAttributes","createComponent","properties","item","itemTwo","indexOf","css","undefined","classes","split","i","addClass","template","html","jqxPopover","Error","resultToReturn","name","callbackFn","on","off","arg","children","React","plus","minus","up","down","Rank","isUserPlayer","flexDirection","onMove","PlayerListBox","borderCollapse","playerList","index","filterList","PlayerListBox_Player","addPlayer","UserListBox","userRoundList","roundIndex","marginBottom","colSpan","textAlign","direction","movePlayer","DraftResultsTable","frequencyData","Round","Frequency","Simulator","fetchPlayersForSimulator","players","handleSliderChange","param","defineProperty","closeAbout","refs","about","close","url","pathname","toString","closeInstructions","instructions","swapRankings","newSite","saveRankings","userPlayers","every","roundList","JSON","stringify","loadRankings","userRanking","_this$state2","allPlayers","concat","flat","sort","b","allLoadedPlayers","_loop","userPlayerRank","findIndex","splice","filteredPlayers","filterPlayers","text","filter","searchText","_this$state3","playerToAdd","push","_this$state4","removedPlayerRank","originalPlayerNeighbor","find","clearPlayers","_this$state5","allUserPlayers","determineIfRandom","isRandom","checked","simulateDrafts","draftCancelled","isDrafting","_this$state6","teamCount","pickOrder","roundCount","playerNames","draftResults","generateDraftOutput","userFreqs","UserFrequencies","allFreqs","AllFrequencies","expectedTeam","ExpectedTeam","toggleFrequencyData","playerListBox","draftResultsTable","_this$state7","football","PlayerListBox_PlayerListBox","DraftResultsTable_DraftResultsTable","swapButtonText","swapButtonColor","react_jqxpopover_JqxPopover","isModal","width","position","title","selector","float","padding","borderRadius","search","type","fontSize","PlayerListBox_UserListBox","borderStyle","min","max","step","App","Homepage_Homepage","Simulator_Simulator","Optimizer_Optimizer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.4f88795b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/football.c5005feb.ico\";","module.exports = __webpack_public_path__ + \"media/football2.fac02615.svg\";","module.exports = __webpack_public_path__ + \"media/search.04c89f3b.ico\";","module.exports = __webpack_public_path__ + \"media/cloudy.340c3269.ico\";","module.exports = __webpack_public_path__ + \"media/partlycloudy.a5e52894.ico\";","module.exports = __webpack_public_path__ + \"media/rainy.dda0cf39.ico\";","module.exports = __webpack_public_path__ + \"media/snowy.203024ab.ico\";","module.exports = __webpack_public_path__ + \"media/stormy.ca70c957.ico\";","module.exports = __webpack_public_path__ + \"media/sunny.a306062d.ico\";","module.exports = __webpack_public_path__ + \"media/plus.220c44df.ico\";","module.exports = __webpack_public_path__ + \"media/minus.5edbe473.ico\";","module.exports = __webpack_public_path__ + \"media/up.04732abf.ico\";","module.exports = __webpack_public_path__ + \"media/down.61889039.ico\";","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nexport class Homepage extends Component {\r\n\r\n    render() {\r\n        return (\r\n                <div className={'Home'}>\r\n                    <h1 className={'Home-header'}>Welcome to Draft Simulator!</h1>\r\n                    <h3 className={'Dfs-header'}>To start, click the link below:</h3>\r\n                    <div className={\"Home-buttons\"}>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/simulate'}}\r\n                            className={'Site-button'}>Simulator</button>\r\n                    </div>\r\n                    <h3 className={'Dfs-header'}>Or, check out our DFS Optimizer:</h3>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/optimize'}}\r\n                            className={'Dfs-button'}>DFS Optimizer</button>\r\n                    <button onClick={() => {window.location.href = window.location.origin + '/logout'}}\r\n                            className={'Logout-button'}>Log Out</button>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Position: string,\r\n    Team: string,\r\n    Name: string,\r\n    Projected: number,\r\n    Price: string,\r\n    Opp: string,\r\n    Weather: any\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    onRemove: () => void\r\n}\r\n\r\nconst cloudy = require(\"./icons/cloudy.ico\") as any;\r\nconst partlyCloudy = require(\"./icons/partlycloudy.ico\") as any;\r\nconst rainy = require(\"./icons/rainy.ico\") as any;\r\nconst snowy = require(\"./icons/snowy.ico\") as any;\r\nconst stormy = require(\"./icons/stormy.ico\") as any;\r\nconst sunny = require(\"./icons/sunny.ico\") as any;\r\n\r\nconst Player = (props: playerProps) => {\r\n    const forecast = props.player.Weather.forecast.toLowerCase();\r\n    const weatherImage =\r\n        (forecast.includes('partly')) ? partlyCloudy :\r\n        (forecast.includes('cloud')) ? cloudy :\r\n        (forecast.includes('rain')) ? rainy :\r\n        (forecast.includes('snow')) ? snowy :\r\n        (forecast.includes('storm')) ? stormy :\r\n        (forecast.includes('sun')) ? sunny : null;\r\n\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {props.player.Position && <button onClick={props.onRemove} style={{fontWeight: 'bold'}}>X</button>}\r\n            </td>\r\n            <td>{props.player.Position}</td>\r\n            <td>{props.player.Team}</td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>{props.player.Name}</td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>{props.player.Projected}</td>\r\n            <td style={{fontWeight: (props.player.Position) ? 'normal' : 'bold'}}>{props.player.Price}</td>\r\n            <td>{props.player.Opp}</td>\r\n            <td style={{display: 'flex', alignItems: 'center'}}>\r\n                {props.player.Weather.forecast && <img src={weatherImage} alt={\"weather\"} style={{height: '4vmin'}}/>}\r\n                <p>{props.player.Weather.details}</p>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport const DfsGrid = (props: {\r\n        dfsLineup: playerAttributes[],\r\n        removePlayer: (playerIndex: number, site: string) => void,\r\n        site: string}) =>\r\n    <table className={'Dfs-grid'}>\r\n        <tr style={{backgroundColor: (props.site === 'fd') ? 'dodgerblue' : 'black'}}>\r\n            <th>Exclude</th>\r\n            <th>Position</th>\r\n            <th>Team</th>\r\n            <th>Player</th>\r\n            <th>Projected</th>\r\n            <th>Price</th>\r\n            <th>Opp</th>\r\n            <th>Weather</th>\r\n        </tr>\r\n        {props.dfsLineup.map(\r\n            (player, playerIndex) => (\r\n                <Player player={player} onRemove={() => props.removePlayer(playerIndex, props.site)}/>\r\n            )\r\n        )}\r\n    </table>;\r\n","import React, { Component } from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap'\r\nimport { DfsGrid } from './DfsGrid.tsx';\r\nimport football2 from './icons/football2.svg';\r\n\r\nexport class Optimizer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isLoading: false, sport: '', fdLineup: [], dkLineup: []};\r\n    }\r\n\r\n    dfsSportChange = (event) => {\r\n        let sport = event.target.value;\r\n        if (sport !== 'none') {\r\n            this.fetchOptimalLineups(sport);\r\n        }\r\n    };\r\n\r\n    fetchOptimalLineups = (sport) => {\r\n        if (!sport) {\r\n            alert('Please select a sport.');\r\n        } else {\r\n            let prevSport = this.state.sport;\r\n            this.setState({isLoading: true, sport: sport});\r\n            fetch(window.location.origin + '/optimized-lineup/' + sport)\r\n                .then(response => {\r\n                    if (response.status !== 200) {\r\n                        alert('Failed to generate lineups.');\r\n                    } else {\r\n                        response.json()\r\n                            .then((lineupJson) => {\r\n                                this.ingestDfsLineup(lineupJson, sport, prevSport, false);\r\n                            });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    ingestDfsLineup = (lineupJson, sport, prevSport, remove) => {\r\n        if (!remove) {\r\n            if (lineupJson.length === 1) {\r\n                this.setState({isLoading: false, sport: prevSport});\r\n                alert(lineupJson[0]);\r\n                return\r\n            }\r\n            if (typeof lineupJson[0] === \"string\") {\r\n                alert(lineupJson[0]);\r\n            } else if (lineupJson.length === 2 && lineupJson[1] === \"string\") {\r\n                alert(lineupJson[1]);\r\n            }\r\n        }\r\n        let fdLineup = (typeof lineupJson[0] === \"string\") ? this.state.fdLineup : lineupJson[0];\r\n        let dkLineup = (typeof lineupJson[1] === \"string\") ? this.state.dkLineup : lineupJson[1];\r\n        this.setState({isLoading: false, fdLineup: fdLineup, dkLineup: dkLineup});\r\n    };\r\n\r\n    removePlayerFromDfsLineup = (lineupIndex, site) => {\r\n        let sport = this.state.sport;\r\n        let removedPlayer = (site === 'fd') ? this.state.fdLineup[lineupIndex].Name : this.state.dkLineup[lineupIndex].Name;\r\n        fetch(window.location.origin + '/optimized-lineup/' + sport, {\r\n            method: 'POST',\r\n            body: removedPlayer + '|' + site\r\n        }).then(response => {\r\n            if (response.status !== 200) {\r\n                alert('Error removing player.');\r\n            } else {\r\n                response.json()\r\n                    .then((lineupJson) => {\r\n                        this.ingestDfsLineup(lineupJson, sport, true);\r\n                        let alertString = (site === 'fd') ?\r\n                            ' from your Fanduel lineup.' : ' from your Draftkings lineup.';\r\n                        alert('You have removed ' + removedPlayer + alertString);\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {isLoading, sport, fdLineup, dkLineup} = this.state;\r\n        let gridSection;\r\n\r\n        if (isLoading) {\r\n            gridSection =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Optimizing-text\"}>Optimizing . . .</p></div>\r\n                    <div><img src={football2} className={\"App-logo2\"} alt=\"football2\"/></div>\r\n                </div>;\r\n        } else {\r\n            gridSection =\r\n                <div className={\"Dfs-grid-section\"}>\r\n                    <div>\r\n                        <h2 className={\"Dfs-header\"}>Fanduel</h2>\r\n                        <DfsGrid dfsLineup={fdLineup} removePlayer={this.removePlayerFromDfsLineup} site={'fd'}/>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className={\"Dfs-header\"}>Draftkings</h2>\r\n                        <DfsGrid dfsLineup={dkLineup} removePlayer={this.removePlayerFromDfsLineup} site={'dk'}/>\r\n                    </div>\r\n                </div>;\r\n        }\r\n\r\n        return (\r\n            <Container fluid={true}>\r\n                <Navbar bg=\"primary\" variant=\"dark\">\r\n                    <Nav className=\"Nav-bar\">\r\n                        <Nav.Link href=\"/home\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/simulate\">Back to Draft Simulator</Nav.Link>\r\n                        <Nav.Link href=\"/logout\">Logout</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <h1 className={\"App-header\"}>DFS Optimizer</h1>\r\n                <div className={\"Dfs-sport\"}>\r\n                    <h3>Choose a sport:</h3>\r\n                    <select ref={\"dropDown\"} className={\"Drop-down\"} onChange={this.dfsSportChange} value={sport}>\r\n                        <option value=\"none\"> </option>\r\n                        <option value=\"mlb\">MLB</option>\r\n                        <option value=\"nfl\">NFL</option>\r\n                        <option value=\"nba\">NBA</option>\r\n                    </select>\r\n                    <button style={{marginTop: '10px'}}\r\n                            onClick={() => this.fetchOptimalLineups(sport)}>Reset</button>\r\n                </div>\r\n                {gridSection}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","/*\r\njQWidgets v7.1.0 (2019-Feb)\r\nCopyright (c) 2011-2019 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\r\n/* eslint-disable */\r\n\r\nimport 'jqwidgets-framework/jqwidgets/styles/jqx.base.css';\r\nimport 'jqwidgets-framework/jqwidgets/jqxcore.js';\r\nimport 'jqwidgets-framework/jqwidgets/jqxpopover.js';\r\n\r\nimport React from 'react';\r\n\r\nconst JQXLite = window.JQXLite;\r\n\r\nexport const jqx = window.jqx;\r\n\r\nexport default class JqxPopover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const widgetId = 'jqxPopover' + JQXLite.generateID();\r\n        this.componentSelector = '#' + widgetId;\r\n        this.state = { id: widgetId };\r\n    };\r\n    componentDidMount() {\r\n        const options = this.manageAttributes();\r\n        this.createComponent(options);\r\n    };\r\n    manageAttributes() {\r\n        const properties = ['arrowOffsetValue','animationOpenDelay','animationCloseDelay','autoClose','animationType','height','initContent','isModal','offset','position','rtl','selector','showArrow','showCloseButton','width','title','theme'];\r\n        let options = {};\r\n        for(let item in this.props) {\r\n            if(item === 'settings') {\r\n                for(let itemTwo in this.props[item]) {\r\n                    options[itemTwo] = this.props[item][itemTwo];\r\n                }\r\n            } else {\r\n                if(properties.indexOf(item) !== -1) {\r\n                      options[item] = this.props[item];\r\n                }\r\n            }\r\n        }\r\n        return options;\r\n    };\r\n    createComponent(options) {\r\n        if(!this.style) {\r\n            for (let style in this.props.style) {\r\n                JQXLite(this.componentSelector).css(style, this.props.style[style]);\r\n            }\r\n        }\r\n        if(this.props.className !== undefined) {\r\n            const classes = this.props.className.split(' ');\r\n            for (let i = 0; i < classes.length; i++ ) {\r\n                JQXLite(this.componentSelector).addClass(classes[i]);\r\n            }\r\n        }\r\n        if(!this.template) {\r\n            JQXLite(this.componentSelector).html(this.props.template);\r\n        }\r\n        JQXLite(this.componentSelector).jqxPopover(options);\r\n    };\r\n    setOptions(options) {\r\n        JQXLite(this.componentSelector).jqxPopover('setOptions', options);\r\n    };\r\n    getOptions() {\r\n        if(arguments.length === 0) {\r\n            throw Error('At least one argument expected in getOptions()!');\r\n        }\r\n        let resultToReturn = {};\r\n        for(let i = 0; i < arguments.length; i++) {\r\n            resultToReturn[arguments[i]] = JQXLite(this.componentSelector).jqxPopover(arguments[i]);\r\n        }\r\n        return resultToReturn;\r\n    };\r\n    on(name,callbackFn) {\r\n        JQXLite(this.componentSelector).on(name,callbackFn);\r\n    };\r\n    off(name) {\r\n        JQXLite(this.componentSelector).off(name);\r\n    };\r\n    arrowOffsetValue(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('arrowOffsetValue');\r\n        }\r\n    };\r\n    animationOpenDelay(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationOpenDelay', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationOpenDelay');\r\n        }\r\n    };\r\n    animationCloseDelay(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationCloseDelay', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationCloseDelay');\r\n        }\r\n    };\r\n    autoClose(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('autoClose', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('autoClose');\r\n        }\r\n    };\r\n    animationType(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('animationType', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('animationType');\r\n        }\r\n    };\r\n    height(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('height', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('height');\r\n        }\r\n    };\r\n    initContent(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('initContent', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('initContent');\r\n        }\r\n    };\r\n    isModal(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('isModal', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('isModal');\r\n        }\r\n    };\r\n    offset(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('offset', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('offset');\r\n        }\r\n    };\r\n    position(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('position', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('position');\r\n        }\r\n    };\r\n    rtl(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('rtl', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('rtl');\r\n        }\r\n    };\r\n    selector(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('selector', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('selector');\r\n        }\r\n    };\r\n    showArrow(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('showArrow', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('showArrow');\r\n        }\r\n    };\r\n    showCloseButton(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('showCloseButton', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('showCloseButton');\r\n        }\r\n    };\r\n    width(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('width', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('width');\r\n        }\r\n    };\r\n    title(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('title', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('title');\r\n        }\r\n    };\r\n    theme(arg) {\r\n        if (arg !== undefined) {\r\n            JQXLite(this.componentSelector).jqxPopover('theme', arg)\r\n        } else {\r\n            return JQXLite(this.componentSelector).jqxPopover('theme');\r\n        }\r\n    };\r\n    close() {\r\n        JQXLite(this.componentSelector).jqxPopover('close');\r\n    };\r\n    destroy() {\r\n        JQXLite(this.componentSelector).jqxPopover('destroy');\r\n    };\r\n    open() {\r\n        JQXLite(this.componentSelector).jqxPopover('open');\r\n    };\r\n    render() {\r\n        return (\r\n            <div id={this.state.id}>{this.props.value}{this.props.children}</div>\r\n        )\r\n    };\r\n};\r\n\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Rank: number,\r\n    Name: string,\r\n    Position: string,\r\n    Team: string,\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    isUserPlayer: boolean,\r\n    onChange: () => void,\r\n    onMove: (direction: string) => void\r\n}\r\n\r\nconst plus = require(\"./icons/plus.ico\") as any;\r\nconst minus = require(\"./icons/minus.ico\") as any;\r\nconst up = require(\"./icons/up.ico\") as any;\r\nconst down = require(\"./icons/down.ico\") as any;\r\n\r\nconst Player = (props: playerProps) =>\r\n    <tr>\r\n        <td>{props.player.Rank}</td>\r\n        <td>\r\n            <tr style={{fontWeight: 'bold'}}>{props.player.Name}</tr>\r\n            <tr>{props.player.Team} {props.player.Position}</tr>\r\n        </td>\r\n        <td>\r\n            <img src={(props.isUserPlayer) ? minus : plus} alt={\"add-or-remove\"} onClick={props.onChange} style={{height: '3vmin'}}/>\r\n        </td>\r\n        {props.isUserPlayer && (\r\n            <td style={{display: 'flex', flexDirection: 'column'}}>\r\n                <img src={up} alt={\"up\"} onClick={() => props.onMove('up')} style={{height: '3vmin'}}/>\r\n                <img src={down} alt={\"down\"} onClick={() => props.onMove('down')} style={{height: '3vmin'}}/>\r\n            </td>\r\n            )\r\n        }\r\n    </tr>;\r\n\r\nexport const PlayerListBox = (props: {\r\n    playerList: playerAttributes[],\r\n    filterList: playerAttributes[],\r\n    addPlayer: (index: number) => void }) =>\r\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\r\n            {props.playerList.map(\r\n                (player, index) => {\r\n                    if (!props.filterList || props.filterList.includes(player)) {\r\n                        return (\r\n                            <Player player={player}\r\n                                        isUserPlayer={false}\r\n                                        onChange={() => props.addPlayer(index)}\r\n                                        onMove={null}\r\n                            />\r\n                        )\r\n                    }\r\n                }\r\n            )}\r\n        </table>;\r\n\r\nexport const UserListBox = (props: {\r\n    userRoundList: [playerAttributes[]],\r\n    removePlayer: (roundIndex: number, index: number) => void,\r\n    movePlayer: (roundIndex: number, index: number, direction: string) => void}) =>\r\n        props.userRoundList.map(\r\n            (playerList, roundIndex) => {\r\n                return (\r\n                    <table style={{borderCollapse: 'collapse', marginBottom: '5vmin'}} className={'Draft-grid'}>\r\n                        <th colSpan={4} style={{textAlign: 'center'}}>{'Round ' + (roundIndex + 1)}</th>\r\n                        {playerList.map(\r\n                            (player, index) => (\r\n                                <Player player={player}\r\n                                        isUserPlayer={true}\r\n                                        onChange={() => props.removePlayer(roundIndex, index)}\r\n                                        onMove={(direction) => props.movePlayer(roundIndex, index, direction)}\r\n                                />\r\n                            )\r\n                        )}\r\n                    </table>\r\n                )\r\n            });\r\n","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    Name: string,\r\n    Position: string,\r\n    Team: string,\r\n    Round: number,\r\n    Frequency: string\r\n}\r\n\r\nexport const DraftResultsTable = (props: {\r\n    frequencyData: playerAttributes[]}) =>\r\n    <table>\r\n        <tr>\r\n            <th>Player</th>\r\n            <th>Round</th>\r\n            <th>Draft Frequency</th>\r\n        </tr>\r\n        {props.frequencyData.map(\r\n            (player) => (\r\n                <tr>\r\n                    <td>\r\n                        <tr style={{fontWeight: 'bold'}}>{player.Name}</tr>\r\n                        <tr>{player.Team} {player.Position}</tr>\r\n                    </td>\r\n                    <td>{player.Round}</td>\r\n                    <td>{player.Frequency}</td>\r\n                </tr>\r\n            )\r\n        )}\r\n    </table>;","import React, {Component} from 'react'\r\nimport { Container, Nav, Navbar } from 'react-bootstrap'\r\nimport './App.css';\r\nimport JqxPopover from './jqxwidgets/react_jqxpopover'\r\nimport { PlayerListBox, UserListBox } from \"./PlayerListBox.tsx\"\r\nimport { DraftResultsTable } from \"./DraftResultsTable.tsx\";\r\nimport football from './icons/football.ico'\r\nimport search from './icons/search.ico'\r\n\r\nexport class Simulator extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isLoading: true, players: [], searchText: '', filteredPlayers: null, site: 'espn',\r\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\r\n            teamCount: 10, pickOrder: 5, roundCount: 16, isDrafting: false, isRandom: false,\r\n            allFreqs: [], userFreqs: [], expectedTeam: [], frequencyData: []};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPlayersForSimulator(this.state.site);\r\n    }\r\n\r\n    fetchPlayersForSimulator = (site) => {\r\n        this.setState({isLoading: true});\r\n        fetch(window.location.origin + '/' + site + '-players')\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Could not load players.');\r\n                } else {\r\n                    response.json()\r\n                        .then((players) => {\r\n                            this.setState({\r\n                                isLoading: false,\r\n                                players: players,\r\n                                site: site\r\n                            });\r\n                        })\r\n                }\r\n            });\r\n    };\r\n\r\n    handleSliderChange = (param, event) => {\r\n        this.setState({[param]: event.target.value})\r\n    };\r\n\r\n    closeAbout = () => {\r\n        this.refs.about.close();\r\n        let url = window.location.pathname.split('#');\r\n        window.location.href = window.location.origin + url[0].toString() + '#';\r\n    };\r\n\r\n    closeInstructions = () => {\r\n        this.refs.instructions.close();\r\n        let url = window.location.pathname.split('#');\r\n        window.location.href = window.location.origin + url[0].toString() + '#';\r\n    };\r\n\r\n    swapRankings = () => {\r\n        let newSite = (this.state.site === 'espn') ? 'yahoo' : 'espn';\r\n        this.fetchPlayersForSimulator(newSite);\r\n    };\r\n\r\n    saveRankings = () => {\r\n        let {userPlayers, site} = this.state;\r\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\r\n            alert('Please rank at least one player before saving.');\r\n        } else {\r\n            fetch(window.location.origin + '/save-ranking/' + site, {\r\n                method: 'POST',\r\n                body: JSON.stringify(userPlayers)\r\n            }).then(response => {\r\n                if (response.status === 200) {\r\n                    alert('User ranking saved successfully.');\r\n                } else {\r\n                    alert('User ranking unable to be saved.');\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    loadRankings = () => {\r\n        let site = this.state.site;\r\n        fetch(window.location.origin + '/load-ranking/' + site)\r\n            .then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Could not load user ranking data.');\r\n                }  else {\r\n                    response.json()\r\n                        .then((userRanking) => {\r\n                            if (userRanking[0] === 'No ranking specified.') {\r\n                                alert(userRanking[0]);\r\n                            } else {\r\n                                let {players, userPlayers} = this.state;\r\n                                let allPlayers = players.concat(userPlayers.flat());\r\n                                players = allPlayers.sort((a, b) => a.Rank - b.Rank);\r\n                                let allLoadedPlayers = userRanking.flat();\r\n                                for (let i = 0; i < allLoadedPlayers.length; i++) {\r\n                                    let userPlayerRank = allLoadedPlayers[i].Rank;\r\n                                    let playerIndex = players.findIndex(\r\n                                        (player) => player.Rank === userPlayerRank);\r\n                                    players.splice(playerIndex, 1);\r\n                                }\r\n                                this.setState({\r\n                                    players: players,\r\n                                    userPlayers: userRanking,\r\n                                    filteredPlayers: null\r\n                                })\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n    };\r\n\r\n    filterPlayers = (event) => {\r\n        let text = event.target.value.toLowerCase();\r\n        let players = this.state.players;\r\n        let filteredPlayers = players.filter(\r\n            (player) =>\r\n                player.Name.toLowerCase().includes(text)\r\n                || player.Position.toLowerCase().includes(text)\r\n                || player.Team.toLowerCase().includes(text)\r\n        );\r\n        this.setState({\r\n            searchText: text,\r\n            filteredPlayers: filteredPlayers});\r\n    };\r\n\r\n    addPlayer = (playerIndex) => {\r\n        let {players, userPlayers} = this.state;\r\n        let playerToAdd = players[playerIndex];\r\n        players.splice(playerIndex, 1);\r\n        userPlayers[0].push(playerToAdd);\r\n        this.setState({\r\n            players: players,\r\n            userPlayers: userPlayers,\r\n            filteredPlayers: null,\r\n            searchText: ''\r\n        });\r\n    };\r\n\r\n    removePlayer = (roundIndex, playerIndex) => {\r\n        let {players, userPlayers} = this.state;\r\n        let roundList = userPlayers[roundIndex];\r\n        let removedPlayer = roundList[playerIndex];\r\n        let removedPlayerRank = removedPlayer.Rank;\r\n        const originalPlayerNeighbor = players.find((player) => player.Rank > removedPlayerRank);\r\n        players.splice(players.indexOf(originalPlayerNeighbor), 0, removedPlayer);\r\n        roundList.splice(playerIndex, 1);\r\n        this.setState({\r\n            players: players,\r\n            userPlayers: userPlayers\r\n        });\r\n    };\r\n\r\n    clearPlayers = () => {\r\n        let {players, userPlayers} = this.state;\r\n        let allUserPlayers = userPlayers.flat();\r\n        let allPlayers = players.concat(allUserPlayers);\r\n        this.setState({\r\n            players: allPlayers.sort((a, b) => a.Rank - b.Rank),\r\n            userPlayers: [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\r\n            filteredPlayers: null\r\n        });\r\n    };\r\n\r\n    movePlayer = (roundIndex, playerIndex, direction) => {\r\n        let userPlayers = this.state.userPlayers;\r\n        let roundList = userPlayers[roundIndex];\r\n        let player = roundList[playerIndex];\r\n        userPlayers[roundIndex].splice(playerIndex, 1);\r\n        if (direction === 'up') {\r\n            if (playerIndex > 0) {\r\n                userPlayers[roundIndex].splice(playerIndex - 1, 0, player);\r\n            } else if (roundIndex > 0) {\r\n                userPlayers[roundIndex - 1].push(player);\r\n            } else {\r\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\r\n            }\r\n        } else if (direction === 'down') {\r\n            if (playerIndex < roundList.length) {\r\n                roundList.splice(playerIndex + 1, 0, player);\r\n            } else if (roundIndex < userPlayers.length - 1) {\r\n                userPlayers[roundIndex + 1].splice(0, 0, player);\r\n            } else {\r\n                userPlayers[roundIndex].splice(playerIndex, 0, player);\r\n            }\r\n        }\r\n        this.setState({userPlayers: userPlayers});\r\n    };\r\n\r\n    determineIfRandom = (event) => {\r\n        this.setState({isRandom: event.target.checked})\r\n    };\r\n\r\n    simulateDrafts = (draftCancelled) => {\r\n        if (draftCancelled) {\r\n            this.setState({isDrafting: false});\r\n            return\r\n        }\r\n        let {userPlayers, teamCount, pickOrder, roundCount, site} = this.state;\r\n        if (userPlayers.every((roundList) => roundList.length === 0)) {\r\n            alert('Please select at least one player to draft.');\r\n        } else {\r\n            let playerNames = userPlayers.map((roundList) => roundList.map((player) => player.Name));\r\n            this.setState({isDrafting: true});\r\n            fetch(window.location.origin + '/draft-results', {\r\n                method: 'POST',\r\n                body: JSON.stringify(playerNames) + '|' + teamCount + '|' + pickOrder + '|' + roundCount + '|' + site\r\n            }).then(response => {\r\n                if (response.status !== 200) {\r\n                    alert('Error loading draft results.');\r\n                } else {\r\n                    response.json()\r\n                        .then((draftResults) => {\r\n                            if (typeof draftResults[0] == \"string\") {\r\n                                alert(draftResults[0]);\r\n                            } else {\r\n                                this.generateDraftOutput(draftResults);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    generateDraftOutput = (draftResults) => {\r\n        if (draftResults === ['Draft error!']) {\r\n            alert('No players were drafted. :( \\nSomething went wrong . . .');\r\n        }\r\n        this.setState({\r\n            isDrafting: false,\r\n            userFreqs: draftResults.UserFrequencies,\r\n            allFreqs: draftResults.AllFrequencies,\r\n            expectedTeam: draftResults.ExpectedTeam,\r\n            frequencyData: draftResults.UserFrequencies\r\n        });\r\n    };\r\n\r\n    toggleFrequencyData = (frequencyData) => {\r\n        this.setState({frequencyData: frequencyData});\r\n    };\r\n\r\n    render() {\r\n        const {isLoading, players, filteredPlayers, site,\r\n            userPlayers, teamCount, pickOrder, roundCount, isDrafting, isRandom,\r\n            userFreqs, allFreqs, expectedTeam, frequencyData} = this.state;\r\n        let playerListBox, draftResultsTable;\r\n\r\n        if (isLoading) {\r\n            playerListBox =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Loading-text\"}>Loading players . . .</p></div>\r\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\r\n                </div>;\r\n        } else {\r\n            playerListBox =\r\n                <PlayerListBox playerList={players} filterList={filteredPlayers} addPlayer={this.addPlayer}/>;\r\n        }\r\n        if (isDrafting) {\r\n            draftResultsTable =\r\n                <div className={\"Loading\"}>\r\n                    <div><p className={\"Loading-text\"}>Drafting . . .</p></div>\r\n                    <div><img src={football} className={\"App-logo\"} alt=\"football\"/></div>\r\n                    <div>\r\n                        <button onClick={() => this.simulateDrafts(true)}\r\n                                className={\"Cancel-draft-button\"}>Cancel</button>\r\n                    </div>\r\n                </div>;\r\n        } else {\r\n            draftResultsTable = <DraftResultsTable frequencyData={frequencyData}/>;\r\n        }\r\n\r\n        const swapButtonText = (site === 'espn') ? 'Switch to Yahoo' : 'Switch to ESPN';\r\n        const swapButtonColor = (site === 'espn') ? '#6C00B3' : '#CE0000';\r\n\r\n        return (\r\n            <Container fluid={true}>\r\n                <Navbar bg=\"primary\" variant=\"dark\">\r\n                    <Nav className=\"Nav-bar\">\r\n                      <Nav.Link href=\"/\">Home</Nav.Link>\r\n                      <Nav.Link href=\"#about\">About</Nav.Link>\r\n                      <Nav.Link href=\"#instructions\">Instructions</Nav.Link>\r\n                      <Nav.Link href=\"/optimize\">DFS Optimizer</Nav.Link>\r\n                        <Nav.Link href=\"/logout\">Logout</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <div className={\"Info-buttons\"}>\r\n                    <JqxPopover ref='about' isModal={true} width={310}\r\n                        position={'bottom'} title={'About Draft Simulator'} selector={'a[href$=\"#about\"]'}>\r\n                        <p>Draft Simulator is a fantasy football draft preparation tool.</p>\r\n                        <p>More often than not, others in your league will only draft among the \"top available\r\n                            players\" in each round, which are determined by ESPN's preseason rankings.</p>\r\n                        <p>However, Draft Simulator allows you to create and refine your own personal rankings that\r\n                            you can bring to your draft to get the team you've always dreamed of.</p>\r\n                        <button onClick={this.closeAbout}\r\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\r\n                            Got it!</button>\r\n                    </JqxPopover>\r\n                    <JqxPopover ref='instructions' isModal={true} width={310}\r\n                        position={'bottom'} title={'Instructions'} selector={'a[href$=\"#instructions\"]'}>\r\n                        <ol>\r\n                            <li>Search for and select players from the player list. These should be players you'd\r\n                                feel strongly about drafting.</li>\r\n                            <li>Click \"Add\" to move them to your preferred list.</li>\r\n                            <li>Drag and drop your players in order of overall preference.</li>\r\n                            <li>Adjust the sliders to your desired specifications, then click \"Draft\".</li>\r\n                            <li>See how often you were able to draft each player under the \"Draft Frequency\"\r\n                                tab.</li>\r\n                            <li>The \"All Players\" tab shows the draft frequency of all players taken, not just your\r\n                                preferred players.</li>\r\n                            <li>The \"Expected Team\" tab shows your most likely fantasy team given the\r\n                                simulations.</li>\r\n                        </ol>\r\n                        <button onClick={this.closeInstructions}\r\n                        style={{ float: 'right', marginTop: '10px', padding: '8px 12px', borderRadius: '6px' }}>\r\n                            Let's draft!</button>\r\n                    </JqxPopover>\r\n                </div>\r\n                <h1 className={\"App-header\"}>Draft Simulator</h1>\r\n                <div className={\"Buttons-and-boxes\"}>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <div>\r\n                            {!filteredPlayers && <img src={search} style={{height: '3vmin', position: 'absolute'}}\r\n                                                      alt=\"search\"/>}\r\n                            <input type=\"text\" style={{height: '25px', width: '90%'}}\r\n                                   value={this.state.searchText}\r\n                                   onClick={this.filterPlayers}\r\n                                   onChange={this.filterPlayers}>{null}</input>\r\n                        </div>\r\n                        {playerListBox}\r\n                    </div>\r\n                    <div className={\"Player-buttons\"}>\r\n                        <button onClick={this.clearPlayers} style={{fontSize: 16}}\r\n                                className={\"Clear-button\"}>Clear</button>\r\n                        <button id='rankingButton' onClick={this.loadRankings}\r\n                                className={\"Ranking-button\"}>Load Saved Rankings</button>\r\n                        <button id='swapButton' style={{backgroundColor: swapButtonColor}}\r\n                                onClick={this.swapRankings} className={\"Swap-button\"}>{swapButtonText}</button>\r\n                    </div>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <UserListBox userRoundList={userPlayers} removePlayer={this.removePlayer}\r\n                                     movePlayer={this.movePlayer} className={\"Player-list-box\"}/>\r\n                    </div>\r\n                    <div className={\"Draft-buttons\"}>\r\n                        <button onClick={this.saveRankings} style={{fontSize: 16}}\r\n                                className={\"Ranking-button\"}>Save Player Rankings</button>\r\n                        <button onClick={() => this.simulateDrafts(false)}\r\n                                style={{fontSize: 16}} className={\"Draft-button\"}>Draft!</button>\r\n                    </div>\r\n                    <div className={\"Player-list-box\"}>\r\n                        <tr>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(userFreqs)}\r\n                                style={{borderStyle: (frequencyData === userFreqs) ?\r\n                                        'inset' : 'outset'}}>Your Players</button>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(allFreqs)}\r\n                                style={{borderStyle: (frequencyData === allFreqs) ?\r\n                                        'inset' : 'outset'}}>All Players</button>\r\n                            <button\r\n                                onClick={() => this.toggleFrequencyData(expectedTeam)}\r\n                                style={{borderStyle: (frequencyData === expectedTeam) ?\r\n                                        'inset' : 'outset'}}>Expected Team</button>\r\n                        </tr>\r\n                        {draftResultsTable}\r\n                    </div>\r\n                </div>\r\n                <div className={\"Slider-row\"}>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Number of teams per draft:</p>\r\n                        <div>{teamCount}</div>\r\n                        <input type={\"range\"} min={6} max={14} step={2} value={teamCount}\r\n                               onChange={(event) => this.handleSliderChange('teamCount', event)}/>\r\n                    </div>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Your pick in the draft:</p>\r\n                        <div>{pickOrder}</div>\r\n                        <input type={\"range\"} min={1} max={teamCount} value={pickOrder}\r\n                                   onChange={(event) => this.handleSliderChange('pickOrder', event)}/>\r\n                        <form>\r\n                          <label>\r\n                            Randomize:\r\n                            <input type=\"checkbox\" checked={isRandom} onChange={this.determineIfRandom}/>\r\n                          </label>\r\n                        </form>\r\n                    </div>\r\n                    <div className={\"Sliders\"}>\r\n                        <p>Number of rounds per draft:</p>\r\n                        <div>{roundCount}</div>\r\n                        <input type={\"range\"} min={1} max={16} value={roundCount}\r\n                                   onChange={(event) => this.handleSliderChange('roundCount', event)}/>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Homepage } from \"./Homepage\";\r\nimport { Optimizer } from './Optimizer'\r\nimport { Simulator } from \"./Simulator\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        if (window.location.pathname === '/home') {\r\n            return <Homepage/>\r\n        } else if (window.location.pathname === '/simulate') {\r\n            return <Simulator/>\r\n        } else if (window.location.pathname === '/optimize') {\r\n            return <Optimizer/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}